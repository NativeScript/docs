{
  "title": "TimePicker",
  "hierarchy": [
    [
      {
        "text": "View",
        "link": "/api/class/View"
      }
    ],
    [
      {
        "text": "TimePicker"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        27382
      ]
    },
    {
      "title": "Properties",
      "items": [
        27423,
        27954,
        27719,
        27911,
        27905,
        27663,
        27662,
        27823,
        27824,
        27822,
        27821,
        27904,
        27625,
        27952,
        27931,
        27720,
        27951,
        27955,
        28013,
        27626,
        27623,
        27816,
        27820,
        27817,
        27819,
        27818,
        27953,
        27825,
        27958,
        27321,
        27323,
        27322,
        27413,
        27419,
        27414,
        27417,
        27421,
        27420,
        27422,
        27351,
        27415,
        27416,
        27418,
        27412,
        27815,
        27384,
        27426,
        27425,
        27424,
        27427,
        27428,
        27429,
        27395,
        27399,
        27410,
        27409,
        27404,
        27396,
        27400,
        27405,
        27406,
        27398,
        27403,
        27397,
        27407,
        27408,
        27402,
        27401,
        27430,
        27853,
        27805,
        27411,
        27808,
        27806,
        27809,
        27354,
        27581,
        27461,
        27462,
        27460,
        27355,
        27803,
        27810,
        27843,
        27844,
        27842,
        27841,
        27832,
        27801,
        27835,
        27836,
        27834,
        27833,
        27830,
        27829,
        27839,
        27840,
        27838,
        27837,
        27802,
        27831,
        27812,
        27813,
        27814,
        27434,
        27440,
        27386,
        27852,
        27717,
        27385,
        27458,
        27456,
        27457,
        27394,
        27856,
        27454,
        27624,
        27459,
        27857,
        27455,
        27318,
        27799,
        27352,
        27435,
        27439,
        27436,
        27438,
        27437,
        27389,
        27390,
        27432,
        27391,
        27392,
        27387,
        27393,
        27431,
        27556,
        27847,
        27846,
        27443,
        27811,
        27452,
        27453,
        27854,
        27850,
        27851,
        27447,
        27356,
        27950,
        27848,
        27444,
        27445,
        27446,
        27804,
        27807,
        27450,
        27451,
        27319,
        27320,
        27855,
        27715,
        27388,
        27800,
        27716,
        27718,
        27448,
        27449,
        27849,
        27353,
        27441,
        27845,
        27442,
        27433
      ]
    },
    {
      "title": "Accessors",
      "items": [
        27773,
        27777,
        27769,
        27781
      ]
    },
    {
      "title": "Methods",
      "items": [
        27883,
        27887,
        27932,
        27673,
        27959,
        27939,
        27593,
        28008,
        27900,
        27597,
        28005,
        27642,
        27688,
        27591,
        27595,
        27708,
        27649,
        27690,
        27705,
        27757,
        27967,
        27956,
        27726,
        27701,
        27906,
        27703,
        27682,
        27902,
        27603,
        27897,
        27763,
        27767,
        27765,
        27670,
        27679,
        27891,
        27894,
        27936,
        27633,
        27629,
        27667,
        27664,
        27627,
        27652,
        27723,
        27912,
        27711,
        27965,
        27753,
        27916,
        27656,
        27696,
        27618,
        27621,
        27582,
        27585,
        27734,
        27372,
        27942,
        27557,
        27876,
        27970,
        27972,
        27588,
        27750,
        27347,
        27560,
        27922,
        27945,
        27919,
        27926,
        27787,
        27609,
        27948,
        27500,
        27990,
        27577,
        27502,
        27570,
        27572,
        27574,
        27476,
        27478,
        27474,
        27563,
        27862,
        27858,
        27605,
        28002,
        27924,
        27467,
        27333,
        27494,
        27866,
        27463,
        27324,
        27993,
        27997,
        27505,
        27367,
        27513,
        27357,
        27579,
        27974,
        27362,
        27484,
        27721,
        27480,
        27874,
        27872,
        27742,
        27377,
        27785,
        27793,
        27341,
        27615,
        27982,
        27908,
        27490,
        27928,
        27607,
        27986,
        27795,
        27747,
        27880,
        27869
      ]
    }
  ],
  "reflections": {
    "27318": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/TimePicker#layoutchangedevent"
        }
      ]
    },
    "27319": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/TimePicker#showingmodallyevent"
        }
      ]
    },
    "27320": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/TimePicker#shownmodallyevent"
        }
      ]
    },
    "27321": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityblurevent"
        }
      ]
    },
    "27322": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityfocusevent"
        }
      ]
    },
    "27323": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityfocuschangedevent"
        }
      ]
    },
    "27324": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/TimePicker#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/TimePicker#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 550,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "27333": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/TimePicker#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/TimePicker#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 560,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27341": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/TimePicker#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/TimePicker#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 570,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "27347": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/TimePicker#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/TimePicker#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 572,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "27351": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#accessibilityperformescapeevent"
        }
      ]
    },
    "27352": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/TimePicker#loadedevent"
        }
      ]
    },
    "27353": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/TimePicker#unloadedevent"
        }
      ]
    },
    "27354": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/TimePicker#createdevent"
        }
      ]
    },
    "27355": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/TimePicker#disposenativeviewevent"
        }
      ]
    },
    "27356": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/TimePicker#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/TimePicker#propertychangeevent"
        }
      ]
    },
    "27357": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TimePicker#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27362": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TimePicker#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27367": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TimePicker#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27372": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TimePicker#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27377": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TimePicker#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27382": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/TimePicker#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new TimePicker(): <a href=\"/api/class/TimePicker\">TimePicker</a>",
          "url": "/api/class/TimePicker#constructor-new-timepicker",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Please note that should you be using the "
              },
              {
                "kind": "code",
                "text": "`new Observable({})`"
              },
              {
                "kind": "text",
                "text": " constructor, it is **obsolete** since v3.0,\nand you have to migrate to the \"data/observable\" "
              },
              {
                "kind": "code",
                "text": "`fromObject({})`"
              },
              {
                "kind": "text",
                "text": " or the "
              },
              {
                "kind": "code",
                "text": "`fromObjectRecursive({})`"
              },
              {
                "kind": "text",
                "text": " functions."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/TimePicker\">TimePicker</a>"
        }
      ]
    },
    "27384": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/TimePicker#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native [android.widget.TimePicker](http://developer.android.com/reference/android/widget/TimePicker.html) that represents the user interface for this component. Valid only when running on Android OS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 11,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native [android.widget.TimePicker](http://developer.android.com/reference/android/widget/TimePicker.html) that represents the user interface for this component. Valid only when running on Android OS."
              }
            ]
          },
          "url": "/api/class/TimePicker#android"
        }
      ]
    },
    "27385": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/TimePicker#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native iOS [UIDatePicker](http://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIDatePicker_Class/index.html) that represents the user interface for this component. Valid only when running on iOS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 16,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native iOS [UIDatePicker](http://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIDatePicker_Class/index.html) that represents the user interface for this component. Valid only when running on iOS."
              }
            ]
          },
          "url": "/api/class/TimePicker#ios"
        }
      ]
    },
    "27386": {
      "name": "hour",
      "type": "Property",
      "url": "/api/class/TimePicker#hour",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the time hour."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "hour: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 21,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the time hour."
              }
            ]
          },
          "url": "/api/class/TimePicker#hour"
        }
      ]
    },
    "27387": {
      "name": "minute",
      "type": "Property",
      "url": "/api/class/TimePicker#minute",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the time minute."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "minute: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 26,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the time minute."
              }
            ]
          },
          "url": "/api/class/TimePicker#minute"
        }
      ]
    },
    "27388": {
      "name": "time",
      "type": "Property",
      "url": "/api/class/TimePicker#time",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the time."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "time: Date",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 31,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the time."
              }
            ]
          },
          "url": "/api/class/TimePicker#time"
        }
      ]
    },
    "27389": {
      "name": "maxHour",
      "type": "Property",
      "url": "/api/class/TimePicker#maxhour",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the max time hour."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "maxHour: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 36,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the max time hour."
              }
            ]
          },
          "url": "/api/class/TimePicker#maxhour"
        }
      ]
    },
    "27390": {
      "name": "maxMinute",
      "type": "Property",
      "url": "/api/class/TimePicker#maxminute",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the max time minute."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "maxMinute: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 41,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the max time minute."
              }
            ]
          },
          "url": "/api/class/TimePicker#maxminute"
        }
      ]
    },
    "27391": {
      "name": "minHour",
      "type": "Property",
      "url": "/api/class/TimePicker#minhour",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the min time hour."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "minHour: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 46,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the min time hour."
              }
            ]
          },
          "url": "/api/class/TimePicker#minhour"
        }
      ]
    },
    "27392": {
      "name": "minMinute",
      "type": "Property",
      "url": "/api/class/TimePicker#minminute",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the min time minute."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "minMinute: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 51,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the min time minute."
              }
            ]
          },
          "url": "/api/class/TimePicker#minminute"
        }
      ]
    },
    "27393": {
      "name": "minuteInterval",
      "type": "Property",
      "url": "/api/class/TimePicker#minuteinterval",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minute interval."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "minuteInterval: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 56,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minute interval."
              }
            ]
          },
          "url": "/api/class/TimePicker#minuteinterval"
        }
      ]
    },
    "27394": {
      "name": "iosPreferredDatePickerStyle",
      "type": "Property",
      "url": "/api/class/TimePicker#iospreferreddatepickerstyle",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or set the UIDatePickerStyle of the date picker in iOS 13.4+. Defaults to 0.\nValid values are numbers:\n - 0: automatic (system picks the concrete style based on the current platform and date picker mode)\n - 1: wheels (the date picker displays as a wheel picker)\n - 2: compact (the date picker displays as a label that when tapped displays a calendar-style editor)\n - 3: inline  (the date pickers displays as an inline, editable field)"
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "iosPreferredDatePickerStyle: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/time-picker/index.d.ts",
              "line": 66,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or set the UIDatePickerStyle of the date picker in iOS 13.4+. Defaults to 0.\nValid values are numbers:\n - 0: automatic (system picks the concrete style based on the current platform and date picker mode)\n - 1: wheels (the date picker displays as a wheel picker)\n - 2: compact (the date picker displays as a label that when tapped displays a calendar-style editor)\n - 3: inline  (the date pickers displays as an inline, editable field)"
              }
            ]
          },
          "url": "/api/class/TimePicker#iospreferreddatepickerstyle"
        }
      ]
    },
    "27395": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/TimePicker#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/TimePicker#bindingcontext"
        }
      ]
    },
    "27396": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/TimePicker#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#bordercolor"
        }
      ]
    },
    "27397": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/TimePicker#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#bordertopcolor"
        }
      ]
    },
    "27398": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/TimePicker#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderrightcolor"
        }
      ]
    },
    "27399": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/TimePicker#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderbottomcolor"
        }
      ]
    },
    "27400": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/TimePicker#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderleftcolor"
        }
      ]
    },
    "27401": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderwidth"
        }
      ]
    },
    "27402": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#bordertopwidth"
        }
      ]
    },
    "27403": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderrightwidth"
        }
      ]
    },
    "27404": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderbottomwidth"
        }
      ]
    },
    "27405": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderleftwidth"
        }
      ]
    },
    "27406": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/TimePicker#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderradius"
        }
      ]
    },
    "27407": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/TimePicker#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#bordertopleftradius"
        }
      ]
    },
    "27408": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/TimePicker#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#bordertoprightradius"
        }
      ]
    },
    "27409": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/TimePicker#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderbottomrightradius"
        }
      ]
    },
    "27410": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/TimePicker#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#borderbottomleftradius"
        }
      ]
    },
    "27411": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/TimePicker#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#color"
        }
      ]
    },
    "27412": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/TimePicker#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessible"
        }
      ]
    },
    "27413": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityhidden"
        }
      ]
    },
    "27414": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityidentifier"
        }
      ]
    },
    "27415": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityrole"
        }
      ]
    },
    "27416": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilitystate"
        }
      ]
    },
    "27417": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilitylabel"
        }
      ]
    },
    "27418": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityvalue"
        }
      ]
    },
    "27419": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilityhint"
        }
      ]
    },
    "27420": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#accessibilityliveregion"
        }
      ]
    },
    "27421": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilitylanguage"
        }
      ]
    },
    "27422": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/TimePicker#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/TimePicker#accessibilitymediasession"
        }
      ]
    },
    "27423": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/TimePicker#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/TimePicker#androidcontentdescriptionupdated"
        }
      ]
    },
    "27424": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/TimePicker#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 290,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#automationtext"
        }
      ]
    },
    "27425": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/TimePicker#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 295,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/TimePicker#androidelevation"
        }
      ]
    },
    "27426": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/TimePicker#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 300,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/TimePicker#androiddynamicelevationoffset"
        }
      ]
    },
    "27427": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/TimePicker#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/TimePicker#background"
        }
      ]
    },
    "27428": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/TimePicker#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#backgroundcolor"
        }
      ]
    },
    "27429": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/TimePicker#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#backgroundimage"
        }
      ]
    },
    "27430": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/TimePicker#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#boxshadow"
        }
      ]
    },
    "27431": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/TimePicker#minwidth"
        }
      ]
    },
    "27432": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/TimePicker#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/TimePicker#minheight"
        }
      ]
    },
    "27433": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/TimePicker#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#width"
        }
      ]
    },
    "27434": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/TimePicker#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#height"
        }
      ]
    },
    "27435": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/TimePicker#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/TimePicker#margin"
        }
      ]
    },
    "27436": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#marginleft"
        }
      ]
    },
    "27437": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/TimePicker#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#margintop"
        }
      ]
    },
    "27438": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/TimePicker#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#marginright"
        }
      ]
    },
    "27439": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/TimePicker#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#marginbottom"
        }
      ]
    },
    "27440": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/TimePicker#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#horizontalalignment"
        }
      ]
    },
    "27441": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/TimePicker#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#verticalalignment"
        }
      ]
    },
    "27442": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/TimePicker#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#visibility"
        }
      ]
    },
    "27443": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/TimePicker#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/TimePicker#opacity"
        }
      ]
    },
    "27444": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/TimePicker#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#rotate"
        }
      ]
    },
    "27445": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/TimePicker#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#rotatex"
        }
      ]
    },
    "27446": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/TimePicker#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#rotatey"
        }
      ]
    },
    "27447": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/TimePicker#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 406,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/TimePicker#perspective"
        }
      ]
    },
    "27448": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/TimePicker#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 411,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TimePicker#translatex"
        }
      ]
    },
    "27449": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/TimePicker#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 416,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TimePicker#translatey"
        }
      ]
    },
    "27450": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/TimePicker#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#scalex"
        }
      ]
    },
    "27451": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/TimePicker#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#scaley"
        }
      ]
    },
    "27452": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/TimePicker#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 433,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#originx"
        }
      ]
    },
    "27453": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/TimePicker#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#originy"
        }
      ]
    },
    "27454": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/TimePicker#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 443,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#isenabled"
        }
      ]
    },
    "27455": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/TimePicker#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TimePicker#isuserinteractionenabled"
        }
      ]
    },
    "27456": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/TimePicker#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TimePicker#iosoverflowsafearea"
        }
      ]
    },
    "27457": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/TimePicker#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/TimePicker#iosoverflowsafeareaenabled"
        }
      ]
    },
    "27458": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/TimePicker#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TimePicker#iosignoresafearea"
        }
      ]
    },
    "27459": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/TimePicker#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/TimePicker#islayoutvalid"
        }
      ]
    },
    "27460": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/TimePicker#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 474,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/TimePicker#csstype"
        }
      ]
    },
    "27461": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/TimePicker#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 476,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#cssclasses"
        }
      ]
    },
    "27462": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/TimePicker#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 477,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#csspseudoclasses"
        }
      ]
    },
    "27463": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/TimePicker#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/TimePicker#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 485,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27467": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/TimePicker#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/TimePicker#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 496,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27474": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/TimePicker#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/TimePicker#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "27476": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/TimePicker#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/TimePicker#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 506,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "27478": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/TimePicker#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/TimePicker#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 508,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "27480": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/TimePicker#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/TimePicker#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27484": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/TimePicker#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/TimePicker#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 525,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27490": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/TimePicker#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/TimePicker#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 532,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27494": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/TimePicker#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 541,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27500": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/TimePicker#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/TimePicker#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 578,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27502": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/TimePicker#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/TimePicker#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 580,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "27505": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TimePicker#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 588,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27513": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TimePicker#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 596,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 601,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 606,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 612,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TimePicker#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 617,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 622,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27556": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/TimePicker#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/TimePicker#modal"
        }
      ]
    },
    "27557": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/TimePicker#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/TimePicker#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "27560": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/TimePicker#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/TimePicker#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "27563": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/TimePicker#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/TimePicker#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "27570": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/TimePicker#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/TimePicker#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "27572": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/TimePicker#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/TimePicker#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "27574": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/TimePicker#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/TimePicker#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "27577": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/TimePicker#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/TimePicker#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "27579": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/TimePicker#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/TimePicker#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27581": {
      "name": "css",
      "type": "Property",
      "url": "/api/class/TimePicker#css",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "css: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 673,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
              }
            ]
          },
          "url": "/api/class/TimePicker#css"
        }
      ]
    },
    "27582": {
      "name": "addCss",
      "type": "Method",
      "url": "/api/class/TimePicker#addcss",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCss(cssString: string): void",
          "url": "/api/class/TimePicker#addcss-addcss-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 680,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a new values to current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssString",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid css which will be added to current css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27585": {
      "name": "addCssFile",
      "type": "Method",
      "url": "/api/class/TimePicker#addcssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCssFile(cssFileName: string): void",
          "url": "/api/class/TimePicker#addcssfile-addcssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 687,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the content of the file to the current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27588": {
      "name": "changeCssFile",
      "type": "Method",
      "url": "/api/class/TimePicker#changecssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "changeCssFile(cssFileName: string): void",
          "url": "/api/class/TimePicker#changecssfile-changecssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 694,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the current css to the content of the file."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27591": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/TimePicker#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/TimePicker#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 697,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "27593": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/TimePicker#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/TimePicker#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 703,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27595": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/TimePicker#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/TimePicker#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 709,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "27597": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/TimePicker#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/TimePicker#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 711,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27603": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/TimePicker#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/TimePicker#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 716,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27605": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/TimePicker#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/TimePicker#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 721,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27607": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/TimePicker#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/TimePicker#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27609": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/TimePicker#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/TimePicker#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 732,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27615": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/TimePicker#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/TimePicker#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 746,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27618": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/TimePicker#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/TimePicker#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 751,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27621": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/TimePicker#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/TimePicker#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 756,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27623": {
      "name": "_modalParent",
      "type": "Property",
      "url": "/api/class/TimePicker#modalparent",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_modalParent?: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 762,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#modalparent"
        }
      ]
    },
    "27624": {
      "name": "isLayoutRequired",
      "type": "Property",
      "url": "/api/class/TimePicker#islayoutrequired",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isLayoutRequired: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#islayoutrequired"
        }
      ]
    },
    "27625": {
      "name": "_gestureObservers",
      "type": "Property",
      "url": "/api/class/TimePicker#gestureobservers",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_gestureObservers: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 770,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#gestureobservers"
        }
      ]
    },
    "27626": {
      "name": "_manager",
      "type": "Property",
      "url": "/api/class/TimePicker#manager",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "androidx.fragment.app.FragmentManager"
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_manager: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 775,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "androidx.fragment.app.FragmentManager"
              }
            ]
          },
          "url": "/api/class/TimePicker#manager"
        }
      ]
    },
    "27627": {
      "name": "_setNativeClipToBounds",
      "type": "Method",
      "url": "/api/class/TimePicker#setnativecliptobounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeClipToBounds(): void",
          "url": "/api/class/TimePicker#setnativecliptobounds-setnativecliptobounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 779,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27629": {
      "name": "_setCurrentMeasureSpecs",
      "type": "Method",
      "url": "/api/class/TimePicker#setcurrentmeasurespecs",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentMeasureSpecs(\n  widthMeasureSpec: number,\n  heightMeasureSpec: number\n): boolean",
          "url": "/api/class/TimePicker#setcurrentmeasurespecs-setcurrentmeasurespecs-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 784,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by measure method to cache measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27633": {
      "name": "_setCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/TimePicker#setcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentLayoutBounds(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): {\n  boundsChanged: boolean\n}",
          "url": "/api/class/TimePicker#setcurrentlayoutbounds-setcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 789,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by layout method to cache view bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  boundsChanged: boolean\n}"
        }
      ]
    },
    "27642": {
      "name": "_getCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/TimePicker#getcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getCurrentLayoutBounds(): {\n  bottom: number\n  left: number\n  right: number\n}",
          "url": "/api/class/TimePicker#getcurrentlayoutbounds-getcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 794,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Return view bounds."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: number\n  left: number\n  right: number\n}"
        }
      ]
    },
    "27649": {
      "name": "_goToVisualState",
      "type": "Method",
      "url": "/api/class/TimePicker#gotovisualstate",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_goToVisualState(state: string): any",
          "url": "/api/class/TimePicker#gotovisualstate-gotovisualstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 803,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "state",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27652": {
      "name": "_setNativeViewFrame",
      "type": "Method",
      "url": "/api/class/TimePicker#setnativeviewframe",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeViewFrame(nativeView: any, frame: any): void",
          "url": "/api/class/TimePicker#setnativeviewframe-setnativeviewframe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 807,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "nativeView",
              "type": "any",
              "flags": {}
            },
            {
              "name": "frame",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27656": {
      "name": "_updateEffectiveLayoutValues",
      "type": "Method",
      "url": "/api/class/TimePicker#updateeffectivelayoutvalues",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateEffectiveLayoutValues(\n  parentWidthMeasureSize: number,\n  parentWidthMeasureMode: number,\n  parentHeightMeasureSize: number,\n  parentHeightMeasureMode: number\n): void",
          "url": "/api/class/TimePicker#updateeffectivelayoutvalues-updateeffectivelayoutvalues-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 812,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "parentWidthMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentWidthMeasureMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureMode",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27662": {
      "name": "_currentWidthMeasureSpec",
      "type": "Property",
      "url": "/api/class/TimePicker#currentwidthmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_currentWidthMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 816,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#currentwidthmeasurespec"
        }
      ]
    },
    "27663": {
      "name": "_currentHeightMeasureSpec",
      "type": "Property",
      "url": "/api/class/TimePicker#currentheightmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_currentHeightMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 820,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#currentheightmeasurespec"
        }
      ]
    },
    "27664": {
      "name": "_setMinWidthNative",
      "type": "Method",
      "url": "/api/class/TimePicker#setminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinWidthNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/TimePicker#setminwidthnative-setminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 824,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27667": {
      "name": "_setMinHeightNative",
      "type": "Method",
      "url": "/api/class/TimePicker#setminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinHeightNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/TimePicker#setminheightnative-setminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 828,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27670": {
      "name": "_redrawNativeBackground",
      "type": "Method",
      "url": "/api/class/TimePicker#redrawnativebackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_redrawNativeBackground(value: any): void",
          "url": "/api/class/TimePicker#redrawnativebackground-redrawnativebackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 832,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27673": {
      "name": "_applyBackground",
      "type": "Method",
      "url": "/api/class/TimePicker#applybackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyBackground(\n  background: Background,\n  isBorderDrawable: boolean,\n  onlyColor: boolean,\n  backgroundDrawable: any\n): any",
          "url": "/api/class/TimePicker#applybackground-applybackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 837,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "method called on Android to apply the background. This allows custom handling"
              }
            ]
          },
          "parameters": [
            {
              "name": "background",
              "type": "Background",
              "flags": {}
            },
            {
              "name": "isBorderDrawable",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "onlyColor",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "backgroundDrawable",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27679": {
      "name": "_removeAnimation",
      "type": "Method",
      "url": "/api/class/TimePicker#removeanimation",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeAnimation(animation: <a href=\"/api/class/Animation\">Animation</a>): boolean",
          "url": "/api/class/TimePicker#removeanimation-removeanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 842,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "animation",
              "type": "<a href=\"/api/class/Animation\">Animation</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27682": {
      "name": "_onLivesync",
      "type": "Method",
      "url": "/api/class/TimePicker#onlivesync",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onLivesync(context?: { path: string }): boolean",
          "url": "/api/class/TimePicker#onlivesync-onlivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 846,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27688": {
      "name": "_getFragmentManager",
      "type": "Method",
      "url": "/api/class/TimePicker#getfragmentmanager",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getFragmentManager(): any",
          "url": "/api/class/TimePicker#getfragmentmanager-getfragmentmanager-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 850,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "27690": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/TimePicker#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/TimePicker#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 851,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27696": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/TimePicker#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/TimePicker#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 859,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27701": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/TimePicker#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/TimePicker#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 864,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27703": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/TimePicker#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/TimePicker#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 869,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27705": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/TimePicker#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/TimePicker#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27708": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/TimePicker#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/TimePicker#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 880,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "27711": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/TimePicker#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/TimePicker#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 885,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "27715": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/TimePicker#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#testid"
        }
      ]
    },
    "27716": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/TimePicker#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#touchanimation"
        }
      ]
    },
    "27717": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/TimePicker#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#ignoretouchanimation"
        }
      ]
    },
    "27718": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/TimePicker#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#touchdelay"
        }
      ]
    },
    "27719": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/TimePicker#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#closemodalcallback"
        }
      ]
    },
    "27720": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/TimePicker#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 40,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#islayoutvalid"
        }
      ]
    },
    "27721": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/TimePicker#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/TimePicker#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 56,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27723": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/TimePicker#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/TimePicker#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 61,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27726": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/TimePicker#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TimePicker#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 62,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27734": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TimePicker#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TimePicker#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 64,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27742": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TimePicker#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: any, thisArg?: any): void",
          "url": "/api/class/TimePicker#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27747": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/TimePicker#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/TimePicker#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "27750": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/TimePicker#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/TimePicker#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 70,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27753": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/TimePicker#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/TimePicker#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 72,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27757": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/TimePicker#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/TimePicker#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27763": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/TimePicker#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/TimePicker#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27765": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/TimePicker#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/TimePicker#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27767": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/TimePicker#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/TimePicker#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27769": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/TimePicker#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/TimePicker#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 117,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "27773": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/TimePicker#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/TimePicker#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 119,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "27777": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/TimePicker#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/TimePicker#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "27781": {
      "name": "textTransform",
      "type": "Accessor",
      "url": "/api/class/TimePicker#texttransform",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get textTransform(): <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "url": "/api/class/TimePicker#texttransform-texttransform-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 159,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>"
        }
      ]
    },
    "27785": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/TimePicker#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/TimePicker#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 206,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27787": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/TimePicker#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/TimePicker#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27793": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/TimePicker#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27795": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/TimePicker#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/TimePicker#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27799": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/TimePicker#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#left"
        }
      ]
    },
    "27800": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/TimePicker#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 109,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#top"
        }
      ]
    },
    "27801": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveleft"
        }
      ]
    },
    "27802": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivetop"
        }
      ]
    },
    "27803": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/TimePicker#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#dock"
        }
      ]
    },
    "27804": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/TimePicker#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#row"
        }
      ]
    },
    "27805": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/TimePicker#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 114,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#col"
        }
      ]
    },
    "27806": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/TimePicker#column",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`column`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`col`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`column`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`col`"
              }
            ]
          },
          "url": "/api/class/TimePicker#column"
        }
      ]
    },
    "27807": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/TimePicker#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#rowspan"
        }
      ]
    },
    "27808": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/TimePicker#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#colspan"
        }
      ]
    },
    "27809": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/TimePicker#columnspan",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`columnSpan`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`colSpan`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 124,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`columnSpan`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`colSpan`"
              }
            ]
          },
          "url": "/api/class/TimePicker#columnspan"
        }
      ]
    },
    "27810": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/TimePicker#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 125,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#domnode"
        }
      ]
    },
    "27811": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/TimePicker#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#order"
        }
      ]
    },
    "27812": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/TimePicker#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#flexgrow"
        }
      ]
    },
    "27813": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/TimePicker#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 129,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#flexshrink"
        }
      ]
    },
    "27814": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/TimePicker#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 130,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#flexwrapbefore"
        }
      ]
    },
    "27815": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/TimePicker#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#alignself"
        }
      ]
    },
    "27816": {
      "name": "_moduleName",
      "type": "Property",
      "url": "/api/class/TimePicker#modulename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Module name when the view is a module root. Otherwise, it is undefined."
          }
        ]
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_moduleName?: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 137,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Module name when the view is a module root. Otherwise, it is undefined."
              }
            ]
          },
          "url": "/api/class/TimePicker#modulename"
        }
      ]
    },
    "27817": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#oldleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#oldleft"
        }
      ]
    },
    "27818": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/TimePicker#oldtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#oldtop"
        }
      ]
    },
    "27819": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/TimePicker#oldright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#oldright"
        }
      ]
    },
    "27820": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/TimePicker#oldbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 155,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#oldbottom"
        }
      ]
    },
    "27821": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/TimePicker#defaultpaddingtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#defaultpaddingtop"
        }
      ]
    },
    "27822": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/TimePicker#defaultpaddingright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#defaultpaddingright"
        }
      ]
    },
    "27823": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/TimePicker#defaultpaddingbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#defaultpaddingbottom"
        }
      ]
    },
    "27824": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#defaultpaddingleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 171,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#defaultpaddingleft"
        }
      ]
    },
    "27825": {
      "name": "_suspendedUpdates",
      "type": "Property",
      "url": "/api/class/TimePicker#suspendedupdates",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_suspendedUpdates: {}",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 180,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
              }
            ]
          },
          "url": "/api/class/TimePicker#suspendedupdates"
        }
      ]
    },
    "27829": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveminwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 205,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveminwidth"
        }
      ]
    },
    "27830": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveminheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 206,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveminheight"
        }
      ]
    },
    "27831": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivewidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 207,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivewidth"
        }
      ]
    },
    "27832": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveheight"
        }
      ]
    },
    "27833": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivemargintop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivemargintop"
        }
      ]
    },
    "27834": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivemarginright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivemarginright"
        }
      ]
    },
    "27835": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivemarginbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivemarginbottom"
        }
      ]
    },
    "27836": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivemarginleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivemarginleft"
        }
      ]
    },
    "27837": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivepaddingtop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivepaddingtop"
        }
      ]
    },
    "27838": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivepaddingright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivepaddingright"
        }
      ]
    },
    "27839": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivepaddingbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivepaddingbottom"
        }
      ]
    },
    "27840": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivepaddingleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivepaddingleft"
        }
      ]
    },
    "27841": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectivebordertopwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectivebordertopwidth"
        }
      ]
    },
    "27842": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveborderrightwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveborderrightwidth"
        }
      ]
    },
    "27843": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveborderbottomwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveborderbottomwidth"
        }
      ]
    },
    "27844": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/TimePicker#effectiveborderleftwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#effectiveborderleftwidth"
        }
      ]
    },
    "27845": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/TimePicker#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/TimePicker#viewcontroller"
        }
      ]
    },
    "27846": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/TimePicker#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 253,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/TimePicker#nativeviewprotected"
        }
      ]
    },
    "27847": {
      "name": "nativeView",
      "type": "Property",
      "url": "/api/class/TimePicker#nativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "nativeView: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 254,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#nativeview"
        }
      ]
    },
    "27848": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/TimePicker#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 261,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/TimePicker#reusable"
        }
      ]
    },
    "27849": {
      "name": "typeName",
      "type": "Property",
      "url": "/api/class/TimePicker#typename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "typeName: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 266,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "url": "/api/class/TimePicker#typename"
        }
      ]
    },
    "27850": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/TimePicker#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 271,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/TimePicker#parent"
        }
      ]
    },
    "27851": {
      "name": "parentNode",
      "type": "Property",
      "url": "/api/class/TimePicker#parentnode",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the template parent or the native parent. Sets the template parent."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "parentNode: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 276,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "url": "/api/class/TimePicker#parentnode"
        }
      ]
    },
    "27852": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/TimePicker#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 281,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#id"
        }
      ]
    },
    "27853": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/TimePicker#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 286,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#classname"
        }
      ]
    },
    "27854": {
      "name": "page",
      "type": "Property",
      "url": "/api/class/TimePicker#page",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets owner page. This is a read-only property."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "page: <a href=\"/api/class/Page\">Page</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 291,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/TimePicker#page"
        }
      ]
    },
    "27855": {
      "name": "style",
      "type": "Property",
      "url": "/api/class/TimePicker#style",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the style object associated to this view."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "style: <a href=\"/api/class/Style\">Style</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "url": "/api/class/TimePicker#style"
        }
      ]
    },
    "27856": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/TimePicker#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isCollapsed: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
              }
            ]
          },
          "url": "/api/class/TimePicker#iscollapsed"
        }
      ]
    },
    "27857": {
      "name": "isLoaded",
      "type": "Property",
      "url": "/api/class/TimePicker#isloaded",
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "isLoaded: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 303,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#isloaded"
        }
      ]
    },
    "27858": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/TimePicker#getviewbyid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/TimePicker#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 308,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27862": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/TimePicker#getviewbydomid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(id: number): T",
          "url": "/api/class/TimePicker#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 313,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27866": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/TimePicker#loadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 319,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27869": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/TimePicker#unloadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27872": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/TimePicker#onunloaded",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/TimePicker#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 328,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27874": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/TimePicker#onresumenativeupdates",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/TimePicker#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 329,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27876": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/TimePicker#bind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/TimePicker#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 331,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27880": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/TimePicker#unbind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/TimePicker#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 332,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27883": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/TimePicker#addview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TimePicker#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27887": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/TimePicker#addviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TimePicker#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 349,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27891": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/TimePicker#removeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 351,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27894": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/TimePicker#removeviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27897": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/TimePicker#parentchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 356,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27900": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/TimePicker#dialogclosed",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/TimePicker#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27902": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/TimePicker#onrootviewreset",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/TimePicker#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27904": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/TimePicker#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 366,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#domid"
        }
      ]
    },
    "27905": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/TimePicker#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_cssState: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 368,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#cssstate"
        }
      ]
    },
    "27906": {
      "name": "_onCssStateChange",
      "type": "Method",
      "url": "/api/class/TimePicker#oncssstatechange",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onCssStateChange(): void",
          "url": "/api/class/TimePicker#oncssstatechange-oncssstatechange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 374,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies each child's css state for change, recursively.\nEither the style scope, className or id properties were changed."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27908": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/TimePicker#setinlinestyle",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/TimePicker#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 381,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27911": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/TimePicker#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 383,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#context"
        }
      ]
    },
    "27912": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/TimePicker#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number): void",
          "url": "/api/class/TimePicker#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 389,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27916": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/TimePicker#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/TimePicker#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27919": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/TimePicker#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/TimePicker#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 402,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27922": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/TimePicker#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 408,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "27924": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/TimePicker#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27926": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/TimePicker#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27928": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/TimePicker#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(view: any): void",
          "url": "/api/class/TimePicker#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 430,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27931": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/TimePicker#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 432,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#isaddedtonativevisualtree"
        }
      ]
    },
    "27932": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TimePicker#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/TimePicker#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27936": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TimePicker#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TimePicker#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27939": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/TimePicker#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/TimePicker#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "27942": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/TimePicker#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/TimePicker#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 446,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27945": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/TimePicker#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/TimePicker#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27948": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/TimePicker#ensuredomnode",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): any",
          "url": "/api/class/TimePicker#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 459,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "27950": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/TimePicker#recyclenativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 461,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#recyclenativeview"
        }
      ]
    },
    "27951": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/TimePicker#ispaddingrelative",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 466,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#ispaddingrelative"
        }
      ]
    },
    "27952": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/TimePicker#ignoreflexminwidthheightreset",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 471,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#ignoreflexminwidthheightreset"
        }
      ]
    },
    "27953": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/TimePicker#stylescope",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_styleScope: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 473,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "url": "/api/class/TimePicker#stylescope"
        }
      ]
    },
    "27954": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/TimePicker#automaticallyadjustsscrollviewinsets",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 478,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "27955": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/TimePicker#isstylescopehost",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 482,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TimePicker#isstylescopehost"
        }
      ]
    },
    "27956": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/TimePicker#layoutparent",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/TimePicker#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 487,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27958": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/TimePicker#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/TimePicker#suspendnativeupdatescount"
        }
      ]
    },
    "27959": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/TimePicker#batchupdate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/TimePicker#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27965": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/TimePicker#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/TimePicker#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27967": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/TimePicker#inheritstylescope",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: any): void",
          "url": "/api/class/TimePicker#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27970": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/TimePicker#callloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/TimePicker#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27972": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/TimePicker#callunloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/TimePicker#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 526,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27974": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TimePicker#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TimePicker#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27982": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/TimePicker#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/TimePicker#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27986": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/TimePicker#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/TimePicker#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27990": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/TimePicker#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/TimePicker#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27993": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/TimePicker#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/TimePicker#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27997": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/TimePicker#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/TimePicker#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28002": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/TimePicker#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/TimePicker#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "28005": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/TimePicker#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/TimePicker#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "28008": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/TimePicker#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/TimePicker#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "28013": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/TimePicker#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "View"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "View"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/TimePicker#isviewbase"
        }
      ]
    }
  }
}