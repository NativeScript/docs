{
  "title": "TouchManager",
  "hierarchy": [
    [
      {
        "text": "TouchManager"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        14049
      ]
    },
    {
      "title": "Properties",
      "items": [
        14032,
        14031,
        14037,
        14033
      ]
    },
    {
      "title": "Methods",
      "items": [
        14042,
        14045
      ]
    }
  ],
  "reflections": {
    "14031": {
      "name": "enableGlobalTapAnimations",
      "type": "Property",
      "url": "/api/class/TouchManager#enableglobaltapanimations",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enable animations for all tap bindings in the UI."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">enableGlobalTapAnimations</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 21,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enable animations for all tap bindings in the UI."
              }
            ]
          },
          "url": "/api/class/TouchManager#enableglobaltapanimations"
        }
      ]
    },
    "14032": {
      "name": "animations",
      "type": "Property",
      "url": "/api/class/TouchManager#animations",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Define reusable touch animations to use on views with touchAnimation defined or with enableGlobalTapAnimations on."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "animations: <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 25,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Define reusable touch animations to use on views with touchAnimation defined or with enableGlobalTapAnimations on."
              }
            ]
          },
          "url": "/api/class/TouchManager#animations"
        }
      ]
    },
    "14033": {
      "name": "touchHandlers",
      "type": "Property",
      "url": "/api/class/TouchManager#touchhandlers",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Native Touch handlers (iOS only) registered with the view through the TouchManager.\nThe TouchManager uses this internally but makes public for other versatility if needed."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">touchHandlers</span><span style=\"color: #E1E4E8\">: {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">handler</span><span style=\"color: #E1E4E8\">: any</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}[]</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 30,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Native Touch handlers (iOS only) registered with the view through the TouchManager.\nThe TouchManager uses this internally but makes public for other versatility if needed."
              }
            ]
          },
          "url": "/api/class/TouchManager#touchhandlers"
        }
      ]
    },
    "14037": {
      "name": "touchAnimationDefinitions",
      "type": "Property",
      "url": "/api/class/TouchManager#touchanimationdefinitions",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "When using NativeScript AnimationDefinition's for touch animations this will contain any instances for finer grain control of starting/stopping under various circumstances.\nThe TouchManager uses this internally but makes public for other versatility if needed."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "touchAnimationDefinitions: {\nanimation: <a href=\"/api/class/Animation\">Animation</a>;\ntype: TouchAnimationTypes;\n}[]",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 38,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When using NativeScript AnimationDefinition's for touch animations this will contain any instances for finer grain control of starting/stopping under various circumstances.\nThe TouchManager uses this internally but makes public for other versatility if needed."
              }
            ]
          },
          "url": "/api/class/TouchManager#touchanimationdefinitions"
        }
      ]
    },
    "14042": {
      "name": "addAnimations",
      "type": "Method",
      "url": "/api/class/TouchManager#addanimations",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addAnimations(view: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/TouchManager#addanimations-addanimations-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 48,
              "character": 4
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The TouchManager uses this internally.\nAdds touch animations to view based upon it's touchAnimation property or TouchManager.animations."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "NativeScript view instance"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "14045": {
      "name": "startAnimationForType",
      "type": "Method",
      "url": "/api/class/TouchManager#startanimationfortype",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "startAnimationForType(view: <a href=\"/api/class/View\">View</a>, type: TouchAnimationTypes): void",
          "url": "/api/class/TouchManager#startanimationfortype-startanimationfortype-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/gestures/touch-manager.d.ts",
              "line": 49,
              "character": 4
            }
          ],
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "type",
              "type": "TouchAnimationTypes",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "14049": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/TouchManager#constructor",
      "flags": {},
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new TouchManager(): <a href=\"/api/class/TouchManager\">TouchManager</a>",
          "url": "/api/class/TouchManager#constructor-new-touchmanager",
          "parameters": [],
          "returns": "<a href=\"/api/class/TouchManager\">TouchManager</a>"
        }
      ]
    }
  }
}