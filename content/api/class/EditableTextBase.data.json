{
  "title": "EditableTextBase",
  "hierarchy": [
    [
      {
        "text": "TextBase",
        "link": "/api/class/TextBase"
      }
    ],
    [
      {
        "text": "EditableTextBase"
      }
    ],
    [
      {
        "text": "TextField",
        "link": "/api/class/TextField"
      },
      {
        "text": "TextView",
        "link": "/api/class/TextView"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        28806
      ]
    },
    {
      "title": "Properties",
      "items": [
        28883,
        29410,
        29179,
        29367,
        29361,
        29123,
        29122,
        29279,
        29280,
        29278,
        29277,
        29360,
        29085,
        29408,
        29387,
        29180,
        29407,
        28852,
        29411,
        29469,
        29086,
        29083,
        29272,
        29276,
        29273,
        29275,
        29274,
        29409,
        29281,
        29414,
        28745,
        28747,
        28746,
        28873,
        28879,
        28874,
        28877,
        28881,
        28880,
        28882,
        28775,
        28875,
        28876,
        28878,
        28872,
        29271,
        28853,
        28886,
        28885,
        28811,
        28814,
        28812,
        28884,
        28887,
        28888,
        28889,
        28855,
        28739,
        28859,
        28870,
        28869,
        28864,
        28856,
        28860,
        28865,
        28866,
        28858,
        28863,
        28857,
        28867,
        28868,
        28862,
        28861,
        28890,
        29309,
        29261,
        28871,
        29264,
        29262,
        29265,
        28778,
        29041,
        28921,
        28922,
        28920,
        28779,
        29259,
        29266,
        28813,
        29299,
        29300,
        29298,
        29297,
        29288,
        29257,
        29291,
        29292,
        29290,
        29289,
        29286,
        29285,
        29295,
        29296,
        29294,
        29293,
        29258,
        29287,
        29268,
        29269,
        29270,
        28740,
        28829,
        28828,
        28894,
        28815,
        28900,
        29308,
        29177,
        28854,
        28918,
        28916,
        28917,
        29312,
        28914,
        29084,
        28919,
        29313,
        28915,
        28808,
        28742,
        29255,
        28830,
        28831,
        28776,
        28895,
        28899,
        28896,
        28898,
        28897,
        28816,
        28837,
        28892,
        28891,
        29016,
        28826,
        29303,
        29302,
        28903,
        29267,
        28912,
        28913,
        28838,
        28839,
        28840,
        28841,
        28842,
        29310,
        29306,
        29307,
        28907,
        28780,
        29406,
        28809,
        29304,
        28904,
        28905,
        28906,
        29260,
        29263,
        28910,
        28911,
        28743,
        28744,
        29311,
        29175,
        28827,
        28832,
        28741,
        28833,
        28835,
        28834,
        29256,
        29176,
        29178,
        28908,
        28909,
        29305,
        28777,
        28810,
        28901,
        29301,
        28902,
        28836,
        28893
      ]
    },
    {
      "title": "Accessors",
      "items": [
        29233,
        29237,
        29229
      ]
    },
    {
      "title": "Methods",
      "items": [
        28843,
        29339,
        29343,
        29388,
        29133,
        29415,
        29395,
        29053,
        29464,
        29356,
        29057,
        29461,
        29102,
        29148,
        29051,
        29055,
        29168,
        29109,
        29150,
        29165,
        29217,
        29423,
        29412,
        29186,
        29161,
        29362,
        29163,
        29142,
        29358,
        29063,
        29353,
        29223,
        29227,
        29225,
        29130,
        29139,
        29347,
        29350,
        29392,
        28847,
        29093,
        29089,
        28819,
        29127,
        29124,
        29087,
        28849,
        29112,
        29183,
        29368,
        29171,
        29421,
        29213,
        29372,
        29116,
        29156,
        29078,
        29081,
        29042,
        29045,
        29194,
        28796,
        29398,
        29017,
        29332,
        29426,
        29428,
        29048,
        29210,
        28771,
        29020,
        29378,
        29401,
        29375,
        28817,
        29382,
        29243,
        29069,
        29404,
        28960,
        29446,
        29037,
        28962,
        29030,
        29032,
        29034,
        28936,
        28938,
        28934,
        29023,
        29318,
        29314,
        29065,
        29458,
        29380,
        28927,
        28757,
        28954,
        29322,
        28923,
        28748,
        29449,
        29453,
        28965,
        28791,
        28973,
        28781,
        29039,
        29430,
        28786,
        28944,
        29181,
        28940,
        29330,
        29328,
        29202,
        28801,
        29241,
        29249,
        28765,
        29075,
        29438,
        29364,
        28950,
        29384,
        29067,
        29442,
        28822,
        29251,
        29207,
        29336,
        29325
      ]
    }
  ],
  "reflections": {
    "28739": {
      "name": "blurEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#blurevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "blurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 12,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#blurevent"
        }
      ]
    },
    "28740": {
      "name": "focusEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#focusevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "focusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 13,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#focusevent"
        }
      ]
    },
    "28741": {
      "name": "textChangeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textchangeevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "textChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 14,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#textchangeevent"
        }
      ]
    },
    "28742": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#layoutchangedevent"
        }
      ]
    },
    "28743": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#showingmodallyevent"
        }
      ]
    },
    "28744": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#shownmodallyevent"
        }
      ]
    },
    "28745": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityblurevent"
        }
      ]
    },
    "28746": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityfocusevent"
        }
      ]
    },
    "28747": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityfocuschangedevent"
        }
      ]
    },
    "28748": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/EditableTextBase#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 550,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "28757": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/EditableTextBase#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 560,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28765": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/EditableTextBase#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/EditableTextBase#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 570,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "28771": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/EditableTextBase#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 572,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "28775": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#accessibilityperformescapeevent"
        }
      ]
    },
    "28776": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#loadedevent"
        }
      ]
    },
    "28777": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#unloadedevent"
        }
      ]
    },
    "28778": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#createdevent"
        }
      ]
    },
    "28779": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#disposenativeviewevent"
        }
      ]
    },
    "28780": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#propertychangeevent"
        }
      ]
    },
    "28781": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/EditableTextBase#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28786": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/EditableTextBase#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28791": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/EditableTextBase#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28796": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28801": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28806": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/EditableTextBase#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new EditableTextBase(): <a href=\"/api/class/EditableTextBase\">EditableTextBase</a>",
          "url": "/api/class/EditableTextBase#constructor-new-editabletextbase",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Please note that should you be using the "
              },
              {
                "kind": "code",
                "text": "`new Observable({})`"
              },
              {
                "kind": "text",
                "text": " constructor, it is **obsolete** since v3.0,\nand you have to migrate to the \"data/observable\" "
              },
              {
                "kind": "code",
                "text": "`fromObject({})`"
              },
              {
                "kind": "text",
                "text": " or the "
              },
              {
                "kind": "code",
                "text": "`fromObjectRecursive({})`"
              },
              {
                "kind": "text",
                "text": " functions."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/EditableTextBase\">EditableTextBase</a>"
        }
      ]
    },
    "28808": {
      "name": "keyboardType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#keyboardtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "keyboardType: <a href=\"/api/namespace/CoreTypes#keyboardinputtype\">KeyboardInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#keyboardtype"
        }
      ]
    },
    "28809": {
      "name": "returnKeyType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#returnkeytype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard return key flavor."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "returnKeyType: <a href=\"/api/namespace/CoreTypes#returnkeybuttontype\">ReturnKeyButtonType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard return key flavor."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#returnkeytype"
        }
      ]
    },
    "28810": {
      "name": "updateTextTrigger",
      "type": "Property",
      "url": "/api/class/EditableTextBase#updatetexttrigger",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating when the text property will be updated."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "updateTextTrigger: <a href=\"/api/namespace/CoreTypes#updatetexttriggertype\">UpdateTextTriggerType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating when the text property will be updated."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#updatetexttrigger"
        }
      ]
    },
    "28811": {
      "name": "autocapitalizationType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autocapitalizationtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autocapitalization type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autocapitalizationType: <a href=\"/api/namespace/CoreTypes#autocapitalizationinputtype\">AutocapitalizationInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autocapitalization type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autocapitalizationtype"
        }
      ]
    },
    "28812": {
      "name": "autofillType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autofilltype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autofill type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autofillType: AutofillType",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 39,
              "character": 2
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autofill type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autofilltype"
        }
      ]
    },
    "28813": {
      "name": "editable",
      "type": "Property",
      "url": "/api/class/EditableTextBase#editable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets whether the instance is editable."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "editable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets whether the instance is editable."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#editable"
        }
      ]
    },
    "28814": {
      "name": "autocorrect",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autocorrect",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables autocorrection."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autocorrect: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables autocorrection."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autocorrect"
        }
      ]
    },
    "28815": {
      "name": "hint",
      "type": "Property",
      "url": "/api/class/EditableTextBase#hint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the placeholder text."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "hint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the placeholder text."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#hint"
        }
      ]
    },
    "28816": {
      "name": "maxLength",
      "type": "Property",
      "url": "/api/class/EditableTextBase#maxlength",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of characters."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "maxLength: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of characters."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#maxlength"
        }
      ]
    },
    "28817": {
      "name": "dismissSoftInput",
      "type": "Method",
      "url": "/api/class/EditableTextBase#dismisssoftinput",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "dismissSoftInput(): void",
          "url": "/api/class/EditableTextBase#dismisssoftinput-dismisssoftinput-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hides the soft input method, ususally a soft keyboard."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "28819": {
      "name": "_setInputType",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setinputtype",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setInputType(inputType: number): void",
          "url": "/api/class/EditableTextBase#setinputtype-setinputtype-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 70,
              "character": 1
            }
          ],
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "inputType",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28822": {
      "name": "setSelection",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setselection",
      "flags": {
        "isPublic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setSelection(start: number, stop?: number): any",
          "url": "/api/class/EditableTextBase#setselection-setselection-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the selection anchor to start and the selection edge to stop"
              }
            ]
          },
          "parameters": [
            {
              "name": "start",
              "type": "number",
              "flags": {}
            },
            {
              "name": "stop",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "28826": {
      "name": "nativeTextViewProtected",
      "type": "Property",
      "url": "/api/class/EditableTextBase#nativetextviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeTextViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 14,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#nativetextviewprotected"
        }
      ]
    },
    "28827": {
      "name": "text",
      "type": "Property",
      "url": "/api/class/EditableTextBase#text",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "text: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the text."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#text"
        }
      ]
    },
    "28828": {
      "name": "formattedText",
      "type": "Property",
      "url": "/api/class/EditableTextBase#formattedtext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a formatted string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "formattedText: <a href=\"/api/class/FormattedString\">FormattedString</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a formatted string."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#formattedtext"
        }
      ]
    },
    "28829": {
      "name": "fontSize",
      "type": "Property",
      "url": "/api/class/EditableTextBase#fontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets font-size style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "fontSize: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets font-size style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#fontsize"
        }
      ]
    },
    "28830": {
      "name": "letterSpacing",
      "type": "Property",
      "url": "/api/class/EditableTextBase#letterspacing",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets letterSpace style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "letterSpacing: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets letterSpace style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#letterspacing"
        }
      ]
    },
    "28831": {
      "name": "lineHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#lineheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets lineHeight style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "lineHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets lineHeight style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#lineheight"
        }
      ]
    },
    "28832": {
      "name": "textAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text-alignment style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textAlignment: <a href=\"/api/namespace/CoreTypes#textalignmenttype\">TextAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text-alignment style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textalignment"
        }
      ]
    },
    "28833": {
      "name": "textDecoration",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textdecoration",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text decorations style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textDecoration: <a href=\"/api/namespace/CoreTypes#textdecorationtype\">TextDecorationType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text decorations style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textdecoration"
        }
      ]
    },
    "28834": {
      "name": "textTransform",
      "type": "Property",
      "url": "/api/class/EditableTextBase#texttransform",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text transform style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textTransform: <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text transform style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#texttransform"
        }
      ]
    },
    "28835": {
      "name": "textShadow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text shadow style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textShadow: CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text shadow style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textshadow"
        }
      ]
    },
    "28836": {
      "name": "whiteSpace",
      "type": "Property",
      "url": "/api/class/EditableTextBase#whitespace",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "whiteSpace: <a href=\"/api/namespace/CoreTypes#whitespacetype\">WhiteSpaceType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#whitespace"
        }
      ]
    },
    "28837": {
      "name": "maxLines",
      "type": "Property",
      "url": "/api/class/EditableTextBase#maxlines",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "maxLines: MaxLinesType",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 69,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#maxlines"
        }
      ]
    },
    "28838": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/EditableTextBase#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#padding"
        }
      ]
    },
    "28839": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingbottom"
        }
      ]
    },
    "28840": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingleft"
        }
      ]
    },
    "28841": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingright"
        }
      ]
    },
    "28842": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingtop"
        }
      ]
    },
    "28843": {
      "name": "_addChildFromBuilder",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addchildfrombuilder",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addChildFromBuilder(name: string, value: any): void",
          "url": "/api/class/EditableTextBase#addchildfrombuilder-addchildfrombuilder-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 103,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called for every child element declared in xml.\nThis method will add a child element (value) to current element."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the element."
                  }
                ]
              }
            },
            {
              "name": "value",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Value of the element."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28847": {
      "name": "_requestLayoutOnTextChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#requestlayoutontextchanged",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_requestLayoutOnTextChanged(): void",
          "url": "/api/class/EditableTextBase#requestlayoutontextchanged-requestlayoutontextchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called when the text property is changed to request layout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "28849": {
      "name": "_setNativeText",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setnativetext",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeText(reset?: boolean): void",
          "url": "/api/class/EditableTextBase#setnativetext-setnativetext-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 115,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "reset",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28852": {
      "name": "_isSingleLine",
      "type": "Property",
      "url": "/api/class/EditableTextBase#issingleline",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isSingleLine: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#issingleline"
        }
      ]
    },
    "28853": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/EditableTextBase#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 138,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#android"
        }
      ]
    },
    "28854": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 144,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#ios"
        }
      ]
    },
    "28855": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bindingcontext"
        }
      ]
    },
    "28856": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordercolor"
        }
      ]
    },
    "28857": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopcolor"
        }
      ]
    },
    "28858": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderrightcolor"
        }
      ]
    },
    "28859": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomcolor"
        }
      ]
    },
    "28860": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderleftcolor"
        }
      ]
    },
    "28861": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderwidth"
        }
      ]
    },
    "28862": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopwidth"
        }
      ]
    },
    "28863": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderrightwidth"
        }
      ]
    },
    "28864": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomwidth"
        }
      ]
    },
    "28865": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderleftwidth"
        }
      ]
    },
    "28866": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderradius"
        }
      ]
    },
    "28867": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopleftradius"
        }
      ]
    },
    "28868": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertoprightradius"
        }
      ]
    },
    "28869": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomrightradius"
        }
      ]
    },
    "28870": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomleftradius"
        }
      ]
    },
    "28871": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/EditableTextBase#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#color"
        }
      ]
    },
    "28872": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessible"
        }
      ]
    },
    "28873": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityhidden"
        }
      ]
    },
    "28874": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityidentifier"
        }
      ]
    },
    "28875": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityrole"
        }
      ]
    },
    "28876": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitystate"
        }
      ]
    },
    "28877": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitylabel"
        }
      ]
    },
    "28878": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityvalue"
        }
      ]
    },
    "28879": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityhint"
        }
      ]
    },
    "28880": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#accessibilityliveregion"
        }
      ]
    },
    "28881": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitylanguage"
        }
      ]
    },
    "28882": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitymediasession"
        }
      ]
    },
    "28883": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androidcontentdescriptionupdated"
        }
      ]
    },
    "28884": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/EditableTextBase#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 290,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#automationtext"
        }
      ]
    },
    "28885": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 295,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androidelevation"
        }
      ]
    },
    "28886": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 300,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androiddynamicelevationoffset"
        }
      ]
    },
    "28887": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/EditableTextBase#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#background"
        }
      ]
    },
    "28888": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#backgroundcolor"
        }
      ]
    },
    "28889": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/EditableTextBase#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#backgroundimage"
        }
      ]
    },
    "28890": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#boxshadow"
        }
      ]
    },
    "28891": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#minwidth"
        }
      ]
    },
    "28892": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#minheight"
        }
      ]
    },
    "28893": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/EditableTextBase#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#width"
        }
      ]
    },
    "28894": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/EditableTextBase#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#height"
        }
      ]
    },
    "28895": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/EditableTextBase#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#margin"
        }
      ]
    },
    "28896": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginleft"
        }
      ]
    },
    "28897": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#margintop"
        }
      ]
    },
    "28898": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginright"
        }
      ]
    },
    "28899": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginbottom"
        }
      ]
    },
    "28900": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#horizontalalignment"
        }
      ]
    },
    "28901": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#verticalalignment"
        }
      ]
    },
    "28902": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/EditableTextBase#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#visibility"
        }
      ]
    },
    "28903": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/EditableTextBase#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#opacity"
        }
      ]
    },
    "28904": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotate"
        }
      ]
    },
    "28905": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotatex"
        }
      ]
    },
    "28906": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotatey"
        }
      ]
    },
    "28907": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/EditableTextBase#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 406,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#perspective"
        }
      ]
    },
    "28908": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 411,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#translatex"
        }
      ]
    },
    "28909": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 416,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#translatey"
        }
      ]
    },
    "28910": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#scalex"
        }
      ]
    },
    "28911": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#scaley"
        }
      ]
    },
    "28912": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 433,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#originx"
        }
      ]
    },
    "28913": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#originy"
        }
      ]
    },
    "28914": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 443,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#isenabled"
        }
      ]
    },
    "28915": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#isuserinteractionenabled"
        }
      ]
    },
    "28916": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosoverflowsafearea"
        }
      ]
    },
    "28917": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosoverflowsafeareaenabled"
        }
      ]
    },
    "28918": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosignoresafearea"
        }
      ]
    },
    "28919": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/EditableTextBase#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#islayoutvalid"
        }
      ]
    },
    "28920": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 474,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#csstype"
        }
      ]
    },
    "28921": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/EditableTextBase#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 476,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#cssclasses"
        }
      ]
    },
    "28922": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/EditableTextBase#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 477,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#csspseudoclasses"
        }
      ]
    },
    "28923": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/EditableTextBase#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/EditableTextBase#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 485,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28927": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/EditableTextBase#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 496,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28934": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/EditableTextBase#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "28936": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/EditableTextBase#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 506,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "28938": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/EditableTextBase#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 508,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "28940": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/EditableTextBase#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28944": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/EditableTextBase#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 525,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28950": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/EditableTextBase#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 532,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28954": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/EditableTextBase#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 541,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "28960": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/EditableTextBase#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/EditableTextBase#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 578,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "28962": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/EditableTextBase#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 580,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "28965": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/EditableTextBase#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 588,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "28973": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/EditableTextBase#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 596,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 601,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 606,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 612,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 617,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 622,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29016": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/EditableTextBase#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#modal"
        }
      ]
    },
    "29017": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/EditableTextBase#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/EditableTextBase#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "29020": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/EditableTextBase#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "29023": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/EditableTextBase#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "29030": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/EditableTextBase#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "29032": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/EditableTextBase#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "29034": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/EditableTextBase#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "29037": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/EditableTextBase#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "29039": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/EditableTextBase#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "29041": {
      "name": "css",
      "type": "Property",
      "url": "/api/class/EditableTextBase#css",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "css: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 673,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#css"
        }
      ]
    },
    "29042": {
      "name": "addCss",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addcss",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCss(cssString: string): void",
          "url": "/api/class/EditableTextBase#addcss-addcss-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 680,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a new values to current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssString",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid css which will be added to current css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29045": {
      "name": "addCssFile",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addcssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCssFile(cssFileName: string): void",
          "url": "/api/class/EditableTextBase#addcssfile-addcssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 687,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the content of the file to the current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29048": {
      "name": "changeCssFile",
      "type": "Method",
      "url": "/api/class/EditableTextBase#changecssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "changeCssFile(cssFileName: string): void",
          "url": "/api/class/EditableTextBase#changecssfile-changecssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 694,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the current css to the content of the file."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29051": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/EditableTextBase#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 697,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "29053": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/EditableTextBase#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 703,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "29055": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/EditableTextBase#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 709,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "29057": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/EditableTextBase#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 711,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29063": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/EditableTextBase#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 716,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29065": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/EditableTextBase#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 721,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "29067": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/EditableTextBase#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29069": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/EditableTextBase#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 732,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29075": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/EditableTextBase#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 746,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29078": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/EditableTextBase#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/EditableTextBase#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 751,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29081": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/EditableTextBase#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 756,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29083": {
      "name": "_modalParent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#modalparent",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_modalParent?: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 762,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#modalparent"
        }
      ]
    },
    "29084": {
      "name": "isLayoutRequired",
      "type": "Property",
      "url": "/api/class/EditableTextBase#islayoutrequired",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLayoutRequired: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#islayoutrequired"
        }
      ]
    },
    "29085": {
      "name": "_gestureObservers",
      "type": "Property",
      "url": "/api/class/EditableTextBase#gestureobservers",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_gestureObservers: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 770,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#gestureobservers"
        }
      ]
    },
    "29086": {
      "name": "_manager",
      "type": "Property",
      "url": "/api/class/EditableTextBase#manager",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "androidx.fragment.app.FragmentManager"
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_manager: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 775,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "androidx.fragment.app.FragmentManager"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#manager"
        }
      ]
    },
    "29087": {
      "name": "_setNativeClipToBounds",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setnativecliptobounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeClipToBounds(): void",
          "url": "/api/class/EditableTextBase#setnativecliptobounds-setnativecliptobounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 779,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29089": {
      "name": "_setCurrentMeasureSpecs",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setcurrentmeasurespecs",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentMeasureSpecs(\n  widthMeasureSpec: number,\n  heightMeasureSpec: number\n): boolean",
          "url": "/api/class/EditableTextBase#setcurrentmeasurespecs-setcurrentmeasurespecs-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 784,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by measure method to cache measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29093": {
      "name": "_setCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentLayoutBounds(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): {\n  boundsChanged: boolean\n}",
          "url": "/api/class/EditableTextBase#setcurrentlayoutbounds-setcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 789,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by layout method to cache view bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  boundsChanged: boolean\n}"
        }
      ]
    },
    "29102": {
      "name": "_getCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getCurrentLayoutBounds(): {\n  bottom: number\n  left: number\n  right: number\n}",
          "url": "/api/class/EditableTextBase#getcurrentlayoutbounds-getcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 794,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Return view bounds."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: number\n  left: number\n  right: number\n}"
        }
      ]
    },
    "29109": {
      "name": "_goToVisualState",
      "type": "Method",
      "url": "/api/class/EditableTextBase#gotovisualstate",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_goToVisualState(state: string): any",
          "url": "/api/class/EditableTextBase#gotovisualstate-gotovisualstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 803,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "state",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29112": {
      "name": "_setNativeViewFrame",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setnativeviewframe",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeViewFrame(nativeView: any, frame: any): void",
          "url": "/api/class/EditableTextBase#setnativeviewframe-setnativeviewframe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 807,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "nativeView",
              "type": "any",
              "flags": {}
            },
            {
              "name": "frame",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29116": {
      "name": "_updateEffectiveLayoutValues",
      "type": "Method",
      "url": "/api/class/EditableTextBase#updateeffectivelayoutvalues",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateEffectiveLayoutValues(\n  parentWidthMeasureSize: number,\n  parentWidthMeasureMode: number,\n  parentHeightMeasureSize: number,\n  parentHeightMeasureMode: number\n): void",
          "url": "/api/class/EditableTextBase#updateeffectivelayoutvalues-updateeffectivelayoutvalues-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 812,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "parentWidthMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentWidthMeasureMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureMode",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29122": {
      "name": "_currentWidthMeasureSpec",
      "type": "Property",
      "url": "/api/class/EditableTextBase#currentwidthmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_currentWidthMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 816,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#currentwidthmeasurespec"
        }
      ]
    },
    "29123": {
      "name": "_currentHeightMeasureSpec",
      "type": "Property",
      "url": "/api/class/EditableTextBase#currentheightmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_currentHeightMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 820,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#currentheightmeasurespec"
        }
      ]
    },
    "29124": {
      "name": "_setMinWidthNative",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinWidthNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/EditableTextBase#setminwidthnative-setminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 824,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29127": {
      "name": "_setMinHeightNative",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinHeightNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/EditableTextBase#setminheightnative-setminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 828,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29130": {
      "name": "_redrawNativeBackground",
      "type": "Method",
      "url": "/api/class/EditableTextBase#redrawnativebackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_redrawNativeBackground(value: any): void",
          "url": "/api/class/EditableTextBase#redrawnativebackground-redrawnativebackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 832,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29133": {
      "name": "_applyBackground",
      "type": "Method",
      "url": "/api/class/EditableTextBase#applybackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyBackground(\n  background: Background,\n  isBorderDrawable: boolean,\n  onlyColor: boolean,\n  backgroundDrawable: any\n): any",
          "url": "/api/class/EditableTextBase#applybackground-applybackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 837,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "method called on Android to apply the background. This allows custom handling"
              }
            ]
          },
          "parameters": [
            {
              "name": "background",
              "type": "Background",
              "flags": {}
            },
            {
              "name": "isBorderDrawable",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "onlyColor",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "backgroundDrawable",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29139": {
      "name": "_removeAnimation",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeanimation",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeAnimation(animation: <a href=\"/api/class/Animation\">Animation</a>): boolean",
          "url": "/api/class/EditableTextBase#removeanimation-removeanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 842,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "animation",
              "type": "<a href=\"/api/class/Animation\">Animation</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29142": {
      "name": "_onLivesync",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onlivesync",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onLivesync(context?: { path: string }): boolean",
          "url": "/api/class/EditableTextBase#onlivesync-onlivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 846,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29148": {
      "name": "_getFragmentManager",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getfragmentmanager",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getFragmentManager(): any",
          "url": "/api/class/EditableTextBase#getfragmentmanager-getfragmentmanager-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 850,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "29150": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/EditableTextBase#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/EditableTextBase#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 851,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29156": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/EditableTextBase#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/EditableTextBase#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 859,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29161": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/EditableTextBase#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 864,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29163": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/EditableTextBase#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 869,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29165": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/EditableTextBase#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29168": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/EditableTextBase#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 880,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "29171": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/EditableTextBase#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 885,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "29175": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/EditableTextBase#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#testid"
        }
      ]
    },
    "29176": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#touchanimation"
        }
      ]
    },
    "29177": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#ignoretouchanimation"
        }
      ]
    },
    "29178": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/EditableTextBase#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#touchdelay"
        }
      ]
    },
    "29179": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/EditableTextBase#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#closemodalcallback"
        }
      ]
    },
    "29180": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/EditableTextBase#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 40,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#islayoutvalid"
        }
      ]
    },
    "29181": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/EditableTextBase#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 56,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29183": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/EditableTextBase#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 61,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29186": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/EditableTextBase#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 62,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29194": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 64,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29202": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: any, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29207": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/EditableTextBase#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "29210": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/EditableTextBase#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 70,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29213": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/EditableTextBase#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 72,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29217": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/EditableTextBase#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29223": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/EditableTextBase#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29225": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/EditableTextBase#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29227": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/EditableTextBase#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29229": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/EditableTextBase#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 117,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "29233": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/EditableTextBase#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 119,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "29237": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/EditableTextBase#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "29241": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/EditableTextBase#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 206,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29243": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/EditableTextBase#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29249": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/EditableTextBase#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29251": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/EditableTextBase#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/EditableTextBase#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29255": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/EditableTextBase#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#left"
        }
      ]
    },
    "29256": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/EditableTextBase#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 109,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#top"
        }
      ]
    },
    "29257": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveleft"
        }
      ]
    },
    "29258": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivetop"
        }
      ]
    },
    "29259": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/EditableTextBase#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#dock"
        }
      ]
    },
    "29260": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/EditableTextBase#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#row"
        }
      ]
    },
    "29261": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/EditableTextBase#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 114,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#col"
        }
      ]
    },
    "29262": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/EditableTextBase#column",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`column`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`col`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`column`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`col`"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#column"
        }
      ]
    },
    "29263": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#rowspan"
        }
      ]
    },
    "29264": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#colspan"
        }
      ]
    },
    "29265": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#columnspan",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`columnSpan`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`colSpan`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 124,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`columnSpan`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`colSpan`"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#columnspan"
        }
      ]
    },
    "29266": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/EditableTextBase#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 125,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#domnode"
        }
      ]
    },
    "29267": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/EditableTextBase#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#order"
        }
      ]
    },
    "29268": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexgrow"
        }
      ]
    },
    "29269": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 129,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexshrink"
        }
      ]
    },
    "29270": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 130,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexwrapbefore"
        }
      ]
    },
    "29271": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/EditableTextBase#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#alignself"
        }
      ]
    },
    "29272": {
      "name": "_moduleName",
      "type": "Property",
      "url": "/api/class/EditableTextBase#modulename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Module name when the view is a module root. Otherwise, it is undefined."
          }
        ]
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_moduleName?: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 137,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Module name when the view is a module root. Otherwise, it is undefined."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#modulename"
        }
      ]
    },
    "29273": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#oldleft"
        }
      ]
    },
    "29274": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#oldtop"
        }
      ]
    },
    "29275": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#oldright"
        }
      ]
    },
    "29276": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 155,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#oldbottom"
        }
      ]
    },
    "29277": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#defaultpaddingtop"
        }
      ]
    },
    "29278": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#defaultpaddingright"
        }
      ]
    },
    "29279": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#defaultpaddingbottom"
        }
      ]
    },
    "29280": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 171,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#defaultpaddingleft"
        }
      ]
    },
    "29281": {
      "name": "_suspendedUpdates",
      "type": "Property",
      "url": "/api/class/EditableTextBase#suspendedupdates",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_suspendedUpdates: {}",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 180,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#suspendedupdates"
        }
      ]
    },
    "29285": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveminwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 205,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveminwidth"
        }
      ]
    },
    "29286": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveminheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 206,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveminheight"
        }
      ]
    },
    "29287": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivewidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 207,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivewidth"
        }
      ]
    },
    "29288": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveheight"
        }
      ]
    },
    "29289": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemargintop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemargintop"
        }
      ]
    },
    "29290": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginright"
        }
      ]
    },
    "29291": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginbottom"
        }
      ]
    },
    "29292": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginleft"
        }
      ]
    },
    "29293": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingtop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingtop"
        }
      ]
    },
    "29294": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingright"
        }
      ]
    },
    "29295": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingbottom"
        }
      ]
    },
    "29296": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingleft"
        }
      ]
    },
    "29297": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivebordertopwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivebordertopwidth"
        }
      ]
    },
    "29298": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderrightwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderrightwidth"
        }
      ]
    },
    "29299": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderbottomwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderbottomwidth"
        }
      ]
    },
    "29300": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderleftwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderleftwidth"
        }
      ]
    },
    "29301": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/EditableTextBase#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#viewcontroller"
        }
      ]
    },
    "29302": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/EditableTextBase#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 253,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#nativeviewprotected"
        }
      ]
    },
    "29303": {
      "name": "nativeView",
      "type": "Property",
      "url": "/api/class/EditableTextBase#nativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeView: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 254,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#nativeview"
        }
      ]
    },
    "29304": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/EditableTextBase#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 261,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#reusable"
        }
      ]
    },
    "29305": {
      "name": "typeName",
      "type": "Property",
      "url": "/api/class/EditableTextBase#typename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "typeName: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 266,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#typename"
        }
      ]
    },
    "29306": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 271,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#parent"
        }
      ]
    },
    "29307": {
      "name": "parentNode",
      "type": "Property",
      "url": "/api/class/EditableTextBase#parentnode",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the template parent or the native parent. Sets the template parent."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "parentNode: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 276,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#parentnode"
        }
      ]
    },
    "29308": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/EditableTextBase#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 281,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#id"
        }
      ]
    },
    "29309": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/EditableTextBase#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 286,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#classname"
        }
      ]
    },
    "29310": {
      "name": "page",
      "type": "Property",
      "url": "/api/class/EditableTextBase#page",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets owner page. This is a read-only property."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "page: <a href=\"/api/class/Page\">Page</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 291,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#page"
        }
      ]
    },
    "29311": {
      "name": "style",
      "type": "Property",
      "url": "/api/class/EditableTextBase#style",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the style object associated to this view."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "style: <a href=\"/api/class/Style\">Style</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#style"
        }
      ]
    },
    "29312": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isCollapsed: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iscollapsed"
        }
      ]
    },
    "29313": {
      "name": "isLoaded",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isloaded",
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLoaded: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 303,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#isloaded"
        }
      ]
    },
    "29314": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getviewbyid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/EditableTextBase#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 308,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "29318": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getviewbydomid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(id: number): T",
          "url": "/api/class/EditableTextBase#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 313,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "29322": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#loadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 319,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29325": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#unloadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29328": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onunloaded",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/EditableTextBase#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 328,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29330": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onresumenativeupdates",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/EditableTextBase#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 329,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29332": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/EditableTextBase#bind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/EditableTextBase#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 331,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29336": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/EditableTextBase#unbind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/EditableTextBase#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 332,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29339": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/EditableTextBase#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29343": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/EditableTextBase#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 349,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29347": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 351,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29350": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29353": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#parentchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 356,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29356": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/EditableTextBase#dialogclosed",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/EditableTextBase#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29358": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onrootviewreset",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/EditableTextBase#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29360": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/EditableTextBase#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 366,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#domid"
        }
      ]
    },
    "29361": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/EditableTextBase#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_cssState: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 368,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#cssstate"
        }
      ]
    },
    "29362": {
      "name": "_onCssStateChange",
      "type": "Method",
      "url": "/api/class/EditableTextBase#oncssstatechange",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onCssStateChange(): void",
          "url": "/api/class/EditableTextBase#oncssstatechange-oncssstatechange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 374,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies each child's css state for change, recursively.\nEither the style scope, className or id properties were changed."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29364": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setinlinestyle",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/EditableTextBase#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 381,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29367": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/EditableTextBase#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 383,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#context"
        }
      ]
    },
    "29368": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number): void",
          "url": "/api/class/EditableTextBase#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 389,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29372": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/EditableTextBase#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/EditableTextBase#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29375": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/EditableTextBase#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/EditableTextBase#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 402,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29378": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/EditableTextBase#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 408,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "29380": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/EditableTextBase#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29382": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/EditableTextBase#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29384": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(view: any): void",
          "url": "/api/class/EditableTextBase#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 430,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29387": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 432,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#isaddedtonativevisualtree"
        }
      ]
    },
    "29388": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/EditableTextBase#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29392": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29395": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/EditableTextBase#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/EditableTextBase#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "29398": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/EditableTextBase#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 446,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29401": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/EditableTextBase#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/EditableTextBase#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29404": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/EditableTextBase#ensuredomnode",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): any",
          "url": "/api/class/EditableTextBase#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 459,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "29406": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/EditableTextBase#recyclenativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 461,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#recyclenativeview"
        }
      ]
    },
    "29407": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ispaddingrelative",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 466,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#ispaddingrelative"
        }
      ]
    },
    "29408": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ignoreflexminwidthheightreset",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 471,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#ignoreflexminwidthheightreset"
        }
      ]
    },
    "29409": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/EditableTextBase#stylescope",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_styleScope: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 473,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#stylescope"
        }
      ]
    },
    "29410": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/EditableTextBase#automaticallyadjustsscrollviewinsets",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 478,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "29411": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isstylescopehost",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 482,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/EditableTextBase#isstylescopehost"
        }
      ]
    },
    "29412": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutparent",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/EditableTextBase#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 487,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29414": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/EditableTextBase#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#suspendnativeupdatescount"
        }
      ]
    },
    "29415": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/EditableTextBase#batchupdate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/EditableTextBase#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "29421": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/EditableTextBase#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "29423": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/EditableTextBase#inheritstylescope",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: any): void",
          "url": "/api/class/EditableTextBase#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29426": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#callloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/EditableTextBase#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29428": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#callunloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/EditableTextBase#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 526,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "29430": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/EditableTextBase#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29438": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/EditableTextBase#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/EditableTextBase#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29442": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/EditableTextBase#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29446": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/EditableTextBase#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/EditableTextBase#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29449": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/EditableTextBase#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/EditableTextBase#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29453": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/EditableTextBase#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/EditableTextBase#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "29458": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/EditableTextBase#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/EditableTextBase#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "29461": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/EditableTextBase#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/EditableTextBase#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "29464": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/EditableTextBase#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "29469": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#isviewbase"
        }
      ]
    }
  }
}