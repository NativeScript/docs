{
  "title": "ImageSource",
  "hierarchy": [
    [
      {
        "text": "ImageSource"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        2331
      ]
    },
    {
      "title": "Properties",
      "items": [
        2338,
        2334,
        2337,
        2336,
        2335
      ]
    },
    {
      "title": "Methods",
      "items": [
        2339,
        2293,
        2363,
        2323,
        2320,
        2357,
        2317,
        2314,
        2351,
        2308,
        2311,
        2305,
        2326,
        2345,
        2302,
        2299,
        2296,
        2360,
        2354,
        2348,
        2366,
        2342,
        2392,
        2396,
        2374,
        2379,
        2371,
        2384,
        2388
      ]
    }
  ],
  "reflections": {
    "2293": {
      "name": "fromAsset",
      "type": "Method",
      "url": "/api/class/ImageSource#fromasset-2",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromAsset(asset: <a href=\"/api/class/ImageAsset\">ImageAsset</a>): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromasset-2-fromasset-3",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 37,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified asset asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "asset",
              "type": "<a href=\"/api/class/ImageAsset\">ImageAsset</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The ImageAsset instance used to create ImageSource."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2296": {
      "name": "fromUrl",
      "type": "Method",
      "url": "/api/class/ImageSource#fromurl",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromUrl(url: string): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromurl-fromurl-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 43,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Downloads the image from the provided Url and creates a new ImageSource instance from it."
              }
            ]
          },
          "parameters": [
            {
              "name": "url",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The link to the remote image object. This operation will download and decode the image."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2299": {
      "name": "fromResourceSync",
      "type": "Method",
      "url": "/api/class/ImageSource#fromresourcesync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromResourceSync(name: string): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#fromresourcesync-fromresourcesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified resource name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the resource (without its extension)."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2302": {
      "name": "fromResource",
      "type": "Method",
      "url": "/api/class/ImageSource#fromresource-2",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromResource(name: string): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromresource-2-fromresource-3",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 55,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified resource name asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the resource (without its extension)."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2305": {
      "name": "fromFileSync",
      "type": "Method",
      "url": "/api/class/ImageSource#fromfilesync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromFileSync(path: string): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#fromfilesync-fromfilesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 61,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified file."
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location of the file on the file system."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2308": {
      "name": "fromFile",
      "type": "Method",
      "url": "/api/class/ImageSource#fromfile-2",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromFile(path: string): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromfile-2-fromfile-3",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 67,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified file asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location of the file on the file system."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2311": {
      "name": "fromFileOrResourceSync",
      "type": "Method",
      "url": "/api/class/ImageSource#fromfileorresourcesync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromFileOrResourceSync(path: string): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#fromfileorresourcesync-fromfileorresourcesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 73,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a new ImageSource instance and loads it from the specified local file or resource (if specified with the \"res://\" prefix)."
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location of the file on the file system."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2314": {
      "name": "fromDataSync",
      "type": "Method",
      "url": "/api/class/ImageSource#fromdatasync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromDataSync(data: any): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#fromdatasync-fromdatasync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified native image data."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native data (byte array) to load the image from. This will be either Stream for Android or NSData for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2317": {
      "name": "fromData",
      "type": "Method",
      "url": "/api/class/ImageSource#fromdata-2",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromData(data: any): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromdata-2-fromdata-3",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 85,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified native image data asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native data (byte array) to load the image from. This will be either Stream for Android or NSData for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2320": {
      "name": "fromBase64Sync",
      "type": "Method",
      "url": "/api/class/ImageSource#frombase64sync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromBase64Sync(source: string): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#frombase64sync-frombase64sync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified base64 encoded string."
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Base64 string to load the image from."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2323": {
      "name": "fromBase64",
      "type": "Method",
      "url": "/api/class/ImageSource#frombase64-2",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromBase64(source: string): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#frombase64-2-frombase64-3",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 97,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads this instance from the specified base64 encoded string asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Base64 string to load the image from."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2326": {
      "name": "fromFontIconCodeSync",
      "type": "Method",
      "url": "/api/class/ImageSource#fromfonticoncodesync",
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromFontIconCodeSync(source: string, font: <a href=\"/api/class/Font\">Font</a>, color: <a href=\"/api/class/Color\">Color</a>): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#fromfonticoncodesync-fromfonticoncodesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 105,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a new ImageSource instance and loads it from the specified font icon code."
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The hex font icon code string"
                  }
                ]
              }
            },
            {
              "name": "font",
              "type": "<a href=\"/api/class/Font\">Font</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The font for the corresponding font icon code"
                  }
                ]
              }
            },
            {
              "name": "color",
              "type": "<a href=\"/api/class/Color\">Color</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The color of the generated icon image"
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2331": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/ImageSource#constructor",
      "flags": {},
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new ImageSource(nativeSource?: any): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#constructor-new-imagesource",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a new ImageSource instance and sets the provided native source object (typically a Bitmap).\nThe native source object will update either the android or ios properties, depending on the target os."
              }
            ]
          },
          "parameters": [
            {
              "name": "nativeSource",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native image object. Will be either a Bitmap for Android or a UIImage for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2334": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/ImageSource#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the height of this instance. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "height: number",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 11,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the height of this instance. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/ImageSource#height"
        }
      ]
    },
    "2335": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/ImageSource#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the width of this instance. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "width: number",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 16,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the width of this instance. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/ImageSource#width"
        }
      ]
    },
    "2336": {
      "name": "rotationAngle",
      "type": "Property",
      "url": "/api/class/ImageSource#rotationangle",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotation angle that should be applied to the image. (Used in android)"
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "rotationAngle: number",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 21,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotation angle that should be applied to the image. (Used in android)"
              }
            ]
          },
          "url": "/api/class/ImageSource#rotationangle"
        }
      ]
    },
    "2337": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/ImageSource#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The iOS-specific [UIImage](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/) instance. Will be undefined when running on Android."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 26,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The iOS-specific [UIImage](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/) instance. Will be undefined when running on Android."
              }
            ]
          },
          "url": "/api/class/ImageSource#ios"
        }
      ]
    },
    "2338": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/ImageSource#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The Android-specific [image](http://developer.android.com/reference/android/graphics/Bitmap.html) instance. Will be undefined when running on iOS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 31,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The Android-specific [image](http://developer.android.com/reference/android/graphics/Bitmap.html) instance. Will be undefined when running on iOS."
              }
            ]
          },
          "url": "/api/class/ImageSource#android"
        }
      ]
    },
    "2339": {
      "name": "fromAsset",
      "type": "Method",
      "url": "/api/class/ImageSource#fromasset",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromAsset(asset: <a href=\"/api/class/ImageAsset\">ImageAsset</a>): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#fromasset-fromasset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromAsset() instead.\nLoads this instance from the specified asset asynchronously."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "asset",
              "type": "<a href=\"/api/class/ImageAsset\">ImageAsset</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The ImageAsset instance used to create ImageSource."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    },
    "2342": {
      "name": "loadFromResource",
      "type": "Method",
      "url": "/api/class/ImageSource#loadfromresource",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadFromResource(name: string): boolean",
          "url": "/api/class/ImageSource#loadfromresource-loadfromresource-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 126,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromResourceSync() instead.\nLoads this instance from the specified resource name."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the resource (without its extension)."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2345": {
      "name": "fromResource",
      "type": "Method",
      "url": "/api/class/ImageSource#fromresource",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromResource(name: string): Promise&lt;boolean&gt;",
          "url": "/api/class/ImageSource#fromresource-fromresource-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromResource() instead.\nLoads this instance from the specified resource name asynchronously."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the resource (without its extension)."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;boolean&gt;"
        }
      ]
    },
    "2348": {
      "name": "loadFromFile",
      "type": "Method",
      "url": "/api/class/ImageSource#loadfromfile",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadFromFile(path: string): boolean",
          "url": "/api/class/ImageSource#loadfromfile-loadfromfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 140,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromFileSync() instead.\nLoads this instance from the specified file."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location of the file on the file system."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2351": {
      "name": "fromFile",
      "type": "Method",
      "url": "/api/class/ImageSource#fromfile",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromFile(path: string): Promise&lt;boolean&gt;",
          "url": "/api/class/ImageSource#fromfile-fromfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromFile() instead.\nLoads this instance from the specified file asynchronously."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location of the file on the file system."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;boolean&gt;"
        }
      ]
    },
    "2354": {
      "name": "loadFromData",
      "type": "Method",
      "url": "/api/class/ImageSource#loadfromdata",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadFromData(data: any): boolean",
          "url": "/api/class/ImageSource#loadfromdata-loadfromdata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromDataSync() instead.\nLoads this instance from the specified native image data."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native data (byte array) to load the image from. This will be either Stream for Android or NSData for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2357": {
      "name": "fromData",
      "type": "Method",
      "url": "/api/class/ImageSource#fromdata",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromData(data: any): Promise&lt;boolean&gt;",
          "url": "/api/class/ImageSource#fromdata-fromdata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 161,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromData() instead.\nLoads this instance from the specified native image data asynchronously."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native data (byte array) to load the image from. This will be either Stream for Android or NSData for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;boolean&gt;"
        }
      ]
    },
    "2360": {
      "name": "loadFromBase64",
      "type": "Method",
      "url": "/api/class/ImageSource#loadfrombase64",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadFromBase64(source: string): boolean",
          "url": "/api/class/ImageSource#loadfrombase64-loadfrombase64-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 168,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromBase64Sync() instead.\nLoads this instance from the specified base64 encoded string."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Base64 string to load the image from."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2363": {
      "name": "fromBase64",
      "type": "Method",
      "url": "/api/class/ImageSource#frombase64",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "fromBase64(source: string): Promise&lt;boolean&gt;",
          "url": "/api/class/ImageSource#frombase64-frombase64-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 175,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromBase64() instead.\nLoads this instance from the specified base64 encoded string asynchronously."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Base64 string to load the image from."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;boolean&gt;"
        }
      ]
    },
    "2366": {
      "name": "loadFromFontIconCode",
      "type": "Method",
      "url": "/api/class/ImageSource#loadfromfonticoncode",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadFromFontIconCode(source: string, font: <a href=\"/api/class/Font\">Font</a>, color: <a href=\"/api/class/Color\">Color</a>): boolean",
          "url": "/api/class/ImageSource#loadfromfonticoncode-loadfromfonticoncode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use ImageSource.fromFontIconCode() instead.\nLoads this instance from the specified font icon code."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "source",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The hex font icon code string"
                  }
                ]
              }
            },
            {
              "name": "font",
              "type": "<a href=\"/api/class/Font\">Font</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The font for the corresponding font icon code"
                  }
                ]
              }
            },
            {
              "name": "color",
              "type": "<a href=\"/api/class/Color\">Color</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The color of the generated icon image"
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2371": {
      "name": "setNativeSource",
      "type": "Method",
      "url": "/api/class/ImageSource#setnativesource",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeSource(nativeSource: any): void",
          "url": "/api/class/ImageSource#setnativesource-setnativesource-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 191,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the provided native source object (typically a Bitmap or a UIImage).\nThis will update either the android or ios properties, depending on the target os."
              }
            ]
          },
          "parameters": [
            {
              "name": "nativeSource",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The native image object. Will be either a Bitmap for Android or a UIImage for iOS."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "2374": {
      "name": "saveToFile",
      "type": "Method",
      "url": "/api/class/ImageSource#savetofile",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "saveToFile(\n  path: string,\n  format: \"png\" | \"jpeg\" | \"jpg\",\n  quality?: number\n): boolean",
          "url": "/api/class/ImageSource#savetofile-savetofile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saves this instance to the specified file, using the provided image format and quality."
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The path of the file on the file system to save to."
                  }
                ]
              }
            },
            {
              "name": "format",
              "type": "\"png\" | \"jpeg\" | \"jpg\"",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The format (encoding) of the image."
                  }
                ]
              }
            },
            {
              "name": "quality",
              "type": "number",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, specifying the quality of the encoding. Defaults to the maximum available quality. Quality varies on a scale of 0 to 100."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "2379": {
      "name": "saveToFileAsync",
      "type": "Method",
      "url": "/api/class/ImageSource#savetofileasync",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "saveToFileAsync(path: string, format: \"png\" | \"jpeg\" | \"jpg\", quality?: number): Promise&lt;boolean&gt;",
          "url": "/api/class/ImageSource#savetofileasync-savetofileasync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 207,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saves this instance to the specified file, using the provided image format and quality asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "path",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The path of the file on the file system to save to."
                  }
                ]
              }
            },
            {
              "name": "format",
              "type": "\"png\" | \"jpeg\" | \"jpg\"",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The format (encoding) of the image."
                  }
                ]
              }
            },
            {
              "name": "quality",
              "type": "number",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, specifying the quality of the encoding. Defaults to the maximum available quality. Quality varies on a scale of 0 to 100."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;boolean&gt;"
        }
      ]
    },
    "2384": {
      "name": "toBase64String",
      "type": "Method",
      "url": "/api/class/ImageSource#tobase64string",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "toBase64String(format: \"png\" | \"jpeg\" | \"jpg\", quality?: number): string",
          "url": "/api/class/ImageSource#tobase64string-tobase64string-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Converts the image to base64 encoded string, using the provided image format and quality."
              }
            ]
          },
          "parameters": [
            {
              "name": "format",
              "type": "\"png\" | \"jpeg\" | \"jpg\"",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The format (encoding) of the image."
                  }
                ]
              }
            },
            {
              "name": "quality",
              "type": "number",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, specifying the quality of the encoding. Defaults to the maximum available quality. Quality varies on a scale of 0 to 100."
                  }
                ]
              }
            }
          ],
          "returns": "string"
        }
      ]
    },
    "2388": {
      "name": "toBase64StringAsync",
      "type": "Method",
      "url": "/api/class/ImageSource#tobase64stringasync",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "toBase64StringAsync(format: \"png\" | \"jpeg\" | \"jpg\", quality?: number): Promise&lt;string&gt;",
          "url": "/api/class/ImageSource#tobase64stringasync-tobase64stringasync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 221,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Converts the image to base64 encoded string, using the provided image format and quality asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "format",
              "type": "\"png\" | \"jpeg\" | \"jpg\"",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The format (encoding) of the image."
                  }
                ]
              }
            },
            {
              "name": "quality",
              "type": "number",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, specifying the quality of the encoding. Defaults to the maximum available quality. Quality varies on a scale of 0 to 100."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;string&gt;"
        }
      ]
    },
    "2392": {
      "name": "resize",
      "type": "Method",
      "url": "/api/class/ImageSource#resize",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resize(maxSize: number, options?: any): <a href=\"/api/class/ImageSource\">ImageSource</a>",
          "url": "/api/class/ImageSource#resize-resize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns a new ImageSource that is a resized version of this image with the same aspect ratio, but the max dimension set to the provided maxSize."
              }
            ]
          },
          "parameters": [
            {
              "name": "maxSize",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The maximum pixel dimension of the resulting image."
                  }
                ]
              }
            },
            {
              "name": "options",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, Only used for android, options.filter is a boolean which\n    determines whether or not bilinear filtering should be used when scaling the bitmap.\n    If this is true then bilinear filtering will be used when scaling which has\n    better image quality at the cost of worse performance. If this is false then\n    nearest-neighbor scaling is used instead which will have worse image quality\n    but is faster. Recommended default is to set filter to 'true' as the cost of\n    bilinear filtering is typically minimal and the improved image quality is significant."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/ImageSource\">ImageSource</a>"
        }
      ]
    },
    "2396": {
      "name": "resizeAsync",
      "type": "Method",
      "url": "/api/class/ImageSource#resizeasync",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resizeAsync(maxSize: number, options?: any): Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;",
          "url": "/api/class/ImageSource#resizeasync-resizeasync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/image-source/index.d.ts",
              "line": 247,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns a new ImageSource that is a resized version of this image with the same aspect ratio, but the max dimension set to the provided maxSize asynchronously."
              }
            ]
          },
          "parameters": [
            {
              "name": "maxSize",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The maximum pixel dimension of the resulting image."
                  }
                ]
              }
            },
            {
              "name": "options",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional parameter, Only used for android, options.filter is a boolean which\n    determines whether or not bilinear filtering should be used when scaling the bitmap.\n    If this is true then bilinear filtering will be used when scaling which has\n    better image quality at the cost of worse performance. If this is false then\n    nearest-neighbor scaling is used instead which will have worse image quality\n    but is faster. Recommended default is to set filter to 'true' as the cost of\n    bilinear filtering is typically minimal and the improved image quality is significant."
                  }
                ]
              }
            }
          ],
          "returns": "Promise&lt;<a href=\"/api/class/ImageSource\">ImageSource</a>&gt;"
        }
      ]
    }
  }
}