{
  "title": "VirtualArray",
  "hierarchy": [
    [
      {
        "text": "Observable",
        "link": "/api/class/Observable"
      }
    ],
    [
      {
        "text": "VirtualArray"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        1812
      ]
    },
    {
      "title": "Properties",
      "items": [
        1819,
        1920,
        1818,
        1817,
        1824,
        1816,
        1784,
        1785,
        1786,
        1840
      ]
    },
    {
      "title": "Accessors",
      "items": [
        1820,
        1825
      ]
    },
    {
      "title": "Methods",
      "items": [
        1915,
        1912,
        1876,
        1802,
        1897,
        1829,
        1909,
        1836,
        1900,
        1904,
        1871,
        1797,
        1841,
        1787,
        1863,
        1792,
        1884,
        1807,
        1889,
        1832,
        1893
      ]
    }
  ],
  "reflections": {
    "1784": {
      "name": "changeEvent",
      "type": "Property",
      "url": "/api/class/VirtualArray#changeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to change event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "changeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 23,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to change event."
              }
            ]
          },
          "url": "/api/class/VirtualArray#changeevent"
        }
      ]
    },
    "1785": {
      "name": "itemsLoadingEvent",
      "type": "Property",
      "url": "/api/class/VirtualArray#itemsloadingevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to itemsLoading event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "signatures": [
        {
          "code": "itemsLoadingEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 27,
              "character": 11
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to itemsLoading event."
              }
            ]
          },
          "url": "/api/class/VirtualArray#itemsloadingevent"
        }
      ]
    },
    "1786": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/VirtualArray#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "propertyChangeEvent",
        "url": "/api/class/Observable#propertychangeevent",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "name": "propertyChangeEvent",
            "url": "/api/class/Observable#propertychangeevent",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/VirtualArray#propertychangeevent"
        }
      ]
    },
    "1787": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/VirtualArray#on-4",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "on",
        "url": "/api/class/Observable#on-3",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/VirtualArray#on-4-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "on",
            "url": "/api/class/Observable#on-3",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1792": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/VirtualArray#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "once",
        "url": "/api/class/Observable#once-2",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/VirtualArray#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "once",
            "url": "/api/class/Observable#once-2",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1797": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/VirtualArray#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "off",
        "url": "/api/class/Observable#off-2",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/VirtualArray#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "off",
            "url": "/api/class/Observable#off-2",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1802": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/VirtualArray#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "addEventListener",
        "url": "/api/class/Observable#addeventlistener-2",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/VirtualArray#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "addEventListener",
            "url": "/api/class/Observable#addeventlistener-2",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1807": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/VirtualArray#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "name": "removeEventListener",
        "url": "/api/class/Observable#removeeventlistener-2",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/VirtualArray#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "removeEventListener",
            "url": "/api/class/Observable#removeeventlistener-2",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1812": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/VirtualArray#constructor",
      "flags": {},
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new VirtualArray&lt;T&gt;(length?: number): <a href=\"/api/class/VirtualArray\">VirtualArray</a>&lt;T&gt;",
          "url": "/api/class/VirtualArray#constructor-new-virtualarray",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "parameters": [
            {
              "name": "length",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/VirtualArray\">VirtualArray</a>&lt;T&gt;"
        }
      ]
    },
    "1816": {
      "name": "_requestedIndexes",
      "type": "Property",
      "url": "/api/class/VirtualArray#requestedindexes",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "_requestedIndexes: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 28,
              "character": 12
            }
          ],
          "url": "/api/class/VirtualArray#requestedindexes"
        }
      ]
    },
    "1817": {
      "name": "_loadedIndexes",
      "type": "Property",
      "url": "/api/class/VirtualArray#loadedindexes",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "_loadedIndexes: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 29,
              "character": 12
            }
          ],
          "url": "/api/class/VirtualArray#loadedindexes"
        }
      ]
    },
    "1818": {
      "name": "_length",
      "type": "Property",
      "url": "/api/class/VirtualArray#length",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "_length: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 30,
              "character": 12
            }
          ],
          "url": "/api/class/VirtualArray#length"
        }
      ]
    },
    "1819": {
      "name": "_cache",
      "type": "Property",
      "url": "/api/class/VirtualArray#cache",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "_cache: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 31,
              "character": 12
            }
          ],
          "url": "/api/class/VirtualArray#cache"
        }
      ]
    },
    "1820": {
      "name": "length",
      "type": "Accessor",
      "url": "/api/class/VirtualArray#length",
      "flags": {},
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get length(): number",
          "url": "/api/class/VirtualArray#length-length-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 36,
              "character": 4
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets length for the virtual array."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "1824": {
      "name": "_loadSize",
      "type": "Property",
      "url": "/api/class/VirtualArray#loadsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets load size for the virtual array."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "_loadSize: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 41,
              "character": 12
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets load size for the virtual array."
              }
            ]
          },
          "url": "/api/class/VirtualArray#loadsize"
        }
      ]
    },
    "1825": {
      "name": "loadSize",
      "type": "Accessor",
      "url": "/api/class/VirtualArray#loadsize",
      "flags": {},
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get loadSize(): number",
          "url": "/api/class/VirtualArray#loadsize-loadsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 42,
              "character": 4
            }
          ],
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "1829": {
      "name": "getItem",
      "type": "Method",
      "url": "/api/class/VirtualArray#getitem",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getItem(index: number): T",
          "url": "/api/class/VirtualArray#getitem-getitem-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 44,
              "character": 4
            }
          ],
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "1832": {
      "name": "setItem",
      "type": "Method",
      "url": "/api/class/VirtualArray#setitem",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setItem(index: number, value: T): void",
          "url": "/api/class/VirtualArray#setitem-setitem-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 45,
              "character": 4
            }
          ],
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {}
            },
            {
              "name": "value",
              "type": "T",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1836": {
      "name": "load",
      "type": "Method",
      "url": "/api/class/VirtualArray#load",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "load(index: number, items: T[]): void",
          "url": "/api/class/VirtualArray#load-load-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 49,
              "character": 4
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Loads items from an array starting at index."
              }
            ]
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {}
            },
            {
              "name": "items",
              "type": "T[]",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1840": {
      "name": "requestItems",
      "type": "Property",
      "url": "/api/class/VirtualArray#requestitems",
      "flags": {
        "isPrivate": true
      },
      "signatures": [
        {
          "code": "requestItems: any",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 50,
              "character": 12
            }
          ],
          "url": "/api/class/VirtualArray#requestitems"
        }
      ]
    },
    "1841": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/VirtualArray#on",
      "flags": {},
      "inheritedFrom": {
        "name": "on",
        "url": "/api/class/Observable#on",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/VirtualArray#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 59,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "name": "on",
            "url": "/api/class/Observable#on",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\")."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"itemsLoading\", callback: (args: <a href=\"/api/interface/ItemsLoading\">ItemsLoading</a>) => void, thisArg?: any): void",
          "url": "/api/class/VirtualArray#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 63,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "name": "on",
            "url": "/api/class/Observable#on",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when still not loaded items are requested."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"itemsLoading\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ItemsLoading\">ItemsLoading</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"change\", callback: (args: <a href=\"/api/interface/ChangedData\">ChangedData</a>&lt;T&gt;) => void, thisArg?: any): void",
          "url": "/api/class/VirtualArray#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/virtual-array/index.d.ts",
              "line": 67,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a change occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"change\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ChangedData\">ChangedData</a>&lt;T&gt;) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1863": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/VirtualArray#once",
      "flags": {},
      "inheritedFrom": {
        "name": "once",
        "url": "/api/class/Observable#once",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/VirtualArray#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "once",
            "url": "/api/class/Observable#once",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1871": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/VirtualArray#off",
      "flags": {},
      "inheritedFrom": {
        "name": "off",
        "url": "/api/class/Observable#off",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string, callback?: any, thisArg?: any): any",
          "url": "/api/class/VirtualArray#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "off",
            "url": "/api/class/Observable#off",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Shortcut alias to the removeEventListener method."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1876": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/VirtualArray#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "name": "addEventListener",
        "url": "/api/class/Observable#addeventlistener",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventNames: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/VirtualArray#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 121,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "addEventListener",
            "url": "/api/class/Observable#addeventlistener",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a listener for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events to attach the listener to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when some of the specified event(s) is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1884": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/VirtualArray#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "name": "removeEventListener",
        "url": "/api/class/Observable#removeeventlistener",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventNames: string, callback?: any, thisArg?: any): any",
          "url": "/api/class/VirtualArray#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "removeEventListener",
            "url": "/api/class/Observable#removeeventlistener",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1889": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/VirtualArray#set",
      "flags": {},
      "inheritedFrom": {
        "name": "set",
        "url": "/api/class/Observable#set",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/VirtualArray#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "set",
            "url": "/api/class/Observable#set",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1893": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/VirtualArray#setproperty",
      "flags": {},
      "inheritedFrom": {
        "name": "setProperty",
        "url": "/api/class/Observable#setproperty",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/VirtualArray#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "setProperty",
            "url": "/api/class/Observable#setproperty",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1897": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/VirtualArray#get",
      "flags": {},
      "inheritedFrom": {
        "name": "get",
        "url": "/api/class/Observable#get",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/VirtualArray#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "get",
            "url": "/api/class/Observable#get",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1900": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/VirtualArray#notify",
      "flags": {},
      "inheritedFrom": {
        "name": "notify",
        "url": "/api/class/Observable#notify",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/VirtualArray#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "notify",
            "url": "/api/class/Observable#notify",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1904": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/VirtualArray#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "name": "notifyPropertyChange",
        "url": "/api/class/Observable#notifypropertychange",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/VirtualArray#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "notifyPropertyChange",
            "url": "/api/class/Observable#notifypropertychange",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "1909": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/VirtualArray#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "name": "hasListeners",
        "url": "/api/class/Observable#haslisteners",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/VirtualArray#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "hasListeners",
            "url": "/api/class/Observable#haslisteners",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "1912": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/VirtualArray#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "name": "_emit",
        "url": "/api/class/Observable#emit",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/VirtualArray#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "_emit",
            "url": "/api/class/Observable#emit",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "1915": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/VirtualArray#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "name": "_createPropertyChangeData",
        "url": "/api/class/Observable#createpropertychangedata",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/VirtualArray#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "name": "_createPropertyChangeData",
            "url": "/api/class/Observable#createpropertychangedata",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "1920": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/VirtualArray#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "name": "_isViewBase",
        "url": "/api/class/Observable#isviewbase",
        "fromName": "Observable",
        "fromUrl": "/api/class/Observable"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "name": "_isViewBase",
            "url": "/api/class/Observable#isviewbase",
            "fromName": "Observable",
            "fromUrl": "/api/class/Observable"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/VirtualArray#isviewbase"
        }
      ]
    }
  }
}