{
  "title": "TextView",
  "hierarchy": [
    [
      {
        "text": "EditableTextBase",
        "link": "/api/class/EditableTextBase"
      }
    ],
    [
      {
        "text": "TextView"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        26653
      ]
    },
    {
      "title": "Properties",
      "items": [
        26730,
        27257,
        27026,
        27214,
        27208,
        26970,
        26969,
        27126,
        27127,
        27125,
        27124,
        27207,
        26932,
        27255,
        27234,
        27027,
        27254,
        26701,
        27258,
        27316,
        26933,
        26930,
        27119,
        27123,
        27120,
        27122,
        27121,
        27256,
        27128,
        27261,
        26592,
        26594,
        26593,
        26720,
        26726,
        26721,
        26724,
        26728,
        26727,
        26729,
        26622,
        26722,
        26723,
        26725,
        26719,
        27118,
        26655,
        26733,
        26732,
        26661,
        26664,
        26662,
        26731,
        26734,
        26735,
        26736,
        26702,
        26586,
        26706,
        26717,
        26716,
        26711,
        26703,
        26707,
        26712,
        26713,
        26705,
        26710,
        26704,
        26714,
        26715,
        26709,
        26708,
        26737,
        27156,
        27108,
        26718,
        27111,
        27109,
        27112,
        26625,
        26888,
        26768,
        26769,
        26767,
        26626,
        27106,
        27113,
        26663,
        27146,
        27147,
        27145,
        27144,
        27135,
        27104,
        27138,
        27139,
        27137,
        27136,
        27133,
        27132,
        27142,
        27143,
        27141,
        27140,
        27105,
        27134,
        27115,
        27116,
        27117,
        26587,
        26679,
        26678,
        26741,
        26665,
        26747,
        27155,
        27024,
        26656,
        26765,
        26763,
        26764,
        27159,
        26761,
        26931,
        26766,
        27160,
        26762,
        26658,
        26589,
        27102,
        26680,
        26681,
        26623,
        26742,
        26746,
        26743,
        26745,
        26744,
        26666,
        26657,
        26739,
        26738,
        26863,
        26676,
        27150,
        27149,
        26750,
        27114,
        26759,
        26760,
        26687,
        26688,
        26689,
        26690,
        26691,
        27157,
        27153,
        27154,
        26754,
        26627,
        27253,
        26659,
        27151,
        26751,
        26752,
        26753,
        27107,
        27110,
        26757,
        26758,
        26590,
        26591,
        27158,
        27022,
        26677,
        26682,
        26588,
        26683,
        26685,
        26684,
        27103,
        27023,
        27025,
        26755,
        26756,
        27152,
        26624,
        26660,
        26748,
        27148,
        26749,
        26686,
        26740
      ]
    },
    {
      "title": "Accessors",
      "items": [
        27080,
        27084,
        27076
      ]
    },
    {
      "title": "Methods",
      "items": [
        26692,
        27186,
        27190,
        27235,
        26980,
        27262,
        27242,
        26900,
        27311,
        27203,
        26904,
        27308,
        26949,
        26995,
        26898,
        26902,
        27015,
        26956,
        26997,
        27012,
        27064,
        27270,
        27259,
        27033,
        27008,
        27209,
        27010,
        26989,
        27205,
        26910,
        27200,
        27070,
        27074,
        27072,
        26977,
        26986,
        27194,
        27197,
        27239,
        26696,
        26940,
        26936,
        26669,
        26974,
        26971,
        26934,
        26698,
        26959,
        27030,
        27215,
        27018,
        27268,
        27060,
        27219,
        26963,
        27003,
        26925,
        26928,
        26889,
        26892,
        27041,
        26643,
        27245,
        26864,
        27179,
        27273,
        27275,
        26895,
        27057,
        26618,
        26867,
        27225,
        27248,
        27222,
        26667,
        27229,
        27090,
        26916,
        27251,
        26807,
        27293,
        26884,
        26809,
        26877,
        26879,
        26881,
        26783,
        26785,
        26781,
        26870,
        27165,
        27161,
        26912,
        27305,
        27227,
        26774,
        26604,
        26801,
        27169,
        26770,
        26595,
        27296,
        27300,
        26812,
        26638,
        26820,
        26628,
        26886,
        27277,
        26633,
        26791,
        27028,
        26787,
        27177,
        27175,
        27049,
        26648,
        27088,
        27096,
        26612,
        26922,
        27285,
        27211,
        26797,
        27231,
        26914,
        27289,
        26672,
        27098,
        27054,
        27183,
        27172
      ]
    }
  ],
  "reflections": {
    "26586": {
      "name": "blurEvent",
      "type": "Property",
      "url": "/api/class/TextView#blurevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "blurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 12,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#blurevent"
        }
      ]
    },
    "26587": {
      "name": "focusEvent",
      "type": "Property",
      "url": "/api/class/TextView#focusevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "focusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 13,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#focusevent"
        }
      ]
    },
    "26588": {
      "name": "textChangeEvent",
      "type": "Property",
      "url": "/api/class/TextView#textchangeevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 14,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#textchangeevent"
        }
      ]
    },
    "26589": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/TextView#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/TextView#layoutchangedevent"
        }
      ]
    },
    "26590": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/TextView#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/TextView#showingmodallyevent"
        }
      ]
    },
    "26591": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/TextView#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/TextView#shownmodallyevent"
        }
      ]
    },
    "26592": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityblurevent"
        }
      ]
    },
    "26593": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityfocusevent"
        }
      ]
    },
    "26594": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityfocuschangedevent"
        }
      ]
    },
    "26595": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/TextView#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/TextView#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 550,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "26604": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/TextView#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/TextView#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 560,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26612": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/TextView#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/TextView#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 570,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "26618": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/TextView#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/TextView#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 572,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "26622": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#accessibilityperformescapeevent"
        }
      ]
    },
    "26623": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/TextView#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/TextView#loadedevent"
        }
      ]
    },
    "26624": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/TextView#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/TextView#unloadedevent"
        }
      ]
    },
    "26625": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/TextView#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/TextView#createdevent"
        }
      ]
    },
    "26626": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/TextView#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/TextView#disposenativeviewevent"
        }
      ]
    },
    "26627": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/TextView#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/TextView#propertychangeevent"
        }
      ]
    },
    "26628": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TextView#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TextView#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26633": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TextView#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TextView#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26638": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TextView#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/TextView#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26643": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TextView#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/TextView#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26648": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TextView#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/TextView#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26653": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/TextView#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new TextView(): <a href=\"/api/class/TextView\">TextView</a>",
          "url": "/api/class/TextView#constructor-new-textview",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Please note that should you be using the "
              },
              {
                "kind": "code",
                "text": "`new Observable({})`"
              },
              {
                "kind": "text",
                "text": " constructor, it is **obsolete** since v3.0,\nand you have to migrate to the \"data/observable\" "
              },
              {
                "kind": "code",
                "text": "`fromObject({})`"
              },
              {
                "kind": "text",
                "text": " or the "
              },
              {
                "kind": "code",
                "text": "`fromObjectRecursive({})`"
              },
              {
                "kind": "text",
                "text": " functions."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/TextView\">TextView</a>"
        }
      ]
    },
    "26655": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/TextView#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/EditText.html) that represents the user interface for this component. Valid only when running on Android OS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 11,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/EditText.html) that represents the user interface for this component. Valid only when running on Android OS."
              }
            ]
          },
          "url": "/api/class/TextView#android"
        }
      ]
    },
    "26656": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/TextView#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native iOS [UITextView](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextView_Class/) that represents the user interface for this component. Valid only when running on iOS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 16,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native iOS [UITextView](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextView_Class/) that represents the user interface for this component. Valid only when running on iOS."
              }
            ]
          },
          "url": "/api/class/TextView#ios"
        }
      ]
    },
    "26657": {
      "name": "maxLines",
      "type": "Property",
      "url": "/api/class/TextView#maxlines",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of lines."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "maxLines: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 21,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of lines."
              }
            ]
          },
          "url": "/api/class/TextView#maxlines"
        }
      ]
    },
    "26658": {
      "name": "keyboardType",
      "type": "Property",
      "url": "/api/class/TextView#keyboardtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "keyboardType: <a href=\"/api/namespace/CoreTypes#keyboardinputtype\">KeyboardInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard type."
              }
            ]
          },
          "url": "/api/class/TextView#keyboardtype"
        }
      ]
    },
    "26659": {
      "name": "returnKeyType",
      "type": "Property",
      "url": "/api/class/TextView#returnkeytype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard return key flavor."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "returnKeyType: <a href=\"/api/namespace/CoreTypes#returnkeybuttontype\">ReturnKeyButtonType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard return key flavor."
              }
            ]
          },
          "url": "/api/class/TextView#returnkeytype"
        }
      ]
    },
    "26660": {
      "name": "updateTextTrigger",
      "type": "Property",
      "url": "/api/class/TextView#updatetexttrigger",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating when the text property will be updated."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "updateTextTrigger: <a href=\"/api/namespace/CoreTypes#updatetexttriggertype\">UpdateTextTriggerType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating when the text property will be updated."
              }
            ]
          },
          "url": "/api/class/TextView#updatetexttrigger"
        }
      ]
    },
    "26661": {
      "name": "autocapitalizationType",
      "type": "Property",
      "url": "/api/class/TextView#autocapitalizationtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autocapitalization type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "autocapitalizationType: <a href=\"/api/namespace/CoreTypes#autocapitalizationinputtype\">AutocapitalizationInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autocapitalization type."
              }
            ]
          },
          "url": "/api/class/TextView#autocapitalizationtype"
        }
      ]
    },
    "26662": {
      "name": "autofillType",
      "type": "Property",
      "url": "/api/class/TextView#autofilltype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autofill type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "autofillType: AutofillType",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 39,
              "character": 2
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autofill type."
              }
            ]
          },
          "url": "/api/class/TextView#autofilltype"
        }
      ]
    },
    "26663": {
      "name": "editable",
      "type": "Property",
      "url": "/api/class/TextView#editable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets whether the instance is editable."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "editable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets whether the instance is editable."
              }
            ]
          },
          "url": "/api/class/TextView#editable"
        }
      ]
    },
    "26664": {
      "name": "autocorrect",
      "type": "Property",
      "url": "/api/class/TextView#autocorrect",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables autocorrection."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "autocorrect: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables autocorrection."
              }
            ]
          },
          "url": "/api/class/TextView#autocorrect"
        }
      ]
    },
    "26665": {
      "name": "hint",
      "type": "Property",
      "url": "/api/class/TextView#hint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the placeholder text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "hint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the placeholder text."
              }
            ]
          },
          "url": "/api/class/TextView#hint"
        }
      ]
    },
    "26666": {
      "name": "maxLength",
      "type": "Property",
      "url": "/api/class/TextView#maxlength",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of characters."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "maxLength: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of characters."
              }
            ]
          },
          "url": "/api/class/TextView#maxlength"
        }
      ]
    },
    "26667": {
      "name": "dismissSoftInput",
      "type": "Method",
      "url": "/api/class/TextView#dismisssoftinput",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "dismissSoftInput(): void",
          "url": "/api/class/TextView#dismisssoftinput-dismisssoftinput-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hides the soft input method, ususally a soft keyboard."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26669": {
      "name": "_setInputType",
      "type": "Method",
      "url": "/api/class/TextView#setinputtype",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setInputType(inputType: number): void",
          "url": "/api/class/TextView#setinputtype-setinputtype-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 70,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "inputType",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26672": {
      "name": "setSelection",
      "type": "Method",
      "url": "/api/class/TextView#setselection",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setSelection(start: number, stop?: number): any",
          "url": "/api/class/TextView#setselection-setselection-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the selection anchor to start and the selection edge to stop"
              }
            ]
          },
          "parameters": [
            {
              "name": "start",
              "type": "number",
              "flags": {}
            },
            {
              "name": "stop",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "26676": {
      "name": "nativeTextViewProtected",
      "type": "Property",
      "url": "/api/class/TextView#nativetextviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "nativeTextViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 14,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
              }
            ]
          },
          "url": "/api/class/TextView#nativetextviewprotected"
        }
      ]
    },
    "26677": {
      "name": "text",
      "type": "Property",
      "url": "/api/class/TextView#text",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "text: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the text."
              }
            ]
          },
          "url": "/api/class/TextView#text"
        }
      ]
    },
    "26678": {
      "name": "formattedText",
      "type": "Property",
      "url": "/api/class/TextView#formattedtext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a formatted string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "formattedText: <a href=\"/api/class/FormattedString\">FormattedString</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a formatted string."
              }
            ]
          },
          "url": "/api/class/TextView#formattedtext"
        }
      ]
    },
    "26679": {
      "name": "fontSize",
      "type": "Property",
      "url": "/api/class/TextView#fontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets font-size style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "fontSize: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets font-size style property."
              }
            ]
          },
          "url": "/api/class/TextView#fontsize"
        }
      ]
    },
    "26680": {
      "name": "letterSpacing",
      "type": "Property",
      "url": "/api/class/TextView#letterspacing",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets letterSpace style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "letterSpacing: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets letterSpace style property."
              }
            ]
          },
          "url": "/api/class/TextView#letterspacing"
        }
      ]
    },
    "26681": {
      "name": "lineHeight",
      "type": "Property",
      "url": "/api/class/TextView#lineheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets lineHeight style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "lineHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets lineHeight style property."
              }
            ]
          },
          "url": "/api/class/TextView#lineheight"
        }
      ]
    },
    "26682": {
      "name": "textAlignment",
      "type": "Property",
      "url": "/api/class/TextView#textalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text-alignment style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textAlignment: <a href=\"/api/namespace/CoreTypes#textalignmenttype\">TextAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text-alignment style property."
              }
            ]
          },
          "url": "/api/class/TextView#textalignment"
        }
      ]
    },
    "26683": {
      "name": "textDecoration",
      "type": "Property",
      "url": "/api/class/TextView#textdecoration",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text decorations style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textDecoration: <a href=\"/api/namespace/CoreTypes#textdecorationtype\">TextDecorationType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text decorations style property."
              }
            ]
          },
          "url": "/api/class/TextView#textdecoration"
        }
      ]
    },
    "26684": {
      "name": "textTransform",
      "type": "Property",
      "url": "/api/class/TextView#texttransform",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text transform style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textTransform: <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text transform style property."
              }
            ]
          },
          "url": "/api/class/TextView#texttransform"
        }
      ]
    },
    "26685": {
      "name": "textShadow",
      "type": "Property",
      "url": "/api/class/TextView#textshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text shadow style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textShadow: CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text shadow style property."
              }
            ]
          },
          "url": "/api/class/TextView#textshadow"
        }
      ]
    },
    "26686": {
      "name": "whiteSpace",
      "type": "Property",
      "url": "/api/class/TextView#whitespace",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "whiteSpace: <a href=\"/api/namespace/CoreTypes#whitespacetype\">WhiteSpaceType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/TextView#whitespace"
        }
      ]
    },
    "26687": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/TextView#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/TextView#padding"
        }
      ]
    },
    "26688": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingbottom"
        }
      ]
    },
    "26689": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingleft"
        }
      ]
    },
    "26690": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/TextView#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingright"
        }
      ]
    },
    "26691": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/TextView#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingtop"
        }
      ]
    },
    "26692": {
      "name": "_addChildFromBuilder",
      "type": "Method",
      "url": "/api/class/TextView#addchildfrombuilder",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addChildFromBuilder(name: string, value: any): void",
          "url": "/api/class/TextView#addchildfrombuilder-addchildfrombuilder-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 103,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called for every child element declared in xml.\nThis method will add a child element (value) to current element."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the element."
                  }
                ]
              }
            },
            {
              "name": "value",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Value of the element."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26696": {
      "name": "_requestLayoutOnTextChanged",
      "type": "Method",
      "url": "/api/class/TextView#requestlayoutontextchanged",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_requestLayoutOnTextChanged(): void",
          "url": "/api/class/TextView#requestlayoutontextchanged-requestlayoutontextchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called when the text property is changed to request layout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26698": {
      "name": "_setNativeText",
      "type": "Method",
      "url": "/api/class/TextView#setnativetext",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeText(reset?: boolean): void",
          "url": "/api/class/TextView#setnativetext-setnativetext-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 115,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "reset",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26701": {
      "name": "_isSingleLine",
      "type": "Property",
      "url": "/api/class/TextView#issingleline",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isSingleLine: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#issingleline"
        }
      ]
    },
    "26702": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/TextView#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/TextView#bindingcontext"
        }
      ]
    },
    "26703": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/TextView#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordercolor"
        }
      ]
    },
    "26704": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/TextView#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopcolor"
        }
      ]
    },
    "26705": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/TextView#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderrightcolor"
        }
      ]
    },
    "26706": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomcolor"
        }
      ]
    },
    "26707": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/TextView#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderleftcolor"
        }
      ]
    },
    "26708": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderwidth"
        }
      ]
    },
    "26709": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/TextView#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopwidth"
        }
      ]
    },
    "26710": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderrightwidth"
        }
      ]
    },
    "26711": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomwidth"
        }
      ]
    },
    "26712": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderleftwidth"
        }
      ]
    },
    "26713": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderradius"
        }
      ]
    },
    "26714": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/TextView#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopleftradius"
        }
      ]
    },
    "26715": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/TextView#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertoprightradius"
        }
      ]
    },
    "26716": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomrightradius"
        }
      ]
    },
    "26717": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomleftradius"
        }
      ]
    },
    "26718": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/TextView#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#color"
        }
      ]
    },
    "26719": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/TextView#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/TextView#accessible"
        }
      ]
    },
    "26720": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityhidden"
        }
      ]
    },
    "26721": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityidentifier"
        }
      ]
    },
    "26722": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityrole"
        }
      ]
    },
    "26723": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitystate"
        }
      ]
    },
    "26724": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitylabel"
        }
      ]
    },
    "26725": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityvalue"
        }
      ]
    },
    "26726": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityhint"
        }
      ]
    },
    "26727": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#accessibilityliveregion"
        }
      ]
    },
    "26728": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitylanguage"
        }
      ]
    },
    "26729": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitymediasession"
        }
      ]
    },
    "26730": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/TextView#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/TextView#androidcontentdescriptionupdated"
        }
      ]
    },
    "26731": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/TextView#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 290,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#automationtext"
        }
      ]
    },
    "26732": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/TextView#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 295,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/TextView#androidelevation"
        }
      ]
    },
    "26733": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/TextView#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 300,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/TextView#androiddynamicelevationoffset"
        }
      ]
    },
    "26734": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/TextView#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/TextView#background"
        }
      ]
    },
    "26735": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/TextView#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#backgroundcolor"
        }
      ]
    },
    "26736": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/TextView#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/TextView#backgroundimage"
        }
      ]
    },
    "26737": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/TextView#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/TextView#boxshadow"
        }
      ]
    },
    "26738": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/TextView#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/TextView#minwidth"
        }
      ]
    },
    "26739": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/TextView#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/TextView#minheight"
        }
      ]
    },
    "26740": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/TextView#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#width"
        }
      ]
    },
    "26741": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/TextView#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/TextView#height"
        }
      ]
    },
    "26742": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/TextView#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/TextView#margin"
        }
      ]
    },
    "26743": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/TextView#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginleft"
        }
      ]
    },
    "26744": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/TextView#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#margintop"
        }
      ]
    },
    "26745": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/TextView#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginright"
        }
      ]
    },
    "26746": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/TextView#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginbottom"
        }
      ]
    },
    "26747": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/TextView#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/TextView#horizontalalignment"
        }
      ]
    },
    "26748": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/TextView#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/TextView#verticalalignment"
        }
      ]
    },
    "26749": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/TextView#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/TextView#visibility"
        }
      ]
    },
    "26750": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/TextView#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/TextView#opacity"
        }
      ]
    },
    "26751": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/TextView#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotate"
        }
      ]
    },
    "26752": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/TextView#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotatex"
        }
      ]
    },
    "26753": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/TextView#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotatey"
        }
      ]
    },
    "26754": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/TextView#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 406,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/TextView#perspective"
        }
      ]
    },
    "26755": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/TextView#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 411,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TextView#translatex"
        }
      ]
    },
    "26756": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/TextView#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 416,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TextView#translatey"
        }
      ]
    },
    "26757": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/TextView#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TextView#scalex"
        }
      ]
    },
    "26758": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/TextView#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TextView#scaley"
        }
      ]
    },
    "26759": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/TextView#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 433,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TextView#originx"
        }
      ]
    },
    "26760": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/TextView#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TextView#originy"
        }
      ]
    },
    "26761": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/TextView#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 443,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TextView#isenabled"
        }
      ]
    },
    "26762": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/TextView#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TextView#isuserinteractionenabled"
        }
      ]
    },
    "26763": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/TextView#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TextView#iosoverflowsafearea"
        }
      ]
    },
    "26764": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/TextView#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/TextView#iosoverflowsafeareaenabled"
        }
      ]
    },
    "26765": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/TextView#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TextView#iosignoresafearea"
        }
      ]
    },
    "26766": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/TextView#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/TextView#islayoutvalid"
        }
      ]
    },
    "26767": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/TextView#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 474,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/TextView#csstype"
        }
      ]
    },
    "26768": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/TextView#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 476,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#cssclasses"
        }
      ]
    },
    "26769": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/TextView#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 477,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#csspseudoclasses"
        }
      ]
    },
    "26770": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/TextView#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/TextView#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 485,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26774": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/TextView#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/TextView#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 496,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26781": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/TextView#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "26783": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/TextView#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 506,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "26785": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/TextView#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 508,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "26787": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/TextView#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/TextView#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26791": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/TextView#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/TextView#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 525,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26797": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/TextView#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/TextView#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 532,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26801": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/TextView#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/TextView#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 541,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26807": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/TextView#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/TextView#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 578,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "26809": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/TextView#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/TextView#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 580,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "26812": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TextView#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 588,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "26820": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TextView#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 596,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 601,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 606,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 612,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 617,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 622,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "26863": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/TextView#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/TextView#modal"
        }
      ]
    },
    "26864": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/TextView#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/TextView#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "26867": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/TextView#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/TextView#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "26870": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/TextView#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/TextView#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "26877": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/TextView#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/TextView#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "26879": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/TextView#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/TextView#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "26881": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/TextView#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/TextView#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "26884": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/TextView#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/TextView#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "26886": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/TextView#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/TextView#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "26888": {
      "name": "css",
      "type": "Property",
      "url": "/api/class/TextView#css",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "css: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 673,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
              }
            ]
          },
          "url": "/api/class/TextView#css"
        }
      ]
    },
    "26889": {
      "name": "addCss",
      "type": "Method",
      "url": "/api/class/TextView#addcss",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCss(cssString: string): void",
          "url": "/api/class/TextView#addcss-addcss-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 680,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a new values to current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssString",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid css which will be added to current css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26892": {
      "name": "addCssFile",
      "type": "Method",
      "url": "/api/class/TextView#addcssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCssFile(cssFileName: string): void",
          "url": "/api/class/TextView#addcssfile-addcssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 687,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the content of the file to the current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26895": {
      "name": "changeCssFile",
      "type": "Method",
      "url": "/api/class/TextView#changecssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "changeCssFile(cssFileName: string): void",
          "url": "/api/class/TextView#changecssfile-changecssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 694,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the current css to the content of the file."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26898": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/TextView#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/TextView#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 697,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "26900": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/TextView#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/TextView#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 703,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "26902": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/TextView#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/TextView#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 709,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "26904": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/TextView#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/TextView#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 711,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26910": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/TextView#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/TextView#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 716,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26912": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/TextView#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/TextView#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 721,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "26914": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/TextView#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/TextView#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26916": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/TextView#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/TextView#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 732,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26922": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/TextView#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/TextView#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 746,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26925": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/TextView#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/TextView#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 751,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26928": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/TextView#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/TextView#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 756,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26930": {
      "name": "_modalParent",
      "type": "Property",
      "url": "/api/class/TextView#modalparent",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_modalParent?: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 762,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#modalparent"
        }
      ]
    },
    "26931": {
      "name": "isLayoutRequired",
      "type": "Property",
      "url": "/api/class/TextView#islayoutrequired",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isLayoutRequired: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#islayoutrequired"
        }
      ]
    },
    "26932": {
      "name": "_gestureObservers",
      "type": "Property",
      "url": "/api/class/TextView#gestureobservers",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_gestureObservers: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 770,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#gestureobservers"
        }
      ]
    },
    "26933": {
      "name": "_manager",
      "type": "Property",
      "url": "/api/class/TextView#manager",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "androidx.fragment.app.FragmentManager"
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_manager: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 775,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "androidx.fragment.app.FragmentManager"
              }
            ]
          },
          "url": "/api/class/TextView#manager"
        }
      ]
    },
    "26934": {
      "name": "_setNativeClipToBounds",
      "type": "Method",
      "url": "/api/class/TextView#setnativecliptobounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeClipToBounds(): void",
          "url": "/api/class/TextView#setnativecliptobounds-setnativecliptobounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 779,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "26936": {
      "name": "_setCurrentMeasureSpecs",
      "type": "Method",
      "url": "/api/class/TextView#setcurrentmeasurespecs",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentMeasureSpecs(\n  widthMeasureSpec: number,\n  heightMeasureSpec: number\n): boolean",
          "url": "/api/class/TextView#setcurrentmeasurespecs-setcurrentmeasurespecs-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 784,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by measure method to cache measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "26940": {
      "name": "_setCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/TextView#setcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentLayoutBounds(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): {\n  boundsChanged: boolean\n}",
          "url": "/api/class/TextView#setcurrentlayoutbounds-setcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 789,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by layout method to cache view bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  boundsChanged: boolean\n}"
        }
      ]
    },
    "26949": {
      "name": "_getCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/TextView#getcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getCurrentLayoutBounds(): {\n  bottom: number\n  left: number\n  right: number\n}",
          "url": "/api/class/TextView#getcurrentlayoutbounds-getcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 794,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Return view bounds."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: number\n  left: number\n  right: number\n}"
        }
      ]
    },
    "26956": {
      "name": "_goToVisualState",
      "type": "Method",
      "url": "/api/class/TextView#gotovisualstate",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_goToVisualState(state: string): any",
          "url": "/api/class/TextView#gotovisualstate-gotovisualstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 803,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "state",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "26959": {
      "name": "_setNativeViewFrame",
      "type": "Method",
      "url": "/api/class/TextView#setnativeviewframe",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeViewFrame(nativeView: any, frame: any): void",
          "url": "/api/class/TextView#setnativeviewframe-setnativeviewframe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 807,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "nativeView",
              "type": "any",
              "flags": {}
            },
            {
              "name": "frame",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26963": {
      "name": "_updateEffectiveLayoutValues",
      "type": "Method",
      "url": "/api/class/TextView#updateeffectivelayoutvalues",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateEffectiveLayoutValues(\n  parentWidthMeasureSize: number,\n  parentWidthMeasureMode: number,\n  parentHeightMeasureSize: number,\n  parentHeightMeasureMode: number\n): void",
          "url": "/api/class/TextView#updateeffectivelayoutvalues-updateeffectivelayoutvalues-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 812,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "parentWidthMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentWidthMeasureMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureMode",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26969": {
      "name": "_currentWidthMeasureSpec",
      "type": "Property",
      "url": "/api/class/TextView#currentwidthmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_currentWidthMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 816,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#currentwidthmeasurespec"
        }
      ]
    },
    "26970": {
      "name": "_currentHeightMeasureSpec",
      "type": "Property",
      "url": "/api/class/TextView#currentheightmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_currentHeightMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 820,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#currentheightmeasurespec"
        }
      ]
    },
    "26971": {
      "name": "_setMinWidthNative",
      "type": "Method",
      "url": "/api/class/TextView#setminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinWidthNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/TextView#setminwidthnative-setminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 824,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26974": {
      "name": "_setMinHeightNative",
      "type": "Method",
      "url": "/api/class/TextView#setminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinHeightNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/TextView#setminheightnative-setminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 828,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26977": {
      "name": "_redrawNativeBackground",
      "type": "Method",
      "url": "/api/class/TextView#redrawnativebackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_redrawNativeBackground(value: any): void",
          "url": "/api/class/TextView#redrawnativebackground-redrawnativebackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 832,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "26980": {
      "name": "_applyBackground",
      "type": "Method",
      "url": "/api/class/TextView#applybackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyBackground(\n  background: Background,\n  isBorderDrawable: boolean,\n  onlyColor: boolean,\n  backgroundDrawable: any\n): any",
          "url": "/api/class/TextView#applybackground-applybackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 837,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "method called on Android to apply the background. This allows custom handling"
              }
            ]
          },
          "parameters": [
            {
              "name": "background",
              "type": "Background",
              "flags": {}
            },
            {
              "name": "isBorderDrawable",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "onlyColor",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "backgroundDrawable",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "26986": {
      "name": "_removeAnimation",
      "type": "Method",
      "url": "/api/class/TextView#removeanimation",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeAnimation(animation: <a href=\"/api/class/Animation\">Animation</a>): boolean",
          "url": "/api/class/TextView#removeanimation-removeanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 842,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "animation",
              "type": "<a href=\"/api/class/Animation\">Animation</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "26989": {
      "name": "_onLivesync",
      "type": "Method",
      "url": "/api/class/TextView#onlivesync",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onLivesync(context?: { path: string }): boolean",
          "url": "/api/class/TextView#onlivesync-onlivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 846,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "26995": {
      "name": "_getFragmentManager",
      "type": "Method",
      "url": "/api/class/TextView#getfragmentmanager",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getFragmentManager(): any",
          "url": "/api/class/TextView#getfragmentmanager-getfragmentmanager-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 850,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "26997": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/TextView#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/TextView#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 851,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27003": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/TextView#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/TextView#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 859,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27008": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/TextView#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/TextView#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 864,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27010": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/TextView#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/TextView#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 869,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27012": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/TextView#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/TextView#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27015": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/TextView#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/TextView#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 880,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "27018": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/TextView#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/TextView#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 885,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "27022": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/TextView#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#testid"
        }
      ]
    },
    "27023": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/TextView#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#touchanimation"
        }
      ]
    },
    "27024": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/TextView#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#ignoretouchanimation"
        }
      ]
    },
    "27025": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/TextView#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#touchdelay"
        }
      ]
    },
    "27026": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/TextView#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#closemodalcallback"
        }
      ]
    },
    "27027": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/TextView#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 40,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#islayoutvalid"
        }
      ]
    },
    "27028": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/TextView#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/TextView#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 56,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27030": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/TextView#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/TextView#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 61,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27033": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/TextView#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 62,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27041": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TextView#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 64,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27049": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TextView#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: any, thisArg?: any): void",
          "url": "/api/class/TextView#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27054": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/TextView#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/TextView#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "27057": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/TextView#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/TextView#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 70,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27060": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/TextView#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/TextView#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 72,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27064": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/TextView#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/TextView#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27070": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/TextView#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27072": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/TextView#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27074": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/TextView#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27076": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/TextView#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 117,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "27080": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/TextView#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 119,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "27084": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/TextView#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "27088": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/TextView#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/TextView#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 206,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27090": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/TextView#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/TextView#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27096": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/TextView#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/TextView#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27098": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/TextView#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/TextView#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27102": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/TextView#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#left"
        }
      ]
    },
    "27103": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/TextView#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 109,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#top"
        }
      ]
    },
    "27104": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveleft"
        }
      ]
    },
    "27105": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivetop"
        }
      ]
    },
    "27106": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/TextView#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#dock"
        }
      ]
    },
    "27107": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/TextView#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#row"
        }
      ]
    },
    "27108": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/TextView#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 114,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#col"
        }
      ]
    },
    "27109": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/TextView#column",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`column`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`col`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`column`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`col`"
              }
            ]
          },
          "url": "/api/class/TextView#column"
        }
      ]
    },
    "27110": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/TextView#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#rowspan"
        }
      ]
    },
    "27111": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/TextView#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#colspan"
        }
      ]
    },
    "27112": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/TextView#columnspan",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`columnSpan`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`colSpan`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 124,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`columnSpan`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`colSpan`"
              }
            ]
          },
          "url": "/api/class/TextView#columnspan"
        }
      ]
    },
    "27113": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/TextView#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 125,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#domnode"
        }
      ]
    },
    "27114": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/TextView#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#order"
        }
      ]
    },
    "27115": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/TextView#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexgrow"
        }
      ]
    },
    "27116": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/TextView#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 129,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexshrink"
        }
      ]
    },
    "27117": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/TextView#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 130,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexwrapbefore"
        }
      ]
    },
    "27118": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/TextView#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#alignself"
        }
      ]
    },
    "27119": {
      "name": "_moduleName",
      "type": "Property",
      "url": "/api/class/TextView#modulename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Module name when the view is a module root. Otherwise, it is undefined."
          }
        ]
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_moduleName?: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 137,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Module name when the view is a module root. Otherwise, it is undefined."
              }
            ]
          },
          "url": "/api/class/TextView#modulename"
        }
      ]
    },
    "27120": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/TextView#oldleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#oldleft"
        }
      ]
    },
    "27121": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/TextView#oldtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#oldtop"
        }
      ]
    },
    "27122": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/TextView#oldright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#oldright"
        }
      ]
    },
    "27123": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/TextView#oldbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 155,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#oldbottom"
        }
      ]
    },
    "27124": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#defaultpaddingtop"
        }
      ]
    },
    "27125": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#defaultpaddingright"
        }
      ]
    },
    "27126": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#defaultpaddingbottom"
        }
      ]
    },
    "27127": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 171,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#defaultpaddingleft"
        }
      ]
    },
    "27128": {
      "name": "_suspendedUpdates",
      "type": "Property",
      "url": "/api/class/TextView#suspendedupdates",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_suspendedUpdates: {}",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 180,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
              }
            ]
          },
          "url": "/api/class/TextView#suspendedupdates"
        }
      ]
    },
    "27132": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveminwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 205,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveminwidth"
        }
      ]
    },
    "27133": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/TextView#effectiveminheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 206,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveminheight"
        }
      ]
    },
    "27134": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectivewidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 207,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivewidth"
        }
      ]
    },
    "27135": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/TextView#effectiveheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveheight"
        }
      ]
    },
    "27136": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivemargintop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemargintop"
        }
      ]
    },
    "27137": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginright"
        }
      ]
    },
    "27138": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginbottom"
        }
      ]
    },
    "27139": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginleft"
        }
      ]
    },
    "27140": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingtop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingtop"
        }
      ]
    },
    "27141": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingright"
        }
      ]
    },
    "27142": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingbottom"
        }
      ]
    },
    "27143": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingleft"
        }
      ]
    },
    "27144": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectivebordertopwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivebordertopwidth"
        }
      ]
    },
    "27145": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderrightwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderrightwidth"
        }
      ]
    },
    "27146": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderbottomwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderbottomwidth"
        }
      ]
    },
    "27147": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderleftwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderleftwidth"
        }
      ]
    },
    "27148": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/TextView#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/TextView#viewcontroller"
        }
      ]
    },
    "27149": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/TextView#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 253,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/TextView#nativeviewprotected"
        }
      ]
    },
    "27150": {
      "name": "nativeView",
      "type": "Property",
      "url": "/api/class/TextView#nativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "nativeView: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 254,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#nativeview"
        }
      ]
    },
    "27151": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/TextView#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 261,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/TextView#reusable"
        }
      ]
    },
    "27152": {
      "name": "typeName",
      "type": "Property",
      "url": "/api/class/TextView#typename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "typeName: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 266,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "url": "/api/class/TextView#typename"
        }
      ]
    },
    "27153": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/TextView#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 271,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/TextView#parent"
        }
      ]
    },
    "27154": {
      "name": "parentNode",
      "type": "Property",
      "url": "/api/class/TextView#parentnode",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the template parent or the native parent. Sets the template parent."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "parentNode: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 276,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "url": "/api/class/TextView#parentnode"
        }
      ]
    },
    "27155": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/TextView#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 281,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/TextView#id"
        }
      ]
    },
    "27156": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/TextView#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 286,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/TextView#classname"
        }
      ]
    },
    "27157": {
      "name": "page",
      "type": "Property",
      "url": "/api/class/TextView#page",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets owner page. This is a read-only property."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "page: <a href=\"/api/class/Page\">Page</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 291,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/TextView#page"
        }
      ]
    },
    "27158": {
      "name": "style",
      "type": "Property",
      "url": "/api/class/TextView#style",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the style object associated to this view."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "style: <a href=\"/api/class/Style\">Style</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "url": "/api/class/TextView#style"
        }
      ]
    },
    "27159": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/TextView#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isCollapsed: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
              }
            ]
          },
          "url": "/api/class/TextView#iscollapsed"
        }
      ]
    },
    "27160": {
      "name": "isLoaded",
      "type": "Property",
      "url": "/api/class/TextView#isloaded",
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "isLoaded: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 303,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#isloaded"
        }
      ]
    },
    "27161": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/TextView#getviewbyid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/TextView#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 308,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27165": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/TextView#getviewbydomid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(id: number): T",
          "url": "/api/class/TextView#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 313,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27169": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/TextView#loadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 319,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27172": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/TextView#unloadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27175": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/TextView#onunloaded",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/TextView#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 328,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27177": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/TextView#onresumenativeupdates",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/TextView#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 329,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27179": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/TextView#bind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/TextView#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 331,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27183": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/TextView#unbind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/TextView#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 332,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27186": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/TextView#addview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TextView#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27190": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/TextView#addviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TextView#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 349,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27194": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/TextView#removeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 351,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27197": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/TextView#removeviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27200": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/TextView#parentchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 356,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27203": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/TextView#dialogclosed",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/TextView#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27205": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/TextView#onrootviewreset",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/TextView#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27207": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/TextView#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 366,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#domid"
        }
      ]
    },
    "27208": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/TextView#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_cssState: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 368,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#cssstate"
        }
      ]
    },
    "27209": {
      "name": "_onCssStateChange",
      "type": "Method",
      "url": "/api/class/TextView#oncssstatechange",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onCssStateChange(): void",
          "url": "/api/class/TextView#oncssstatechange-oncssstatechange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 374,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies each child's css state for change, recursively.\nEither the style scope, className or id properties were changed."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27211": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/TextView#setinlinestyle",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/TextView#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 381,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27214": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/TextView#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 383,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#context"
        }
      ]
    },
    "27215": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/TextView#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number): void",
          "url": "/api/class/TextView#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 389,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27219": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/TextView#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/TextView#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27222": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/TextView#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/TextView#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 402,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27225": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/TextView#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/TextView#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 408,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "27227": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/TextView#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/TextView#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27229": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/TextView#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/TextView#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27231": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/TextView#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(view: any): void",
          "url": "/api/class/TextView#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 430,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27234": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/TextView#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 432,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#isaddedtonativevisualtree"
        }
      ]
    },
    "27235": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TextView#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/TextView#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27239": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TextView#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27242": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/TextView#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/TextView#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "27245": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/TextView#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/TextView#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 446,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27248": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/TextView#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/TextView#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27251": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/TextView#ensuredomnode",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): any",
          "url": "/api/class/TextView#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 459,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "27253": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/TextView#recyclenativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 461,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#recyclenativeview"
        }
      ]
    },
    "27254": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/TextView#ispaddingrelative",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 466,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#ispaddingrelative"
        }
      ]
    },
    "27255": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/TextView#ignoreflexminwidthheightreset",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 471,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#ignoreflexminwidthheightreset"
        }
      ]
    },
    "27256": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/TextView#stylescope",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_styleScope: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 473,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#stylescope"
        }
      ]
    },
    "27257": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/TextView#automaticallyadjustsscrollviewinsets",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 478,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "27258": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/TextView#isstylescopehost",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 482,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/TextView#isstylescopehost"
        }
      ]
    },
    "27259": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/TextView#layoutparent",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/TextView#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 487,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27261": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/TextView#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/TextView#suspendnativeupdatescount"
        }
      ]
    },
    "27262": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/TextView#batchupdate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/TextView#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "27268": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/TextView#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/TextView#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "27270": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/TextView#inheritstylescope",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: any): void",
          "url": "/api/class/TextView#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27273": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/TextView#callloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/TextView#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27275": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/TextView#callunloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/TextView#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 526,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "27277": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TextView#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27285": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/TextView#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/TextView#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27289": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/TextView#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/TextView#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27293": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/TextView#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/TextView#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27296": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/TextView#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/TextView#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27300": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/TextView#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/TextView#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "27305": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/TextView#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/TextView#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "27308": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/TextView#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/TextView#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "27311": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/TextView#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/TextView#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "27316": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/TextView#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/TextView#isviewbase"
        }
      ]
    }
  }
}