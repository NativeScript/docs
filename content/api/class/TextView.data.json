{
  "title": "TextView",
  "hierarchy": [
    [
      {
        "text": "EditableTextBase",
        "link": "/api/class/EditableTextBase"
      }
    ],
    [
      {
        "text": "TextView"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        30854
      ]
    },
    {
      "title": "Properties",
      "items": [
        30938,
        31335,
        31234,
        31325,
        31327,
        31375,
        31376,
        31374,
        31373,
        31324,
        31356,
        31326,
        31236,
        31377,
        31334,
        31355,
        31352,
        31354,
        31353,
        31328,
        31333,
        30778,
        30780,
        30779,
        30925,
        30931,
        30926,
        30929,
        30933,
        30932,
        30934,
        30808,
        30927,
        30928,
        30930,
        30924,
        31351,
        30856,
        30941,
        30940,
        30862,
        30865,
        30863,
        30939,
        30942,
        30943,
        30944,
        30907,
        30772,
        30911,
        30922,
        30921,
        30916,
        30908,
        30912,
        30917,
        30918,
        30910,
        30915,
        30909,
        30919,
        30920,
        30914,
        30913,
        30945,
        31321,
        31342,
        30923,
        31345,
        31343,
        31346,
        30811,
        30976,
        30977,
        30975,
        30812,
        31340,
        31314,
        30864,
        31371,
        31372,
        31370,
        31369,
        31360,
        31338,
        31363,
        31364,
        31362,
        31361,
        31358,
        31357,
        31367,
        31368,
        31366,
        31365,
        31339,
        31359,
        31348,
        31349,
        31350,
        30773,
        30884,
        30883,
        30949,
        30866,
        30955,
        31320,
        31232,
        30857,
        30935,
        30937,
        30936,
        30973,
        30971,
        30972,
        31319,
        30969,
        30974,
        30970,
        30859,
        30775,
        31336,
        30885,
        30886,
        30809,
        30950,
        30954,
        30951,
        30953,
        30952,
        30867,
        30858,
        30947,
        30946,
        31071,
        30881,
        31317,
        30958,
        31347,
        30967,
        30968,
        30892,
        30893,
        30894,
        30895,
        30896,
        31318,
        30962,
        30813,
        31315,
        30860,
        31379,
        30959,
        30960,
        30961,
        31341,
        31344,
        30965,
        30966,
        31323,
        31322,
        30776,
        30777,
        31230,
        30882,
        30887,
        30774,
        30888,
        30890,
        30889,
        31337,
        31231,
        31233,
        31235,
        30963,
        30964,
        30810,
        30861,
        30868,
        30956,
        31316,
        30957,
        30891,
        30948
      ]
    },
    {
      "title": "Accessors",
      "items": [
        31292,
        31296,
        31288,
        31396,
        31394,
        31384,
        31408,
        31380,
        31390,
        31388
      ]
    },
    {
      "title": "Methods",
      "items": [
        31449,
        31453,
        31494,
        31501,
        31426,
        31491,
        31108,
        31552,
        31520,
        31112,
        31557,
        31106,
        31110,
        31223,
        31205,
        31220,
        31276,
        31517,
        31418,
        31242,
        31216,
        31218,
        31522,
        31118,
        31508,
        31282,
        31286,
        31284,
        31465,
        31468,
        31498,
        31423,
        31239,
        31477,
        31226,
        31460,
        31272,
        31420,
        31488,
        31211,
        31133,
        31136,
        31250,
        30846,
        31436,
        31072,
        31442,
        31432,
        31434,
        31269,
        30804,
        31075,
        31471,
        31439,
        31485,
        30872,
        31473,
        31302,
        31124,
        31410,
        31015,
        31525,
        31092,
        31017,
        31085,
        31087,
        31089,
        30991,
        30993,
        30989,
        31078,
        31404,
        31400,
        31120,
        31549,
        31475,
        30982,
        30790,
        31009,
        31457,
        30978,
        30781,
        31540,
        31544,
        31020,
        30830,
        31028,
        30814,
        31094,
        31532,
        30822,
        30999,
        31237,
        30995,
        31511,
        31416,
        31258,
        30838,
        31300,
        31308,
        30798,
        31130,
        31412,
        31505,
        31005,
        31482,
        31122,
        31528,
        30877,
        31310,
        31266,
        31513,
        31446,
        31462
      ]
    }
  ],
  "reflections": {
    "30772": {
      "name": "blurEvent",
      "type": "Property",
      "url": "/api/class/TextView#blurevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">blurEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 12,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#blurevent"
        }
      ]
    },
    "30773": {
      "name": "focusEvent",
      "type": "Property",
      "url": "/api/class/TextView#focusevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">focusEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 13,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#focusevent"
        }
      ]
    },
    "30774": {
      "name": "textChangeEvent",
      "type": "Property",
      "url": "/api/class/TextView#textchangeevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">textChangeEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 14,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#textchangeevent"
        }
      ]
    },
    "30775": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/TextView#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">layoutChangedEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/TextView#layoutchangedevent"
        }
      ]
    },
    "30776": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/TextView#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">showingModallyEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/TextView#showingmodallyevent"
        }
      ]
    },
    "30777": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/TextView#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">shownModallyEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/TextView#shownmodallyevent"
        }
      ]
    },
    "30778": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityBlurEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityblurevent"
        }
      ]
    },
    "30779": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityFocusEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityfocusevent"
        }
      ]
    },
    "30780": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityFocusChangedEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityfocuschangedevent"
        }
      ]
    },
    "30781": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/TextView#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/TextView#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 565,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "30790": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/TextView#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/TextView#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 575,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30798": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/TextView#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">resolveSizeAndState</span><span style=\"color: #E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  size: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  specSize: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  specMode: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  childMeasuredState: number</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">): number</span></span></code>",
          "url": "/api/class/TextView#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 585,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "30804": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/TextView#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">combineMeasuredStates</span><span style=\"color: #E1E4E8\">(curState: number, newState: any): number</span></span></code>",
          "url": "/api/class/TextView#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 587,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "30808": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityPerformEscapeEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#accessibilityperformescapeevent"
        }
      ]
    },
    "30809": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/TextView#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">loadedEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/TextView#loadedevent"
        }
      ]
    },
    "30810": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/TextView#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">unloadedEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/TextView#unloadedevent"
        }
      ]
    },
    "30811": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/TextView#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">createdEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 135,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/TextView#createdevent"
        }
      ]
    },
    "30812": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/TextView#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">disposeNativeViewEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 139,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/TextView#disposenativeviewevent"
        }
      ]
    },
    "30813": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/TextView#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">propertyChangeEvent</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 74,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/TextView#propertychangeevent"
        }
      ]
    },
    "30814": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TextView#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 125,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30822": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TextView#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 126,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30830": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TextView#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 127,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30838": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TextView#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 128,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30846": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TextView#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 129,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30854": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/TextView#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new TextView(): <a href=\"/api/class/TextView\">TextView</a>",
          "url": "/api/class/TextView#constructor-new-textview",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/TextView\">TextView</a>"
        }
      ]
    },
    "30856": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/TextView#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/EditText.html) that represents the user interface for this component. Valid only when running on Android OS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">android</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 11,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/EditText.html) that represents the user interface for this component. Valid only when running on Android OS."
              }
            ]
          },
          "url": "/api/class/TextView#android"
        }
      ]
    },
    "30857": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/TextView#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native iOS [UITextView](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextView_Class/) that represents the user interface for this component. Valid only when running on iOS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">ios</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 16,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native iOS [UITextView](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextView_Class/) that represents the user interface for this component. Valid only when running on iOS."
              }
            ]
          },
          "url": "/api/class/TextView#ios"
        }
      ]
    },
    "30858": {
      "name": "maxLines",
      "type": "Property",
      "url": "/api/class/TextView#maxlines",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of lines."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">maxLines</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-view/index.d.ts",
              "line": 21,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of lines."
              }
            ]
          },
          "url": "/api/class/TextView#maxlines"
        }
      ]
    },
    "30859": {
      "name": "keyboardType",
      "type": "Property",
      "url": "/api/class/TextView#keyboardtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "keyboardType: <a href=\"/api/namespace/CoreTypes#keyboardinputtype\">KeyboardInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard type."
              }
            ]
          },
          "url": "/api/class/TextView#keyboardtype"
        }
      ]
    },
    "30860": {
      "name": "returnKeyType",
      "type": "Property",
      "url": "/api/class/TextView#returnkeytype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard return key flavor."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "returnKeyType: <a href=\"/api/namespace/CoreTypes#returnkeybuttontype\">ReturnKeyButtonType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard return key flavor."
              }
            ]
          },
          "url": "/api/class/TextView#returnkeytype"
        }
      ]
    },
    "30861": {
      "name": "updateTextTrigger",
      "type": "Property",
      "url": "/api/class/TextView#updatetexttrigger",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating when the text property will be updated."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "updateTextTrigger: <a href=\"/api/namespace/CoreTypes#updatetexttriggertype\">UpdateTextTriggerType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating when the text property will be updated."
              }
            ]
          },
          "url": "/api/class/TextView#updatetexttrigger"
        }
      ]
    },
    "30862": {
      "name": "autocapitalizationType",
      "type": "Property",
      "url": "/api/class/TextView#autocapitalizationtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autocapitalization type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "autocapitalizationType: <a href=\"/api/namespace/CoreTypes#autocapitalizationinputtype\">AutocapitalizationInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autocapitalization type."
              }
            ]
          },
          "url": "/api/class/TextView#autocapitalizationtype"
        }
      ]
    },
    "30863": {
      "name": "autofillType",
      "type": "Property",
      "url": "/api/class/TextView#autofilltype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autofill type."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">autofillType</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autofill type."
              }
            ]
          },
          "url": "/api/class/TextView#autofilltype"
        }
      ]
    },
    "30864": {
      "name": "editable",
      "type": "Property",
      "url": "/api/class/TextView#editable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets whether the instance is editable."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">editable</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets whether the instance is editable."
              }
            ]
          },
          "url": "/api/class/TextView#editable"
        }
      ]
    },
    "30865": {
      "name": "autocorrect",
      "type": "Property",
      "url": "/api/class/TextView#autocorrect",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables autocorrection."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">autocorrect</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables autocorrection."
              }
            ]
          },
          "url": "/api/class/TextView#autocorrect"
        }
      ]
    },
    "30866": {
      "name": "hint",
      "type": "Property",
      "url": "/api/class/TextView#hint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the placeholder text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">hint</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the placeholder text."
              }
            ]
          },
          "url": "/api/class/TextView#hint"
        }
      ]
    },
    "30867": {
      "name": "maxLength",
      "type": "Property",
      "url": "/api/class/TextView#maxlength",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of characters."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">maxLength</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of characters."
              }
            ]
          },
          "url": "/api/class/TextView#maxlength"
        }
      ]
    },
    "30868": {
      "name": "valueFormatter",
      "type": "Property",
      "url": "/api/class/TextView#valueformatter",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">valueFormatter</span><span style=\"color: #E1E4E8\">: (</span><span style=\"color: #FFAB70\">value</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">string</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=&gt;</span><span style=\"color: #E1E4E8\"> string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 65,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#valueformatter"
        }
      ]
    },
    "30872": {
      "name": "dismissSoftInput",
      "type": "Method",
      "url": "/api/class/TextView#dismisssoftinput",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">dismissSoftInput</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#dismisssoftinput-dismisssoftinput-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 70,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hides the soft input method, ususally a soft keyboard."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "30877": {
      "name": "setSelection",
      "type": "Method",
      "url": "/api/class/TextView#setselection",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setSelection</span><span style=\"color: #E1E4E8\">(start: number, stop</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> number): any</span></span></code>",
          "url": "/api/class/TextView#setselection-setselection-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 82,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the selection anchor to start and the selection edge to stop"
              }
            ]
          },
          "parameters": [
            {
              "name": "start",
              "type": "number",
              "flags": {}
            },
            {
              "name": "stop",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "30881": {
      "name": "nativeTextViewProtected",
      "type": "Property",
      "url": "/api/class/TextView#nativetextviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">nativeTextViewProtected</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 14,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
              }
            ]
          },
          "url": "/api/class/TextView#nativetextviewprotected"
        }
      ]
    },
    "30882": {
      "name": "text",
      "type": "Property",
      "url": "/api/class/TextView#text",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">text</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the text."
              }
            ]
          },
          "url": "/api/class/TextView#text"
        }
      ]
    },
    "30883": {
      "name": "formattedText",
      "type": "Property",
      "url": "/api/class/TextView#formattedtext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a formatted string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "formattedText: <a href=\"/api/class/FormattedString\">FormattedString</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a formatted string."
              }
            ]
          },
          "url": "/api/class/TextView#formattedtext"
        }
      ]
    },
    "30884": {
      "name": "fontSize",
      "type": "Property",
      "url": "/api/class/TextView#fontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets font-size style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">fontSize</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets font-size style property."
              }
            ]
          },
          "url": "/api/class/TextView#fontsize"
        }
      ]
    },
    "30885": {
      "name": "letterSpacing",
      "type": "Property",
      "url": "/api/class/TextView#letterspacing",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets letterSpace style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">letterSpacing</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets letterSpace style property."
              }
            ]
          },
          "url": "/api/class/TextView#letterspacing"
        }
      ]
    },
    "30886": {
      "name": "lineHeight",
      "type": "Property",
      "url": "/api/class/TextView#lineheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets lineHeight style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">lineHeight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets lineHeight style property."
              }
            ]
          },
          "url": "/api/class/TextView#lineheight"
        }
      ]
    },
    "30887": {
      "name": "textAlignment",
      "type": "Property",
      "url": "/api/class/TextView#textalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text-alignment style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textAlignment: <a href=\"/api/namespace/CoreTypes#textalignmenttype\">TextAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text-alignment style property."
              }
            ]
          },
          "url": "/api/class/TextView#textalignment"
        }
      ]
    },
    "30888": {
      "name": "textDecoration",
      "type": "Property",
      "url": "/api/class/TextView#textdecoration",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text decorations style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textDecoration: <a href=\"/api/namespace/CoreTypes#textdecorationtype\">TextDecorationType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text decorations style property."
              }
            ]
          },
          "url": "/api/class/TextView#textdecoration"
        }
      ]
    },
    "30889": {
      "name": "textTransform",
      "type": "Property",
      "url": "/api/class/TextView#texttransform",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text transform style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "textTransform: <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text transform style property."
              }
            ]
          },
          "url": "/api/class/TextView#texttransform"
        }
      ]
    },
    "30890": {
      "name": "textShadow",
      "type": "Property",
      "url": "/api/class/TextView#textshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text shadow style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">textShadow</span><span style=\"color: #E1E4E8\">: CSSShadow</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text shadow style property."
              }
            ]
          },
          "url": "/api/class/TextView#textshadow"
        }
      ]
    },
    "30891": {
      "name": "whiteSpace",
      "type": "Property",
      "url": "/api/class/TextView#whitespace",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "whiteSpace: <a href=\"/api/namespace/CoreTypes#whitespacetype\">WhiteSpaceType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/TextView#whitespace"
        }
      ]
    },
    "30892": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/TextView#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/TextView#padding"
        }
      ]
    },
    "30893": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingbottom"
        }
      ]
    },
    "30894": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingleft"
        }
      ]
    },
    "30895": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/TextView#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingright"
        }
      ]
    },
    "30896": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/TextView#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/TextView#paddingtop"
        }
      ]
    },
    "30907": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/TextView#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">bindingContext</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/TextView#bindingcontext"
        }
      ]
    },
    "30908": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/TextView#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordercolor"
        }
      ]
    },
    "30909": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/TextView#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopcolor"
        }
      ]
    },
    "30910": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/TextView#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderrightcolor"
        }
      ]
    },
    "30911": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomcolor"
        }
      ]
    },
    "30912": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/TextView#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderleftcolor"
        }
      ]
    },
    "30913": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderwidth"
        }
      ]
    },
    "30914": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/TextView#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopwidth"
        }
      ]
    },
    "30915": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderrightwidth"
        }
      ]
    },
    "30916": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomwidth"
        }
      ]
    },
    "30917": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/TextView#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderleftwidth"
        }
      ]
    },
    "30918": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderradius"
        }
      ]
    },
    "30919": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/TextView#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertopleftradius"
        }
      ]
    },
    "30920": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/TextView#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#bordertoprightradius"
        }
      ]
    },
    "30921": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomrightradius"
        }
      ]
    },
    "30922": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/TextView#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/TextView#borderbottomleftradius"
        }
      ]
    },
    "30923": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/TextView#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#color"
        }
      ]
    },
    "30924": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/TextView#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessible</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/TextView#accessible"
        }
      ]
    },
    "30925": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityHidden</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityhidden"
        }
      ]
    },
    "30926": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityIdentifier</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityidentifier"
        }
      ]
    },
    "30927": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityrole"
        }
      ]
    },
    "30928": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitystate"
        }
      ]
    },
    "30929": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityLabel</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitylabel"
        }
      ]
    },
    "30930": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityValue</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityvalue"
        }
      ]
    },
    "30931": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityHint</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilityhint"
        }
      ]
    },
    "30932": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/TextView#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#accessibilityliveregion"
        }
      ]
    },
    "30933": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityLanguage</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitylanguage"
        }
      ]
    },
    "30934": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/TextView#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityMediaSession</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/TextView#accessibilitymediasession"
        }
      ]
    },
    "30935": {
      "name": "iosAccessibilityAdjustsFontSize",
      "type": "Property",
      "url": "/api/class/TextView#iosaccessibilityadjustsfontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Defines whether accessibility font scale should affect font size."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosAccessibilityAdjustsFontSize</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines whether accessibility font scale should affect font size."
              }
            ]
          },
          "url": "/api/class/TextView#iosaccessibilityadjustsfontsize"
        }
      ]
    },
    "30936": {
      "name": "iosAccessibilityMinFontScale",
      "type": "Property",
      "url": "/api/class/TextView#iosaccessibilityminfontscale",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum accessibility font scale."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosAccessibilityMinFontScale</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 293,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum accessibility font scale."
              }
            ]
          },
          "url": "/api/class/TextView#iosaccessibilityminfontscale"
        }
      ]
    },
    "30937": {
      "name": "iosAccessibilityMaxFontScale",
      "type": "Property",
      "url": "/api/class/TextView#iosaccessibilitymaxfontscale",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the maximum accessibility font scale."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosAccessibilityMaxFontScale</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 298,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the maximum accessibility font scale."
              }
            ]
          },
          "url": "/api/class/TextView#iosaccessibilitymaxfontscale"
        }
      ]
    },
    "30938": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/TextView#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">_androidContentDescriptionUpdated</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 303,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/TextView#androidcontentdescriptionupdated"
        }
      ]
    },
    "30939": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/TextView#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">automationText</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#automationtext"
        }
      ]
    },
    "30940": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/TextView#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">androidElevation</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/TextView#androidelevation"
        }
      ]
    },
    "30941": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/TextView#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">androidDynamicElevationOffset</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/TextView#androiddynamicelevationoffset"
        }
      ]
    },
    "30942": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/TextView#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">background</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/TextView#background"
        }
      ]
    },
    "30943": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/TextView#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/TextView#backgroundcolor"
        }
      ]
    },
    "30944": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/TextView#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">backgroundImage</span><span style=\"color: #E1E4E8\">: string </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> LinearGradient</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/TextView#backgroundimage"
        }
      ]
    },
    "30945": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/TextView#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">boxShadow</span><span style=\"color: #E1E4E8\">: string </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> CSSShadow</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/TextView#boxshadow"
        }
      ]
    },
    "30946": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/TextView#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/TextView#minwidth"
        }
      ]
    },
    "30947": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/TextView#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/TextView#minheight"
        }
      ]
    },
    "30948": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/TextView#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/TextView#width"
        }
      ]
    },
    "30949": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/TextView#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/TextView#height"
        }
      ]
    },
    "30950": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/TextView#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/TextView#margin"
        }
      ]
    },
    "30951": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/TextView#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginleft"
        }
      ]
    },
    "30952": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/TextView#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#margintop"
        }
      ]
    },
    "30953": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/TextView#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginright"
        }
      ]
    },
    "30954": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/TextView#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/TextView#marginbottom"
        }
      ]
    },
    "30955": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/TextView#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/TextView#horizontalalignment"
        }
      ]
    },
    "30956": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/TextView#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/TextView#verticalalignment"
        }
      ]
    },
    "30957": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/TextView#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/TextView#visibility"
        }
      ]
    },
    "30958": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/TextView#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">opacity</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/TextView#opacity"
        }
      ]
    },
    "30959": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/TextView#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">rotate</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 405,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotate"
        }
      ]
    },
    "30960": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/TextView#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">rotateX</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 410,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotatex"
        }
      ]
    },
    "30961": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/TextView#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">rotateY</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 415,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/TextView#rotatey"
        }
      ]
    },
    "30962": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/TextView#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">perspective</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/TextView#perspective"
        }
      ]
    },
    "30963": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/TextView#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">translateX</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TextView#translatex"
        }
      ]
    },
    "30964": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/TextView#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">translateY</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 431,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/TextView#translatey"
        }
      ]
    },
    "30965": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/TextView#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">scaleX</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 436,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TextView#scalex"
        }
      ]
    },
    "30966": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/TextView#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">scaleY</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 441,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/TextView#scaley"
        }
      ]
    },
    "30967": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/TextView#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">originX</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TextView#originx"
        }
      ]
    },
    "30968": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/TextView#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">originY</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/TextView#originy"
        }
      ]
    },
    "30969": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/TextView#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">isEnabled</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TextView#isenabled"
        }
      ]
    },
    "30970": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/TextView#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">isUserInteractionEnabled</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/TextView#isuserinteractionenabled"
        }
      ]
    },
    "30971": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/TextView#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosOverflowSafeArea</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TextView#iosoverflowsafearea"
        }
      ]
    },
    "30972": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/TextView#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosOverflowSafeAreaEnabled</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 473,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/TextView#iosoverflowsafeareaenabled"
        }
      ]
    },
    "30973": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/TextView#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">iosIgnoreSafeArea</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 478,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/TextView#iosignoresafearea"
        }
      ]
    },
    "30974": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/TextView#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">isLayoutValid</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 483,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/TextView#islayoutvalid"
        }
      ]
    },
    "30975": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/TextView#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">cssType</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 489,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/TextView#csstype"
        }
      ]
    },
    "30976": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/TextView#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">cssClasses</span><span style=\"color: #E1E4E8\">: Set</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;string</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 491,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#cssclasses"
        }
      ]
    },
    "30977": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/TextView#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">cssPseudoClasses</span><span style=\"color: #E1E4E8\">: Set</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;string</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 492,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#csspseudoclasses"
        }
      ]
    },
    "30978": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/TextView#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">measure</span><span style=\"color: #E1E4E8\">(widthMeasureSpec: number, heightMeasureSpec: number): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 500,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30982": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/TextView#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">layout</span><span style=\"color: #E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  left: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  top: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  right: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  bottom: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  setFrame</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> boolean</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30989": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getMeasuredWidth</span><span style=\"color: #E1E4E8\">(): number</span></span></code>",
          "url": "/api/class/TextView#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "30991": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getMeasuredHeight</span><span style=\"color: #E1E4E8\">(): number</span></span></code>",
          "url": "/api/class/TextView#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "30993": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/TextView#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getMeasuredState</span><span style=\"color: #E1E4E8\">(): number</span></span></code>",
          "url": "/api/class/TextView#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 523,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "30995": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/TextView#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onMeasure</span><span style=\"color: #E1E4E8\">(widthMeasureSpec: number, heightMeasureSpec: number): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 531,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "30999": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/TextView#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onLayout</span><span style=\"color: #E1E4E8\">(left: number, top: number, right: number, bottom: number): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 540,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31005": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/TextView#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setMeasuredDimension</span><span style=\"color: #E1E4E8\">(measuredWidth: number, measuredHeight: number): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 547,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31009": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/TextView#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">layoutNativeView</span><span style=\"color: #E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  left: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  top: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  right: number,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  bottom: number</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 556,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31015": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/TextView#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">focus</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 593,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31017": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/TextView#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/TextView#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 595,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "31020": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/TextView#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 603,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "31028": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/TextView#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 611,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 616,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 621,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/TextView#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "31071": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/TextView#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/TextView#modal"
        }
      ]
    },
    "31072": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/TextView#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/TextView#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "31075": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/TextView#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/TextView#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "31078": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/TextView#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getSafeAreaInsets</span><span style=\"color: #E1E4E8\">(): {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  bottom: any</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  left: any</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  right: any</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span></code>",
          "url": "/api/class/TextView#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "31085": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/TextView#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getLocationInWindow</span><span style=\"color: #E1E4E8\">(): Point</span></span></code>",
          "url": "/api/class/TextView#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "31087": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/TextView#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">getLocationOnScreen</span><span style=\"color: #E1E4E8\">(): Point</span></span></code>",
          "url": "/api/class/TextView#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "31089": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/TextView#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/TextView#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 672,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "31092": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/TextView#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/TextView#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 677,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "31094": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/TextView#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onBackPressed</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 682,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31106": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/TextView#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_getNativeViewsCount</span><span style=\"color: #E1E4E8\">(): number</span></span></code>",
          "url": "/api/class/TextView#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 712,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "31108": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/TextView#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_closeAllModalViewsInternal</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 718,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31110": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/TextView#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/TextView#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 724,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "31112": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/TextView#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_eachLayoutView</span><span style=\"color: #E1E4E8\">(callback: (</span><span style=\"color: #FFAB70\">View</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">any</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=&gt;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #E1E4E8\">): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31118": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/TextView#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_onSizeChanged</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 731,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31120": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/TextView#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">hasGestureObservers</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 736,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31122": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/TextView#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setOnTouchListener</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 741,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31124": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/TextView#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/TextView#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 747,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31130": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/TextView#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">sendAccessibilityEvent</span><span style=\"color: #E1E4E8\">(options: Partial</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;AccessibilityEventOptions</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 761,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31133": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/TextView#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityAnnouncement</span><span style=\"color: #E1E4E8\">(msg</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31136": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/TextView#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">accessibilityScreenChanged</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 771,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31205": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/TextView#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_handleLivesync</span><span style=\"color: #E1E4E8\">(context</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> { path: string }): boolean</span></span></code>",
          "url": "/api/class/TextView#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 866,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "31211": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/TextView#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_updateStyleScope</span><span style=\"color: #E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cssFileName</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> string,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cssString</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> string,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  css</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> string</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31216": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/TextView#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_onAttachedToWindow</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 879,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31218": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/TextView#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_onDetachedFromWindow</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 884,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31220": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/TextView#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/TextView#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 889,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "31223": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/TextView#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_getValue</span><span style=\"color: #E1E4E8\">(property: any): never</span></span></code>",
          "url": "/api/class/TextView#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 895,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "31226": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/TextView#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_setValue</span><span style=\"color: #E1E4E8\">(property: any, value: any): never</span></span></code>",
          "url": "/api/class/TextView#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 900,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "31230": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/TextView#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">testID</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#testid"
        }
      ]
    },
    "31231": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/TextView#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#touchanimation"
        }
      ]
    },
    "31232": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/TextView#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">ignoreTouchAnimation</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#ignoretouchanimation"
        }
      ]
    },
    "31233": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/TextView#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">touchDelay</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#touchdelay"
        }
      ]
    },
    "31234": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/TextView#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_closeModalCallback</span><span style=\"color: #E1E4E8\">: Function</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#closemodalcallback"
        }
      ]
    },
    "31235": {
      "name": "transitionId",
      "type": "Property",
      "url": "/api/class/TextView#transitionid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Active transition instance id for tracking state"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">transitionId</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 41,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Active transition instance id for tracking state"
              }
            ]
          },
          "url": "/api/class/TextView#transitionid"
        }
      ]
    },
    "31236": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/TextView#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_isLayoutValid</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 44,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#islayoutvalid"
        }
      ]
    },
    "31237": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/TextView#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onLoaded</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 60,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31239": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/TextView#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_setupAsRootView</span><span style=\"color: #E1E4E8\">(context: any): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31242": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/TextView#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 66,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31250": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/TextView#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 68,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31258": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/TextView#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31266": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/TextView#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/TextView#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "31269": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/TextView#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">closeModal</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #F97583\">...</span><span style=\"color: #E1E4E8\">args: any[]): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31272": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/TextView#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/TextView#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31276": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/TextView#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/TextView#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 77,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31282": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_raiseLayoutChangedEvent</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 78,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31284": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_raiseShownModallyEvent</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 79,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31286": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/TextView#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_raiseShowingModallyEvent</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 80,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31288": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">backgroundSize</span><span style=\"color: #E1E4E8\">(): string</span></span></code>",
          "url": "/api/class/TextView#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "31292": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">backgroundPosition</span><span style=\"color: #E1E4E8\">(): string</span></span></code>",
          "url": "/api/class/TextView#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 123,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "31296": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/TextView#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/TextView#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 125,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "31300": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/TextView#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">requestLayout</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 216,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31302": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/TextView#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/TextView#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 241,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31308": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/TextView#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">resetNativeView</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 259,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31310": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/TextView#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setTestID</span><span style=\"color: #E1E4E8\">(view: any, value: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 273,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31314": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/TextView#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">domNode</span><span style=\"color: #E1E4E8\">: DOMNode</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 149,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#domnode"
        }
      ]
    },
    "31315": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/TextView#recyclenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">recycleNativeView</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #9ECBFF\">&quot;auto&quot;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&quot;always&quot;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&quot;never&quot;</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 150,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#recyclenativeview"
        }
      ]
    },
    "31316": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/TextView#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">viewController</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 154,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/TextView#viewcontroller"
        }
      ]
    },
    "31317": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/TextView#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">nativeViewProtected</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/TextView#nativeviewprotected"
        }
      ]
    },
    "31318": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/TextView#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/TextView#parent"
        }
      ]
    },
    "31319": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/TextView#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nDefault(false) set in prototype\nReadonly property"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">isCollapsed</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 169,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nDefault(false) set in prototype\nReadonly property"
              }
            ]
          },
          "url": "/api/class/TextView#iscollapsed"
        }
      ]
    },
    "31320": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/TextView#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">id</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 173,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/TextView#id"
        }
      ]
    },
    "31321": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/TextView#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">className</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 177,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/TextView#classname"
        }
      ]
    },
    "31322": {
      "name": "sharedTransitionTag",
      "type": "Property",
      "url": "/api/class/TextView#sharedtransitiontag",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the shared transition tag for animated view transitions"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">sharedTransitionTag</span><span style=\"color: #E1E4E8\">: string</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 181,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the shared transition tag for animated view transitions"
              }
            ]
          },
          "url": "/api/class/TextView#sharedtransitiontag"
        }
      ]
    },
    "31323": {
      "name": "sharedTransitionIgnore",
      "type": "Property",
      "url": "/api/class/TextView#sharedtransitionignore",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Opt out of shared transition under different binding conditions"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">sharedTransitionIgnore</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 185,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Opt out of shared transition under different binding conditions"
              }
            ]
          },
          "url": "/api/class/TextView#sharedtransitionignore"
        }
      ]
    },
    "31324": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/TextView#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_domId</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 186,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#domid"
        }
      ]
    },
    "31325": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/TextView#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_context</span><span style=\"color: #E1E4E8\">: any</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 187,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#context"
        }
      ]
    },
    "31326": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/TextView#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_isAddedToNativeVisualTree</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 188,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#isaddedtonativevisualtree"
        }
      ]
    },
    "31327": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/TextView#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_cssState</span><span style=\"color: #E1E4E8\">: CssState</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 189,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#cssstate"
        }
      ]
    },
    "31328": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/TextView#stylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_styleScope</span><span style=\"color: #E1E4E8\">: StyleScope</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 190,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#stylescope"
        }
      ]
    },
    "31333": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/TextView#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_suspendNativeUpdatesCount</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/TextView#suspendnativeupdatescount"
        }
      ]
    },
    "31334": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/TextView#isstylescopehost",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_isStyleScopeHost</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#isstylescopehost"
        }
      ]
    },
    "31335": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/TextView#automaticallyadjustsscrollviewinsets",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_automaticallyAdjustsScrollViewInsets</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "31336": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/TextView#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#left"
        }
      ]
    },
    "31337": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/TextView#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#top"
        }
      ]
    },
    "31338": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveLeft</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveleft"
        }
      ]
    },
    "31339": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveTop</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivetop"
        }
      ]
    },
    "31340": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/TextView#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">dock</span><span style=\"color: #E1E4E8\">: </span><span style=\"color: #9ECBFF\">&quot;left&quot;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&quot;right&quot;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&quot;top&quot;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">|</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&quot;bottom&quot;</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#dock"
        }
      ]
    },
    "31341": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/TextView#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">row</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#row"
        }
      ]
    },
    "31342": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/TextView#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">col</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#col"
        }
      ]
    },
    "31343": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/TextView#column",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">column</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#column"
        }
      ]
    },
    "31344": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/TextView#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">rowSpan</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#rowspan"
        }
      ]
    },
    "31345": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/TextView#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">colSpan</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#colspan"
        }
      ]
    },
    "31346": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/TextView#columnspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">columnSpan</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 221,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#columnspan"
        }
      ]
    },
    "31347": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/TextView#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">order</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 222,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#order"
        }
      ]
    },
    "31348": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/TextView#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">flexGrow</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 223,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexgrow"
        }
      ]
    },
    "31349": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/TextView#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">flexShrink</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 224,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexshrink"
        }
      ]
    },
    "31350": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/TextView#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">flexWrapBefore</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#flexwrapbefore"
        }
      ]
    },
    "31351": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/TextView#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">alignSelf</span><span style=\"color: #E1E4E8\">: AlignSelf</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 226,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#alignself"
        }
      ]
    },
    "31352": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/TextView#oldleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_oldLeft</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 227,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#oldleft"
        }
      ]
    },
    "31353": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/TextView#oldtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_oldTop</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 228,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#oldtop"
        }
      ]
    },
    "31354": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/TextView#oldright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_oldRight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 229,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#oldright"
        }
      ]
    },
    "31355": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/TextView#oldbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_oldBottom</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#oldbottom"
        }
      ]
    },
    "31356": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/TextView#ignoreflexminwidthheightreset",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_ignoreFlexMinWidthHeightReset</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#ignoreflexminwidthheightreset"
        }
      ]
    },
    "31357": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveminwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMinWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 232,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveminwidth"
        }
      ]
    },
    "31358": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/TextView#effectiveminheight",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMinHeight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 233,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveminheight"
        }
      ]
    },
    "31359": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectivewidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 234,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivewidth"
        }
      ]
    },
    "31360": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/TextView#effectiveheight",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveHeight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveheight"
        }
      ]
    },
    "31361": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivemargintop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMarginTop</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 236,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemargintop"
        }
      ]
    },
    "31362": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMarginRight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 237,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginright"
        }
      ]
    },
    "31363": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMarginBottom</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 238,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginbottom"
        }
      ]
    },
    "31364": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectivemarginleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveMarginLeft</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 239,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivemarginleft"
        }
      ]
    },
    "31365": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectivePaddingTop</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingtop"
        }
      ]
    },
    "31366": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectivePaddingRight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 241,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingright"
        }
      ]
    },
    "31367": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectivePaddingBottom</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 242,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingbottom"
        }
      ]
    },
    "31368": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#effectivepaddingleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectivePaddingLeft</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 243,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivepaddingleft"
        }
      ]
    },
    "31369": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectivebordertopwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveBorderTopWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 244,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectivebordertopwidth"
        }
      ]
    },
    "31370": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderrightwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveBorderRightWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 245,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderrightwidth"
        }
      ]
    },
    "31371": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderbottomwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveBorderBottomWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 246,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderbottomwidth"
        }
      ]
    },
    "31372": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/TextView#effectiveborderleftwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">effectiveBorderLeftWidth</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 247,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#effectiveborderleftwidth"
        }
      ]
    },
    "31373": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_defaultPaddingTop</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#defaultpaddingtop"
        }
      ]
    },
    "31374": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_defaultPaddingRight</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#defaultpaddingright"
        }
      ]
    },
    "31375": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_defaultPaddingBottom</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 250,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#defaultpaddingbottom"
        }
      ]
    },
    "31376": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/TextView#defaultpaddingleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_defaultPaddingLeft</span><span style=\"color: #E1E4E8\">: number</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 251,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#defaultpaddingleft"
        }
      ]
    },
    "31377": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/TextView#ispaddingrelative",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_isPaddingRelative</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 252,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "url": "/api/class/TextView#ispaddingrelative"
        }
      ]
    },
    "31379": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/TextView#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">reusable</span><span style=\"color: #E1E4E8\">: boolean</span></span></code>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 262,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/TextView#reusable"
        }
      ]
    },
    "31380": {
      "name": "parentNode",
      "type": "Accessor",
      "url": "/api/class/TextView#parentnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get parentNode(): <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "url": "/api/class/TextView#parentnode-parentnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 267,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>"
        }
      ]
    },
    "31384": {
      "name": "nativeView",
      "type": "Accessor",
      "url": "/api/class/TextView#nativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">nativeView</span><span style=\"color: #E1E4E8\">(): any</span></span></code>",
          "url": "/api/class/TextView#nativeview-nativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 269,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "31388": {
      "name": "typeName",
      "type": "Accessor",
      "url": "/api/class/TextView#typename",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">typeName</span><span style=\"color: #E1E4E8\">(): string</span></span></code>",
          "url": "/api/class/TextView#typename-typename-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 274,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "31390": {
      "name": "style",
      "type": "Accessor",
      "url": "/api/class/TextView#style",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get style(): <a href=\"/api/class/Style\">Style</a>",
          "url": "/api/class/TextView#style-style-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 278,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/Style\">Style</a>"
        }
      ]
    },
    "31394": {
      "name": "isLoaded",
      "type": "Accessor",
      "url": "/api/class/TextView#isloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">isLoaded</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#isloaded-isloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 282,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31396": {
      "name": "class",
      "type": "Accessor",
      "url": "/api/class/TextView#class",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">get </span><span style=\"color: #B392F0\">class</span><span style=\"color: #E1E4E8\">(): string</span></span></code>",
          "url": "/api/class/TextView#class-class-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 283,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "31400": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/TextView#getviewbyid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">getViewById</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;</span><span style=\"color: #79B8FF\">T</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;(</span><span style=\"color: #FFAB70\">id</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">string</span><span style=\"color: #E1E4E8\">)</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">T</span></span></code>",
          "url": "/api/class/TextView#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 288,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "31404": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/TextView#getviewbydomid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">getViewByDomId</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;</span><span style=\"color: #79B8FF\">T</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;(</span><span style=\"color: #FFAB70\">domId</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">number</span><span style=\"color: #E1E4E8\">)</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">T</span></span></code>",
          "url": "/api/class/TextView#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 292,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "domId",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "31408": {
      "name": "page",
      "type": "Accessor",
      "url": "/api/class/TextView#page",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get page(): <a href=\"/api/class/Page\">Page</a>",
          "url": "/api/class/TextView#page-page-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/Page\">Page</a>"
        }
      ]
    },
    "31410": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/TextView#ensuredomnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">ensureDomNode</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 301,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31412": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/TextView#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">set</span><span style=\"color: #E1E4E8\">(name: string, value: any): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31416": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/TextView#onunloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onUnloaded</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 304,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31418": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/TextView#layoutparent",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_layoutParent</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 305,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31420": {
      "name": "_suspendNativeUpdates",
      "type": "Method",
      "url": "/api/class/TextView#suspendnativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_suspendNativeUpdates</span><span style=\"color: #E1E4E8\">(type: SuspendType): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#suspendnativeupdates-suspendnativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 306,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "SuspendType",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31423": {
      "name": "_resumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/TextView#resumenativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_resumeNativeUpdates</span><span style=\"color: #E1E4E8\">(type: SuspendType): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#resumenativeupdates-resumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 307,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "SuspendType",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31426": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/TextView#batchupdate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">_batchUpdate</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;</span><span style=\"color: #79B8FF\">T</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;(</span><span style=\"color: #B392F0\">callback</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> () </span><span style=\"color: #F97583\">=&gt;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">T</span><span style=\"color: #E1E4E8\">)</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">T</span></span></code>",
          "url": "/api/class/TextView#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 311,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "31432": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/TextView#callloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">callLoaded</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 315,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31434": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/TextView#callunloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">callUnloaded</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 316,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31436": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/TextView#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">addPseudoClass</span><span style=\"color: #E1E4E8\">(name: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 327,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31439": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/TextView#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">deletePseudoClass</span><span style=\"color: #E1E4E8\">(name: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 333,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31442": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/TextView#bind",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/TextView#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 338,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31446": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/TextView#unbind",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">unbind</span><span style=\"color: #E1E4E8\">(property: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 339,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31449": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/TextView#addview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TextView#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 350,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31453": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/TextView#addviewcore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/TextView#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 354,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31457": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/TextView#loadview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 359,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31460": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/TextView#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_shouldDelayLayout</span><span style=\"color: #E1E4E8\">(): boolean</span></span></code>",
          "url": "/api/class/TextView#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "31462": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/TextView#unloadview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 369,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31465": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/TextView#removeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 373,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Core logic for removing a child view from this instance. Used by the framework to handle lifecycle events more centralized. Do not use outside the UI Stack implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31468": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/TextView#removeviewcore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 377,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31471": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/TextView#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">createNativeView</span><span style=\"color: #E1E4E8\">(): Object</span></span></code>",
          "url": "/api/class/TextView#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 382,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "31473": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/TextView#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">disposeNativeView</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 386,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31475": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/TextView#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">initNativeView</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 390,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31477": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/TextView#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_setupUI</span><span style=\"color: #E1E4E8\">(context: any, atIndex</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> number, parentIsLoaded</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> boolean): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 401,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "parentIsLoaded",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31482": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/TextView#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setNativeView</span><span style=\"color: #E1E4E8\">(value: any): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 407,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31485": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/TextView#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">destroyNode</span><span style=\"color: #E1E4E8\">(forceDestroyChildren</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> boolean): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31488": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/TextView#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_tearDownUI</span><span style=\"color: #E1E4E8\">(force</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> boolean): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31491": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/TextView#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_childIndexToNativeChildIndex</span><span style=\"color: #E1E4E8\">(index</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> number): number</span></span></code>",
          "url": "/api/class/TextView#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 419,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "31494": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TextView#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/TextView#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 424,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise.\nMethod is intended to be overridden by inheritors and used as \"protected\"."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "31498": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/TextView#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 428,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31501": {
      "name": "_applyXmlAttribute",
      "type": "Method",
      "url": "/api/class/TextView#applyxmlattribute",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_applyXmlAttribute</span><span style=\"color: #E1E4E8\">(attribute: string, value: string): boolean</span></span></code>",
          "url": "/api/class/TextView#applyxmlattribute-applyxmlattribute-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 436,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "This used to be the way to set attribute values in early {N} versions.\nNow attributes are expected to be set as plain properties on the view instances."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "attribute",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "31505": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/TextView#setinlinestyle",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setInlineStyle</span><span style=\"color: #E1E4E8\">(style: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31508": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/TextView#parentchanged",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/TextView#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31511": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/TextView#onresumenativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">onResumeNativeUpdates</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31513": {
      "name": "toString",
      "type": "Method",
      "url": "/api/class/TextView#tostring",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">toString</span><span style=\"color: #E1E4E8\">(): string</span></span></code>",
          "url": "/api/class/TextView#tostring-tostring-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 440,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "31517": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/TextView#inheritstylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_inheritStyleScope</span><span style=\"color: #E1E4E8\">(styleScope: StyleScope): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 447,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "StyleScope",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31520": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/TextView#dialogclosed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_dialogClosed</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 468,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31522": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/TextView#onrootviewreset",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_onRootViewReset</span><span style=\"color: #E1E4E8\">(): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 472,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "31525": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/TextView#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(name: string): any</span></span></code>",
          "url": "/api/class/TextView#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 84,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "31528": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/TextView#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">setProperty</span><span style=\"color: #E1E4E8\">(name: string, value: any): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 92,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31532": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/TextView#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/TextView#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31540": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/TextView#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #E1E4E8\">notify</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">lt;</span><span style=\"color: #79B8FF\">T</span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #E1E4E8\">gt;(</span><span style=\"color: #FFAB70\">data</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">T</span><span style=\"color: #E1E4E8\">)</span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">void</span></span></code>",
          "url": "/api/class/TextView#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 140,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notify this Observable instance with some data. This causes all event\nhandlers on the Observable instance to be called, as well as any 'global'\nevent handlers set on the instance's class."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "an object that satisfies the EventData interface, though with\nan optional 'object' property. If left undefined, the 'object' property\nwill implicitly be set as this Observable instance."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31544": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/TextView#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">notifyPropertyChange</span><span style=\"color: #E1E4E8\">(name: string, value: any, oldValue</span><span style=\"color: #F97583\">?:</span><span style=\"color: #E1E4E8\"> any): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 145,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "31549": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/TextView#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">hasListeners</span><span style=\"color: #E1E4E8\">(eventName: string): boolean</span></span></code>",
          "url": "/api/class/TextView#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 150,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "31552": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/TextView#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(propertyName: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/TextView#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "31557": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/TextView#emit",
      "flags": {},
      "inheritedFrom": {
        "fromName": "EditableTextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "<code><span class=\"line\"><span style=\"color: #B392F0\">_emit</span><span style=\"color: #E1E4E8\">(eventNames: string): </span><span style=\"color: #F97583\">void</span></span></code>",
          "url": "/api/class/TextView#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 155,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "EditableTextBase"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    }
  }
}