{
  "title": "Button",
  "hierarchy": [
    [
      {
        "text": "TextBase",
        "link": "/api/class/TextBase"
      }
    ],
    [
      {
        "text": "Button"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        5125
      ]
    },
    {
      "title": "Properties",
      "items": [
        5200,
        5684,
        5453,
        5641,
        5635,
        5397,
        5396,
        5553,
        5554,
        5552,
        5551,
        5634,
        5359,
        5682,
        5661,
        5454,
        5681,
        5171,
        5685,
        5743,
        5360,
        5357,
        5546,
        5550,
        5547,
        5549,
        5548,
        5683,
        5555,
        5688,
        5064,
        5066,
        5065,
        5190,
        5196,
        5191,
        5194,
        5198,
        5197,
        5199,
        5094,
        5192,
        5193,
        5195,
        5189,
        5545,
        5127,
        5203,
        5202,
        5201,
        5204,
        5205,
        5206,
        5172,
        5176,
        5187,
        5186,
        5181,
        5173,
        5177,
        5182,
        5183,
        5175,
        5180,
        5174,
        5184,
        5185,
        5179,
        5178,
        5207,
        5583,
        5535,
        5188,
        5538,
        5536,
        5539,
        5097,
        5315,
        5238,
        5239,
        5237,
        5098,
        5533,
        5540,
        5573,
        5574,
        5572,
        5571,
        5562,
        5531,
        5565,
        5566,
        5564,
        5563,
        5560,
        5559,
        5569,
        5570,
        5568,
        5567,
        5532,
        5561,
        5542,
        5543,
        5544,
        5148,
        5147,
        5211,
        5217,
        5582,
        5451,
        5128,
        5235,
        5233,
        5234,
        5586,
        5231,
        5358,
        5236,
        5587,
        5232,
        5061,
        5529,
        5149,
        5150,
        5095,
        5212,
        5216,
        5213,
        5215,
        5214,
        5156,
        5209,
        5208,
        5290,
        5145,
        5577,
        5576,
        5220,
        5541,
        5229,
        5230,
        5157,
        5158,
        5159,
        5160,
        5161,
        5584,
        5580,
        5581,
        5224,
        5099,
        5680,
        5578,
        5221,
        5222,
        5223,
        5534,
        5537,
        5227,
        5228,
        5062,
        5063,
        5585,
        5060,
        5449,
        5146,
        5151,
        5152,
        5154,
        5153,
        5129,
        5530,
        5450,
        5452,
        5225,
        5226,
        5579,
        5096,
        5218,
        5575,
        5219,
        5155,
        5210
      ]
    },
    {
      "title": "Accessors",
      "items": [
        5507,
        5511,
        5503
      ]
    },
    {
      "title": "Methods",
      "items": [
        5162,
        5613,
        5617,
        5662,
        5407,
        5689,
        5669,
        5327,
        5738,
        5630,
        5331,
        5735,
        5376,
        5422,
        5325,
        5329,
        5442,
        5383,
        5424,
        5439,
        5491,
        5697,
        5686,
        5460,
        5435,
        5636,
        5437,
        5416,
        5632,
        5337,
        5627,
        5497,
        5501,
        5499,
        5404,
        5413,
        5621,
        5624,
        5666,
        5166,
        5367,
        5363,
        5401,
        5398,
        5361,
        5168,
        5386,
        5457,
        5642,
        5445,
        5695,
        5487,
        5646,
        5390,
        5430,
        5352,
        5355,
        5316,
        5319,
        5468,
        5115,
        5672,
        5291,
        5606,
        5700,
        5702,
        5322,
        5484,
        5090,
        5294,
        5652,
        5675,
        5649,
        5656,
        5517,
        5343,
        5678,
        5277,
        5720,
        5311,
        5279,
        5304,
        5306,
        5308,
        5253,
        5255,
        5251,
        5297,
        5592,
        5588,
        5339,
        5732,
        5654,
        5244,
        5076,
        5271,
        5596,
        5240,
        5067,
        5723,
        5727,
        5282,
        5110,
        5130,
        5100,
        5313,
        5704,
        5105,
        5261,
        5455,
        5257,
        5604,
        5602,
        5476,
        5120,
        5515,
        5523,
        5084,
        5349,
        5712,
        5638,
        5267,
        5658,
        5341,
        5716,
        5525,
        5481,
        5610,
        5599
      ]
    }
  ],
  "reflections": {
    "5060": {
      "name": "tapEvent",
      "type": "Property",
      "url": "/api/class/Button#tapevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to tap event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "tapEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 11,
              "character": 15
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to tap event."
              }
            ]
          },
          "url": "/api/class/Button#tapevent"
        }
      ]
    },
    "5061": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/Button#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/Button#layoutchangedevent"
        }
      ]
    },
    "5062": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/Button#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/Button#showingmodallyevent"
        }
      ]
    },
    "5063": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/Button#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/Button#shownmodallyevent"
        }
      ]
    },
    "5064": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/Button#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/Button#accessibilityblurevent"
        }
      ]
    },
    "5065": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/Button#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/Button#accessibilityfocusevent"
        }
      ]
    },
    "5066": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/Button#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/Button#accessibilityfocuschangedevent"
        }
      ]
    },
    "5067": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/Button#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/Button#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 550,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "5076": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/Button#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/Button#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 560,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5084": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/Button#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/Button#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 570,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "5090": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/Button#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/Button#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 572,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "5094": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/Button#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#accessibilityperformescapeevent"
        }
      ]
    },
    "5095": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/Button#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/Button#loadedevent"
        }
      ]
    },
    "5096": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/Button#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/Button#unloadedevent"
        }
      ]
    },
    "5097": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/Button#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/Button#createdevent"
        }
      ]
    },
    "5098": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/Button#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/Button#disposenativeviewevent"
        }
      ]
    },
    "5099": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/Button#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/Button#propertychangeevent"
        }
      ]
    },
    "5100": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/Button#on-3",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/Button#on-3-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5105": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/Button#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/Button#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5110": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/Button#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/Button#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5115": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/Button#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/Button#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5120": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/Button#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/Button#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5125": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/Button#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new Button(): <a href=\"/api/class/Button\">Button</a>",
          "url": "/api/class/Button#constructor-new-button",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Please note that should you be using the "
              },
              {
                "kind": "code",
                "text": "`new Observable({})`"
              },
              {
                "kind": "text",
                "text": " constructor, it is **obsolete** since v3.0,\nand you have to migrate to the \"data/observable\" "
              },
              {
                "kind": "code",
                "text": "`fromObject({})`"
              },
              {
                "kind": "text",
                "text": " or the "
              },
              {
                "kind": "code",
                "text": "`fromObjectRecursive({})`"
              },
              {
                "kind": "text",
                "text": " functions."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/Button\">Button</a>"
        }
      ]
    },
    "5127": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/Button#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/Button.html) that represents the user interface for this component. Valid only when running on Android OS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 16,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native [android widget](http://developer.android.com/reference/android/widget/Button.html) that represents the user interface for this component. Valid only when running on Android OS."
              }
            ]
          },
          "url": "/api/class/Button#android"
        }
      ]
    },
    "5128": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/Button#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the native [UIButton](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIButton_Class/) that represents the user interface for this component. Valid only when running on iOS."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 21,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the native [UIButton](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIButton_Class/) that represents the user interface for this component. Valid only when running on iOS."
              }
            ]
          },
          "url": "/api/class/Button#ios"
        }
      ]
    },
    "5129": {
      "name": "textWrap",
      "type": "Property",
      "url": "/api/class/Button#textwrap",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets whether the Button wraps text or not."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "textWrap: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 26,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets whether the Button wraps text or not."
              }
            ]
          },
          "url": "/api/class/Button#textwrap"
        }
      ]
    },
    "5130": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/Button#on",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/Button#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\")."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"tap\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/Button#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/button/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a tap event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"tap\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5145": {
      "name": "nativeTextViewProtected",
      "type": "Property",
      "url": "/api/class/Button#nativetextviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeTextViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 14,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
              }
            ]
          },
          "url": "/api/class/Button#nativetextviewprotected"
        }
      ]
    },
    "5146": {
      "name": "text",
      "type": "Property",
      "url": "/api/class/Button#text",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "text: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the text."
              }
            ]
          },
          "url": "/api/class/Button#text"
        }
      ]
    },
    "5147": {
      "name": "formattedText",
      "type": "Property",
      "url": "/api/class/Button#formattedtext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a formatted string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "formattedText: <a href=\"/api/class/FormattedString\">FormattedString</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a formatted string."
              }
            ]
          },
          "url": "/api/class/Button#formattedtext"
        }
      ]
    },
    "5148": {
      "name": "fontSize",
      "type": "Property",
      "url": "/api/class/Button#fontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets font-size style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "fontSize: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets font-size style property."
              }
            ]
          },
          "url": "/api/class/Button#fontsize"
        }
      ]
    },
    "5149": {
      "name": "letterSpacing",
      "type": "Property",
      "url": "/api/class/Button#letterspacing",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets letterSpace style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "letterSpacing: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets letterSpace style property."
              }
            ]
          },
          "url": "/api/class/Button#letterspacing"
        }
      ]
    },
    "5150": {
      "name": "lineHeight",
      "type": "Property",
      "url": "/api/class/Button#lineheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets lineHeight style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "lineHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets lineHeight style property."
              }
            ]
          },
          "url": "/api/class/Button#lineheight"
        }
      ]
    },
    "5151": {
      "name": "textAlignment",
      "type": "Property",
      "url": "/api/class/Button#textalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text-alignment style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textAlignment: <a href=\"/api/namespace/CoreTypes#textalignmenttype\">TextAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text-alignment style property."
              }
            ]
          },
          "url": "/api/class/Button#textalignment"
        }
      ]
    },
    "5152": {
      "name": "textDecoration",
      "type": "Property",
      "url": "/api/class/Button#textdecoration",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text decorations style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textDecoration: <a href=\"/api/namespace/CoreTypes#textdecorationtype\">TextDecorationType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text decorations style property."
              }
            ]
          },
          "url": "/api/class/Button#textdecoration"
        }
      ]
    },
    "5153": {
      "name": "textTransform",
      "type": "Property",
      "url": "/api/class/Button#texttransform",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text transform style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textTransform: <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text transform style property."
              }
            ]
          },
          "url": "/api/class/Button#texttransform"
        }
      ]
    },
    "5154": {
      "name": "textShadow",
      "type": "Property",
      "url": "/api/class/Button#textshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text shadow style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textShadow: CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text shadow style property."
              }
            ]
          },
          "url": "/api/class/Button#textshadow"
        }
      ]
    },
    "5155": {
      "name": "whiteSpace",
      "type": "Property",
      "url": "/api/class/Button#whitespace",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "whiteSpace: <a href=\"/api/namespace/CoreTypes#whitespacetype\">WhiteSpaceType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/Button#whitespace"
        }
      ]
    },
    "5156": {
      "name": "maxLines",
      "type": "Property",
      "url": "/api/class/Button#maxlines",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "maxLines: MaxLinesType",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 69,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/Button#maxlines"
        }
      ]
    },
    "5157": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/Button#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/Button#padding"
        }
      ]
    },
    "5158": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/Button#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/Button#paddingbottom"
        }
      ]
    },
    "5159": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/Button#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/Button#paddingleft"
        }
      ]
    },
    "5160": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/Button#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/Button#paddingright"
        }
      ]
    },
    "5161": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/Button#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/Button#paddingtop"
        }
      ]
    },
    "5162": {
      "name": "_addChildFromBuilder",
      "type": "Method",
      "url": "/api/class/Button#addchildfrombuilder",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addChildFromBuilder(name: string, value: any): void",
          "url": "/api/class/Button#addchildfrombuilder-addchildfrombuilder-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 103,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called for every child element declared in xml.\nThis method will add a child element (value) to current element."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the element."
                  }
                ]
              }
            },
            {
              "name": "value",
              "type": "any",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Value of the element."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5166": {
      "name": "_requestLayoutOnTextChanged",
      "type": "Method",
      "url": "/api/class/Button#requestlayoutontextchanged",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_requestLayoutOnTextChanged(): void",
          "url": "/api/class/Button#requestlayoutontextchanged-requestlayoutontextchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called when the text property is changed to request layout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5168": {
      "name": "_setNativeText",
      "type": "Method",
      "url": "/api/class/Button#setnativetext",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeText(reset?: boolean): void",
          "url": "/api/class/Button#setnativetext-setnativetext-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 115,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "reset",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5171": {
      "name": "_isSingleLine",
      "type": "Property",
      "url": "/api/class/Button#issingleline",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isSingleLine: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#issingleline"
        }
      ]
    },
    "5172": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/Button#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/Button#bindingcontext"
        }
      ]
    },
    "5173": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/Button#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/Button#bordercolor"
        }
      ]
    },
    "5174": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/Button#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/Button#bordertopcolor"
        }
      ]
    },
    "5175": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/Button#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderrightcolor"
        }
      ]
    },
    "5176": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/Button#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderbottomcolor"
        }
      ]
    },
    "5177": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/Button#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderleftcolor"
        }
      ]
    },
    "5178": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/Button#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderwidth"
        }
      ]
    },
    "5179": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/Button#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/Button#bordertopwidth"
        }
      ]
    },
    "5180": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/Button#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderrightwidth"
        }
      ]
    },
    "5181": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/Button#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderbottomwidth"
        }
      ]
    },
    "5182": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/Button#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderleftwidth"
        }
      ]
    },
    "5183": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/Button#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderradius"
        }
      ]
    },
    "5184": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/Button#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/Button#bordertopleftradius"
        }
      ]
    },
    "5185": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/Button#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/Button#bordertoprightradius"
        }
      ]
    },
    "5186": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/Button#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderbottomrightradius"
        }
      ]
    },
    "5187": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/Button#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/Button#borderbottomleftradius"
        }
      ]
    },
    "5188": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/Button#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/Button#color"
        }
      ]
    },
    "5189": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/Button#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/Button#accessible"
        }
      ]
    },
    "5190": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/Button#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/Button#accessibilityhidden"
        }
      ]
    },
    "5191": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/Button#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/Button#accessibilityidentifier"
        }
      ]
    },
    "5192": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/Button#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/Button#accessibilityrole"
        }
      ]
    },
    "5193": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/Button#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/Button#accessibilitystate"
        }
      ]
    },
    "5194": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/Button#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/Button#accessibilitylabel"
        }
      ]
    },
    "5195": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/Button#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/Button#accessibilityvalue"
        }
      ]
    },
    "5196": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/Button#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/Button#accessibilityhint"
        }
      ]
    },
    "5197": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/Button#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#accessibilityliveregion"
        }
      ]
    },
    "5198": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/Button#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/Button#accessibilitylanguage"
        }
      ]
    },
    "5199": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/Button#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/Button#accessibilitymediasession"
        }
      ]
    },
    "5200": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/Button#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/Button#androidcontentdescriptionupdated"
        }
      ]
    },
    "5201": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/Button#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 290,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#automationtext"
        }
      ]
    },
    "5202": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/Button#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 295,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/Button#androidelevation"
        }
      ]
    },
    "5203": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/Button#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 300,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/Button#androiddynamicelevationoffset"
        }
      ]
    },
    "5204": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/Button#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/Button#background"
        }
      ]
    },
    "5205": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/Button#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/Button#backgroundcolor"
        }
      ]
    },
    "5206": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/Button#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/Button#backgroundimage"
        }
      ]
    },
    "5207": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/Button#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/Button#boxshadow"
        }
      ]
    },
    "5208": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/Button#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/Button#minwidth"
        }
      ]
    },
    "5209": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/Button#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/Button#minheight"
        }
      ]
    },
    "5210": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/Button#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/Button#width"
        }
      ]
    },
    "5211": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/Button#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/Button#height"
        }
      ]
    },
    "5212": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/Button#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/Button#margin"
        }
      ]
    },
    "5213": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/Button#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/Button#marginleft"
        }
      ]
    },
    "5214": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/Button#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/Button#margintop"
        }
      ]
    },
    "5215": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/Button#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/Button#marginright"
        }
      ]
    },
    "5216": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/Button#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/Button#marginbottom"
        }
      ]
    },
    "5217": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/Button#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/Button#horizontalalignment"
        }
      ]
    },
    "5218": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/Button#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/Button#verticalalignment"
        }
      ]
    },
    "5219": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/Button#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/Button#visibility"
        }
      ]
    },
    "5220": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/Button#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/Button#opacity"
        }
      ]
    },
    "5221": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/Button#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/Button#rotate"
        }
      ]
    },
    "5222": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/Button#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/Button#rotatex"
        }
      ]
    },
    "5223": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/Button#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/Button#rotatey"
        }
      ]
    },
    "5224": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/Button#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 406,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/Button#perspective"
        }
      ]
    },
    "5225": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/Button#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 411,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/Button#translatex"
        }
      ]
    },
    "5226": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/Button#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 416,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/Button#translatey"
        }
      ]
    },
    "5227": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/Button#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/Button#scalex"
        }
      ]
    },
    "5228": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/Button#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/Button#scaley"
        }
      ]
    },
    "5229": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/Button#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 433,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/Button#originx"
        }
      ]
    },
    "5230": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/Button#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/Button#originy"
        }
      ]
    },
    "5231": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/Button#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 443,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/Button#isenabled"
        }
      ]
    },
    "5232": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/Button#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/Button#isuserinteractionenabled"
        }
      ]
    },
    "5233": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/Button#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/Button#iosoverflowsafearea"
        }
      ]
    },
    "5234": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/Button#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/Button#iosoverflowsafeareaenabled"
        }
      ]
    },
    "5235": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/Button#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/Button#iosignoresafearea"
        }
      ]
    },
    "5236": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/Button#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/Button#islayoutvalid"
        }
      ]
    },
    "5237": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/Button#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 474,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/Button#csstype"
        }
      ]
    },
    "5238": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/Button#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 476,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#cssclasses"
        }
      ]
    },
    "5239": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/Button#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 477,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#csspseudoclasses"
        }
      ]
    },
    "5240": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/Button#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/Button#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 485,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5244": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/Button#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/Button#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 496,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5251": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/Button#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/Button#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "5253": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/Button#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/Button#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 506,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "5255": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/Button#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/Button#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 508,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "5257": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/Button#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/Button#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5261": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/Button#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/Button#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 525,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5267": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/Button#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/Button#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 532,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5271": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/Button#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/Button#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 541,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5277": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/Button#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/Button#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 578,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "5279": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/Button#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/Button#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 580,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "5282": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/Button#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/Button#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 588,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5290": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/Button#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/Button#modal"
        }
      ]
    },
    "5291": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/Button#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/Button#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "5294": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/Button#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/Button#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "5297": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/Button#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/Button#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "5304": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/Button#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/Button#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "5306": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/Button#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/Button#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "5308": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/Button#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/Button#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "5311": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/Button#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/Button#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "5313": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/Button#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/Button#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "5315": {
      "name": "css",
      "type": "Property",
      "url": "/api/class/Button#css",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "css: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 673,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
              }
            ]
          },
          "url": "/api/class/Button#css"
        }
      ]
    },
    "5316": {
      "name": "addCss",
      "type": "Method",
      "url": "/api/class/Button#addcss",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCss(cssString: string): void",
          "url": "/api/class/Button#addcss-addcss-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 680,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a new values to current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssString",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid css which will be added to current css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5319": {
      "name": "addCssFile",
      "type": "Method",
      "url": "/api/class/Button#addcssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCssFile(cssFileName: string): void",
          "url": "/api/class/Button#addcssfile-addcssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 687,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the content of the file to the current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5322": {
      "name": "changeCssFile",
      "type": "Method",
      "url": "/api/class/Button#changecssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "changeCssFile(cssFileName: string): void",
          "url": "/api/class/Button#changecssfile-changecssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 694,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the current css to the content of the file."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5325": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/Button#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/Button#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 697,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "5327": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/Button#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/Button#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 703,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "5329": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/Button#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/Button#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 709,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "5331": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/Button#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/Button#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 711,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5337": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/Button#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/Button#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 716,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5339": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/Button#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/Button#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 721,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "5341": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/Button#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/Button#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5343": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/Button#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/Button#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 732,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5349": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/Button#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/Button#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 746,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5352": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/Button#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/Button#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 751,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5355": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/Button#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/Button#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 756,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5357": {
      "name": "_modalParent",
      "type": "Property",
      "url": "/api/class/Button#modalparent",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_modalParent?: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 762,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#modalparent"
        }
      ]
    },
    "5358": {
      "name": "isLayoutRequired",
      "type": "Property",
      "url": "/api/class/Button#islayoutrequired",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLayoutRequired: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#islayoutrequired"
        }
      ]
    },
    "5359": {
      "name": "_gestureObservers",
      "type": "Property",
      "url": "/api/class/Button#gestureobservers",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_gestureObservers: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 770,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#gestureobservers"
        }
      ]
    },
    "5360": {
      "name": "_manager",
      "type": "Property",
      "url": "/api/class/Button#manager",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "androidx.fragment.app.FragmentManager"
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_manager: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 775,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "androidx.fragment.app.FragmentManager"
              }
            ]
          },
          "url": "/api/class/Button#manager"
        }
      ]
    },
    "5361": {
      "name": "_setNativeClipToBounds",
      "type": "Method",
      "url": "/api/class/Button#setnativecliptobounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeClipToBounds(): void",
          "url": "/api/class/Button#setnativecliptobounds-setnativecliptobounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 779,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5363": {
      "name": "_setCurrentMeasureSpecs",
      "type": "Method",
      "url": "/api/class/Button#setcurrentmeasurespecs",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentMeasureSpecs(\n  widthMeasureSpec: number,\n  heightMeasureSpec: number\n): boolean",
          "url": "/api/class/Button#setcurrentmeasurespecs-setcurrentmeasurespecs-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 784,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by measure method to cache measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5367": {
      "name": "_setCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/Button#setcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentLayoutBounds(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): {\n  boundsChanged: boolean\n}",
          "url": "/api/class/Button#setcurrentlayoutbounds-setcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 789,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by layout method to cache view bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  boundsChanged: boolean\n}"
        }
      ]
    },
    "5376": {
      "name": "_getCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/Button#getcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getCurrentLayoutBounds(): {\n  bottom: number\n  left: number\n  right: number\n}",
          "url": "/api/class/Button#getcurrentlayoutbounds-getcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 794,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Return view bounds."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: number\n  left: number\n  right: number\n}"
        }
      ]
    },
    "5383": {
      "name": "_goToVisualState",
      "type": "Method",
      "url": "/api/class/Button#gotovisualstate",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_goToVisualState(state: string): any",
          "url": "/api/class/Button#gotovisualstate-gotovisualstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 803,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "state",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5386": {
      "name": "_setNativeViewFrame",
      "type": "Method",
      "url": "/api/class/Button#setnativeviewframe",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeViewFrame(nativeView: any, frame: any): void",
          "url": "/api/class/Button#setnativeviewframe-setnativeviewframe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 807,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "nativeView",
              "type": "any",
              "flags": {}
            },
            {
              "name": "frame",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5390": {
      "name": "_updateEffectiveLayoutValues",
      "type": "Method",
      "url": "/api/class/Button#updateeffectivelayoutvalues",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateEffectiveLayoutValues(\n  parentWidthMeasureSize: number,\n  parentWidthMeasureMode: number,\n  parentHeightMeasureSize: number,\n  parentHeightMeasureMode: number\n): void",
          "url": "/api/class/Button#updateeffectivelayoutvalues-updateeffectivelayoutvalues-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 812,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "parentWidthMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentWidthMeasureMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureMode",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5396": {
      "name": "_currentWidthMeasureSpec",
      "type": "Property",
      "url": "/api/class/Button#currentwidthmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_currentWidthMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 816,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#currentwidthmeasurespec"
        }
      ]
    },
    "5397": {
      "name": "_currentHeightMeasureSpec",
      "type": "Property",
      "url": "/api/class/Button#currentheightmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_currentHeightMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 820,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#currentheightmeasurespec"
        }
      ]
    },
    "5398": {
      "name": "_setMinWidthNative",
      "type": "Method",
      "url": "/api/class/Button#setminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinWidthNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/Button#setminwidthnative-setminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 824,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5401": {
      "name": "_setMinHeightNative",
      "type": "Method",
      "url": "/api/class/Button#setminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinHeightNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/Button#setminheightnative-setminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 828,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5404": {
      "name": "_redrawNativeBackground",
      "type": "Method",
      "url": "/api/class/Button#redrawnativebackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_redrawNativeBackground(value: any): void",
          "url": "/api/class/Button#redrawnativebackground-redrawnativebackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 832,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5407": {
      "name": "_applyBackground",
      "type": "Method",
      "url": "/api/class/Button#applybackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyBackground(\n  background: Background,\n  isBorderDrawable: boolean,\n  onlyColor: boolean,\n  backgroundDrawable: any\n): any",
          "url": "/api/class/Button#applybackground-applybackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 837,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "method called on Android to apply the background. This allows custom handling"
              }
            ]
          },
          "parameters": [
            {
              "name": "background",
              "type": "Background",
              "flags": {}
            },
            {
              "name": "isBorderDrawable",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "onlyColor",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "backgroundDrawable",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5413": {
      "name": "_removeAnimation",
      "type": "Method",
      "url": "/api/class/Button#removeanimation",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeAnimation(animation: <a href=\"/api/class/Animation\">Animation</a>): boolean",
          "url": "/api/class/Button#removeanimation-removeanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 842,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "animation",
              "type": "<a href=\"/api/class/Animation\">Animation</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5416": {
      "name": "_onLivesync",
      "type": "Method",
      "url": "/api/class/Button#onlivesync",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onLivesync(context?: { path: string }): boolean",
          "url": "/api/class/Button#onlivesync-onlivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 846,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5422": {
      "name": "_getFragmentManager",
      "type": "Method",
      "url": "/api/class/Button#getfragmentmanager",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getFragmentManager(): any",
          "url": "/api/class/Button#getfragmentmanager-getfragmentmanager-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 850,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "5424": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/Button#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/Button#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 851,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5430": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/Button#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/Button#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 859,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5435": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/Button#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/Button#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 864,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5437": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/Button#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/Button#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 869,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5439": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/Button#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/Button#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5442": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/Button#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/Button#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 880,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "5445": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/Button#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/Button#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 885,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "5449": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/Button#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#testid"
        }
      ]
    },
    "5450": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/Button#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#touchanimation"
        }
      ]
    },
    "5451": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/Button#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#ignoretouchanimation"
        }
      ]
    },
    "5452": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/Button#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#touchdelay"
        }
      ]
    },
    "5453": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/Button#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#closemodalcallback"
        }
      ]
    },
    "5454": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/Button#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 40,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#islayoutvalid"
        }
      ]
    },
    "5455": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/Button#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/Button#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 56,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5457": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/Button#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/Button#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 61,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5460": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/Button#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/Button#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 62,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5468": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/Button#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/Button#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 64,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5476": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/Button#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: any, thisArg?: any): void",
          "url": "/api/class/Button#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5481": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/Button#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/Button#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "5484": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/Button#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/Button#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 70,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5487": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/Button#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/Button#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 72,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5491": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/Button#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/Button#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5497": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/Button#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/Button#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5499": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/Button#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/Button#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5501": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/Button#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/Button#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5503": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/Button#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/Button#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 117,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "5507": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/Button#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/Button#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 119,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "5511": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/Button#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/Button#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "5515": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/Button#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/Button#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 206,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5517": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/Button#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/Button#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5523": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/Button#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/Button#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5525": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/Button#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/Button#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5529": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/Button#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#left"
        }
      ]
    },
    "5530": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/Button#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 109,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#top"
        }
      ]
    },
    "5531": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/Button#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveleft"
        }
      ]
    },
    "5532": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/Button#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivetop"
        }
      ]
    },
    "5533": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/Button#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#dock"
        }
      ]
    },
    "5534": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/Button#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#row"
        }
      ]
    },
    "5535": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/Button#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 114,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#col"
        }
      ]
    },
    "5536": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/Button#column",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`column`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`col`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`column`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`col`"
              }
            ]
          },
          "url": "/api/class/Button#column"
        }
      ]
    },
    "5537": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/Button#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#rowspan"
        }
      ]
    },
    "5538": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/Button#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#colspan"
        }
      ]
    },
    "5539": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/Button#columnspan",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`columnSpan`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`colSpan`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 124,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`columnSpan`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`colSpan`"
              }
            ]
          },
          "url": "/api/class/Button#columnspan"
        }
      ]
    },
    "5540": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/Button#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 125,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#domnode"
        }
      ]
    },
    "5541": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/Button#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#order"
        }
      ]
    },
    "5542": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/Button#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#flexgrow"
        }
      ]
    },
    "5543": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/Button#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 129,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#flexshrink"
        }
      ]
    },
    "5544": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/Button#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 130,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#flexwrapbefore"
        }
      ]
    },
    "5545": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/Button#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#alignself"
        }
      ]
    },
    "5546": {
      "name": "_moduleName",
      "type": "Property",
      "url": "/api/class/Button#modulename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Module name when the view is a module root. Otherwise, it is undefined."
          }
        ]
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_moduleName?: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 137,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Module name when the view is a module root. Otherwise, it is undefined."
              }
            ]
          },
          "url": "/api/class/Button#modulename"
        }
      ]
    },
    "5547": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/Button#oldleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#oldleft"
        }
      ]
    },
    "5548": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/Button#oldtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#oldtop"
        }
      ]
    },
    "5549": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/Button#oldright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#oldright"
        }
      ]
    },
    "5550": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/Button#oldbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 155,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#oldbottom"
        }
      ]
    },
    "5551": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/Button#defaultpaddingtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#defaultpaddingtop"
        }
      ]
    },
    "5552": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/Button#defaultpaddingright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#defaultpaddingright"
        }
      ]
    },
    "5553": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/Button#defaultpaddingbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#defaultpaddingbottom"
        }
      ]
    },
    "5554": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/Button#defaultpaddingleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 171,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#defaultpaddingleft"
        }
      ]
    },
    "5555": {
      "name": "_suspendedUpdates",
      "type": "Property",
      "url": "/api/class/Button#suspendedupdates",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_suspendedUpdates: {}",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 180,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
              }
            ]
          },
          "url": "/api/class/Button#suspendedupdates"
        }
      ]
    },
    "5559": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/Button#effectiveminwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 205,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveminwidth"
        }
      ]
    },
    "5560": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/Button#effectiveminheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 206,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveminheight"
        }
      ]
    },
    "5561": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/Button#effectivewidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 207,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivewidth"
        }
      ]
    },
    "5562": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/Button#effectiveheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveheight"
        }
      ]
    },
    "5563": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/Button#effectivemargintop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivemargintop"
        }
      ]
    },
    "5564": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/Button#effectivemarginright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivemarginright"
        }
      ]
    },
    "5565": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/Button#effectivemarginbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivemarginbottom"
        }
      ]
    },
    "5566": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/Button#effectivemarginleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivemarginleft"
        }
      ]
    },
    "5567": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/Button#effectivepaddingtop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivepaddingtop"
        }
      ]
    },
    "5568": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/Button#effectivepaddingright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivepaddingright"
        }
      ]
    },
    "5569": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/Button#effectivepaddingbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivepaddingbottom"
        }
      ]
    },
    "5570": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/Button#effectivepaddingleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivepaddingleft"
        }
      ]
    },
    "5571": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/Button#effectivebordertopwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectivebordertopwidth"
        }
      ]
    },
    "5572": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/Button#effectiveborderrightwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveborderrightwidth"
        }
      ]
    },
    "5573": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/Button#effectiveborderbottomwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveborderbottomwidth"
        }
      ]
    },
    "5574": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/Button#effectiveborderleftwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#effectiveborderleftwidth"
        }
      ]
    },
    "5575": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/Button#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/Button#viewcontroller"
        }
      ]
    },
    "5576": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/Button#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 253,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/Button#nativeviewprotected"
        }
      ]
    },
    "5577": {
      "name": "nativeView",
      "type": "Property",
      "url": "/api/class/Button#nativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeView: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 254,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#nativeview"
        }
      ]
    },
    "5578": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/Button#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 261,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/Button#reusable"
        }
      ]
    },
    "5579": {
      "name": "typeName",
      "type": "Property",
      "url": "/api/class/Button#typename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "typeName: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 266,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "url": "/api/class/Button#typename"
        }
      ]
    },
    "5580": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/Button#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 271,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/Button#parent"
        }
      ]
    },
    "5581": {
      "name": "parentNode",
      "type": "Property",
      "url": "/api/class/Button#parentnode",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the template parent or the native parent. Sets the template parent."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "parentNode: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 276,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "url": "/api/class/Button#parentnode"
        }
      ]
    },
    "5582": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/Button#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 281,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/Button#id"
        }
      ]
    },
    "5583": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/Button#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 286,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/Button#classname"
        }
      ]
    },
    "5584": {
      "name": "page",
      "type": "Property",
      "url": "/api/class/Button#page",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets owner page. This is a read-only property."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "page: <a href=\"/api/class/Page\">Page</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 291,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/Button#page"
        }
      ]
    },
    "5585": {
      "name": "style",
      "type": "Property",
      "url": "/api/class/Button#style",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the style object associated to this view."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "style: <a href=\"/api/class/Style\">Style</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "url": "/api/class/Button#style"
        }
      ]
    },
    "5586": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/Button#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isCollapsed: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
              }
            ]
          },
          "url": "/api/class/Button#iscollapsed"
        }
      ]
    },
    "5587": {
      "name": "isLoaded",
      "type": "Property",
      "url": "/api/class/Button#isloaded",
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLoaded: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 303,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#isloaded"
        }
      ]
    },
    "5588": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/Button#getviewbyid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/Button#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 308,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "5592": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/Button#getviewbydomid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(id: number): T",
          "url": "/api/class/Button#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 313,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "5596": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/Button#loadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 319,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5599": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/Button#unloadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5602": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/Button#onunloaded",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/Button#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 328,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5604": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/Button#onresumenativeupdates",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/Button#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 329,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5606": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/Button#bind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/Button#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 331,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5610": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/Button#unbind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/Button#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 332,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5613": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/Button#addview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/Button#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5617": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/Button#addviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/Button#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 349,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5621": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/Button#removeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 351,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5624": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/Button#removeviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5627": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/Button#parentchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 356,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5630": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/Button#dialogclosed",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/Button#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5632": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/Button#onrootviewreset",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/Button#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5634": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/Button#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 366,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#domid"
        }
      ]
    },
    "5635": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/Button#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_cssState: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 368,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#cssstate"
        }
      ]
    },
    "5636": {
      "name": "_onCssStateChange",
      "type": "Method",
      "url": "/api/class/Button#oncssstatechange",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onCssStateChange(): void",
          "url": "/api/class/Button#oncssstatechange-oncssstatechange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 374,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies each child's css state for change, recursively.\nEither the style scope, className or id properties were changed."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5638": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/Button#setinlinestyle",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/Button#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 381,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5641": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/Button#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 383,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#context"
        }
      ]
    },
    "5642": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/Button#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number): void",
          "url": "/api/class/Button#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 389,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5646": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/Button#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/Button#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5649": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/Button#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/Button#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 402,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5652": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/Button#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/Button#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 408,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "5654": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/Button#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/Button#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5656": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/Button#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/Button#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5658": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/Button#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(view: any): void",
          "url": "/api/class/Button#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 430,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5661": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/Button#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 432,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#isaddedtonativevisualtree"
        }
      ]
    },
    "5662": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/Button#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/Button#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5666": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/Button#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/Button#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5669": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/Button#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/Button#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "5672": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/Button#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/Button#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 446,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5675": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/Button#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/Button#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5678": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/Button#ensuredomnode",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): any",
          "url": "/api/class/Button#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 459,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "5680": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/Button#recyclenativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 461,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#recyclenativeview"
        }
      ]
    },
    "5681": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/Button#ispaddingrelative",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 466,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#ispaddingrelative"
        }
      ]
    },
    "5682": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/Button#ignoreflexminwidthheightreset",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 471,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#ignoreflexminwidthheightreset"
        }
      ]
    },
    "5683": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/Button#stylescope",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_styleScope: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 473,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/Button#stylescope"
        }
      ]
    },
    "5684": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/Button#automaticallyadjustsscrollviewinsets",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 478,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "5685": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/Button#isstylescopehost",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 482,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/Button#isstylescopehost"
        }
      ]
    },
    "5686": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/Button#layoutparent",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/Button#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 487,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5688": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/Button#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/Button#suspendnativeupdatescount"
        }
      ]
    },
    "5689": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/Button#batchupdate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/Button#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "5695": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/Button#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/Button#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "5697": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/Button#inheritstylescope",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: any): void",
          "url": "/api/class/Button#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5700": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/Button#callloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/Button#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5702": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/Button#callunloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/Button#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 526,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "5704": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/Button#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/Button#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5712": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/Button#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/Button#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5716": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/Button#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/Button#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5720": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/Button#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/Button#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5723": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/Button#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/Button#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5727": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/Button#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/Button#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "5732": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/Button#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/Button#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "5735": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/Button#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/Button#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "5738": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/Button#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/Button#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "5743": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/Button#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/Button#isviewbase"
        }
      ]
    }
  }
}