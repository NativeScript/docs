{
  "title": "RootLayout",
  "hierarchy": [
    [
      {
        "text": "GridLayout",
        "link": "/api/class/GridLayout"
      }
    ],
    [
      {
        "text": "RootLayout"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        32682
      ]
    },
    {
      "title": "Properties",
      "items": [
        32831,
        33361,
        33126,
        33318,
        33312,
        33070,
        33069,
        33230,
        33231,
        33229,
        33228,
        33311,
        33032,
        33359,
        33338,
        33127,
        33358,
        33362,
        33420,
        33033,
        33030,
        33223,
        33227,
        33224,
        33226,
        33225,
        33360,
        33232,
        33365,
        32621,
        32623,
        32622,
        32821,
        32827,
        32822,
        32825,
        32829,
        32828,
        32830,
        32651,
        32823,
        32824,
        32826,
        32820,
        33222,
        32801,
        32834,
        32833,
        32832,
        32835,
        32836,
        32837,
        32803,
        32807,
        32818,
        32817,
        32812,
        32804,
        32808,
        32813,
        32814,
        32806,
        32811,
        32805,
        32815,
        32816,
        32810,
        32809,
        32838,
        33260,
        32787,
        33212,
        32819,
        33215,
        33213,
        33216,
        32654,
        32988,
        32868,
        32869,
        32867,
        32655,
        33210,
        33217,
        33250,
        33251,
        33249,
        33248,
        33239,
        33208,
        33242,
        33243,
        33241,
        33240,
        33237,
        33236,
        33246,
        33247,
        33245,
        33244,
        33209,
        33238,
        33219,
        33220,
        33221,
        32842,
        32848,
        33259,
        33124,
        32802,
        32865,
        32800,
        32864,
        33263,
        32862,
        33031,
        32866,
        33264,
        32788,
        32863,
        32618,
        33206,
        32652,
        32843,
        32847,
        32844,
        32846,
        32845,
        32840,
        32839,
        32963,
        33254,
        33253,
        32851,
        33218,
        32860,
        32861,
        32782,
        32783,
        32784,
        32785,
        32786,
        33261,
        33257,
        33258,
        32855,
        32656,
        33357,
        33255,
        32852,
        32853,
        32854,
        33211,
        33214,
        32858,
        32859,
        32619,
        32620,
        33262,
        33122,
        33207,
        33123,
        33125,
        32856,
        32857,
        33256,
        32653,
        32849,
        33252,
        32850,
        32841
      ]
    },
    {
      "title": "Accessors",
      "items": [
        33180,
        33184,
        33176,
        33188
      ]
    },
    {
      "title": "Methods",
      "items": [
        33290,
        33294,
        33339,
        33080,
        33366,
        33346,
        33000,
        33415,
        33307,
        33004,
        33412,
        33049,
        33095,
        32998,
        33002,
        33115,
        33056,
        33097,
        33112,
        33164,
        33374,
        33363,
        33133,
        33108,
        32738,
        32745,
        33313,
        33110,
        33089,
        33309,
        32735,
        32741,
        33010,
        33304,
        33170,
        33174,
        33172,
        33077,
        32769,
        33086,
        33298,
        33301,
        33343,
        32796,
        32792,
        33040,
        33036,
        33074,
        33071,
        33034,
        33059,
        33130,
        33319,
        33118,
        33372,
        33160,
        33323,
        32772,
        33063,
        32789,
        33103,
        33025,
        33028,
        32757,
        32714,
        32708,
        32989,
        32992,
        33141,
        32672,
        33349,
        32711,
        32964,
        33283,
        32694,
        33377,
        33379,
        32995,
        32688,
        32698,
        33157,
        32705,
        32647,
        32967,
        33329,
        33352,
        33326,
        33333,
        33194,
        33016,
        32775,
        33355,
        32907,
        33397,
        32984,
        32751,
        32754,
        32749,
        32590,
        32731,
        32597,
        32909,
        32977,
        32979,
        32981,
        32883,
        32885,
        32881,
        32604,
        32733,
        32611,
        32970,
        32700,
        33269,
        33265,
        33012,
        33409,
        33331,
        32760,
        32874,
        32633,
        32901,
        33273,
        32870,
        32624,
        33400,
        33404,
        32912,
        32667,
        32920,
        32657,
        32986,
        33381,
        32662,
        32891,
        33128,
        32887,
        33281,
        33279,
        32684,
        32702,
        32764,
        32767,
        32721,
        32724,
        33149,
        32677,
        32726,
        32729,
        33192,
        33200,
        32641,
        33022,
        33389,
        32593,
        32600,
        33315,
        32897,
        33335,
        33014,
        33393,
        32607,
        32614,
        33202,
        33154,
        32692,
        33287,
        33276
      ]
    }
  ],
  "reflections": {
    "32590": {
      "name": "getColumn",
      "type": "Method",
      "url": "/api/class/RootLayout#getcolumn",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getColumn(view: <a href=\"/api/class/View\">View</a>): number",
          "url": "/api/class/RootLayout#getcolumn-getcolumn-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 53,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the Column attached property from a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32593": {
      "name": "setColumn",
      "type": "Method",
      "url": "/api/class/RootLayout#setcolumn",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setColumn(view: <a href=\"/api/class/View\">View</a>, value: number): void",
          "url": "/api/class/RootLayout#setcolumn-setcolumn-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 58,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the value of the Column attached property to a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32597": {
      "name": "getColumnSpan",
      "type": "Method",
      "url": "/api/class/RootLayout#getcolumnspan",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getColumnSpan(view: <a href=\"/api/class/View\">View</a>): number",
          "url": "/api/class/RootLayout#getcolumnspan-getcolumnspan-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 63,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the ColumnSpan attached property from a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32600": {
      "name": "setColumnSpan",
      "type": "Method",
      "url": "/api/class/RootLayout#setcolumnspan",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setColumnSpan(view: <a href=\"/api/class/View\">View</a>, value: number): void",
          "url": "/api/class/RootLayout#setcolumnspan-setcolumnspan-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 68,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the value of the ColumnSpan attached property to a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32604": {
      "name": "getRow",
      "type": "Method",
      "url": "/api/class/RootLayout#getrow",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getRow(view: <a href=\"/api/class/View\">View</a>): number",
          "url": "/api/class/RootLayout#getrow-getrow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 73,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the Row attached property from a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32607": {
      "name": "setRow",
      "type": "Method",
      "url": "/api/class/RootLayout#setrow",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setRow(view: <a href=\"/api/class/View\">View</a>, value: number): void",
          "url": "/api/class/RootLayout#setrow-setrow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 78,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the value of the Row attached property to a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32611": {
      "name": "getRowSpan",
      "type": "Method",
      "url": "/api/class/RootLayout#getrowspan",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getRowSpan(view: <a href=\"/api/class/View\">View</a>): number",
          "url": "/api/class/RootLayout#getrowspan-getrowspan-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 83,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the RowSpan attached property from a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32614": {
      "name": "setRowSpan",
      "type": "Method",
      "url": "/api/class/RootLayout#setrowspan",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setRowSpan(view: <a href=\"/api/class/View\">View</a>, value: number): void",
          "url": "/api/class/RootLayout#setrowspan-setrowspan-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 88,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the value of the RowSpan attached property to a given View."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32618": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/RootLayout#layoutchangedevent"
        }
      ]
    },
    "32619": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/RootLayout#showingmodallyevent"
        }
      ]
    },
    "32620": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/RootLayout#shownmodallyevent"
        }
      ]
    },
    "32621": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityblurevent"
        }
      ]
    },
    "32622": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityfocusevent"
        }
      ]
    },
    "32623": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityfocuschangedevent"
        }
      ]
    },
    "32624": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/RootLayout#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/RootLayout#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 550,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "32633": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/RootLayout#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/RootLayout#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 560,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32641": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/RootLayout#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/RootLayout#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 570,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32647": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/RootLayout#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/RootLayout#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 572,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32651": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#accessibilityperformescapeevent"
        }
      ]
    },
    "32652": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/RootLayout#loadedevent"
        }
      ]
    },
    "32653": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/RootLayout#unloadedevent"
        }
      ]
    },
    "32654": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/RootLayout#createdevent"
        }
      ]
    },
    "32655": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/RootLayout#disposenativeviewevent"
        }
      ]
    },
    "32656": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/RootLayout#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 81,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/RootLayout#propertychangeevent"
        }
      ]
    },
    "32657": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/RootLayout#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 91,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32662": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/RootLayout#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32667": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/RootLayout#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32672": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/RootLayout#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32677": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/RootLayout#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32682": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/RootLayout#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new RootLayout(): <a href=\"/api/class/RootLayout\">RootLayout</a>",
          "url": "/api/class/RootLayout#constructor-new-rootlayout",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 76,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Please note that should you be using the "
              },
              {
                "kind": "code",
                "text": "`new Observable({})`"
              },
              {
                "kind": "text",
                "text": " constructor, it is **obsolete** since v3.0,\nand you have to migrate to the \"data/observable\" "
              },
              {
                "kind": "code",
                "text": "`fromObject({})`"
              },
              {
                "kind": "text",
                "text": " or the "
              },
              {
                "kind": "code",
                "text": "`fromObjectRecursive({})`"
              },
              {
                "kind": "text",
                "text": " functions."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/RootLayout\">RootLayout</a>"
        }
      ]
    },
    "32684": {
      "name": "open",
      "type": "Method",
      "url": "/api/class/RootLayout#open",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "open(view: <a href=\"/api/class/View\">View</a>, options?: <a href=\"/api/interface/RootLayoutOptions\">RootLayoutOptions</a>): Promise&lt;void&gt;",
          "url": "/api/class/RootLayout#open-open-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 5,
              "character": 1
            }
          ],
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/RootLayoutOptions\">RootLayoutOptions</a>",
              "flags": {},
              "defaultValue": "{}"
            }
          ],
          "returns": "Promise&lt;void&gt;"
        }
      ]
    },
    "32688": {
      "name": "close",
      "type": "Method",
      "url": "/api/class/RootLayout#close",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "close(view: <a href=\"/api/class/View\">View</a>, exitTo?: TransitionAnimation): Promise&lt;void&gt;",
          "url": "/api/class/RootLayout#close-close-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 6,
              "character": 1
            }
          ],
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "exitTo",
              "type": "TransitionAnimation",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "Promise&lt;void&gt;"
        }
      ]
    },
    "32692": {
      "name": "topmost",
      "type": "Method",
      "url": "/api/class/RootLayout#topmost",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "topmost(): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/RootLayout#topmost-topmost-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 7,
              "character": 1
            }
          ],
          "parameters": [],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "32694": {
      "name": "bringToFront",
      "type": "Method",
      "url": "/api/class/RootLayout#bringtofront",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bringToFront(view: <a href=\"/api/class/View\">View</a>, animated?: boolean): Promise&lt;void&gt;",
          "url": "/api/class/RootLayout#bringtofront-bringtofront-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 8,
              "character": 1
            }
          ],
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "animated",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "Promise&lt;void&gt;"
        }
      ]
    },
    "32698": {
      "name": "closeAll",
      "type": "Method",
      "url": "/api/class/RootLayout#closeall",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeAll(): Promise&lt;void[]&gt;",
          "url": "/api/class/RootLayout#closeall-closeall-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 9,
              "character": 1
            }
          ],
          "parameters": [],
          "returns": "Promise&lt;void[]&gt;"
        }
      ]
    },
    "32700": {
      "name": "getShadeCover",
      "type": "Method",
      "url": "/api/class/RootLayout#getshadecover",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getShadeCover(): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/RootLayout#getshadecover-getshadecover-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 10,
              "character": 1
            }
          ],
          "parameters": [],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "32702": {
      "name": "openShadeCover",
      "type": "Method",
      "url": "/api/class/RootLayout#openshadecover",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "openShadeCover(options?: <a href=\"/api/interface/ShadeCoverOptions\">ShadeCoverOptions</a>): void",
          "url": "/api/class/RootLayout#openshadecover-openshadecover-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 11,
              "character": 1
            }
          ],
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShadeCoverOptions\">ShadeCoverOptions</a>",
              "flags": {},
              "defaultValue": "{}"
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32705": {
      "name": "closeShadeCover",
      "type": "Method",
      "url": "/api/class/RootLayout#closeshadecover",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeShadeCover(shadeCoverOptions?: <a href=\"/api/interface/ShadeCoverOptions\">ShadeCoverOptions</a>): Promise&lt;void&gt;",
          "url": "/api/class/RootLayout#closeshadecover-closeshadecover-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/root-layout/index.d.ts",
              "line": 12,
              "character": 1
            }
          ],
          "parameters": [
            {
              "name": "shadeCoverOptions",
              "type": "<a href=\"/api/interface/ShadeCoverOptions\">ShadeCoverOptions</a>",
              "flags": {},
              "defaultValue": "{}"
            }
          ],
          "returns": "Promise&lt;void&gt;"
        }
      ]
    },
    "32708": {
      "name": "addColumn",
      "type": "Method",
      "url": "/api/class/RootLayout#addcolumn",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addColumn(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#addcolumn-addcolumn-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 93,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a column specification to a GridLayout."
              }
            ]
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32711": {
      "name": "addRow",
      "type": "Method",
      "url": "/api/class/RootLayout#addrow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addRow(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#addrow-addrow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 98,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a row specification to a GridLayout."
              }
            ]
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32714": {
      "name": "addChildAtCell",
      "type": "Method",
      "url": "/api/class/RootLayout#addchildatcell",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addChildAtCell(view: <a href=\"/api/class/View\">View</a>, row: number, column: number, rowSpan?: number, columnSpan?: number): void",
          "url": "/api/class/RootLayout#addchildatcell-addchildatcell-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 103,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a child at specific cell in GridLayout. Optional rowSpan and columnSpan attributes"
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "row",
              "type": "number",
              "flags": {}
            },
            {
              "name": "column",
              "type": "number",
              "flags": {}
            },
            {
              "name": "rowSpan",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "columnSpan",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32721": {
      "name": "removeColumn",
      "type": "Method",
      "url": "/api/class/RootLayout#removecolumn",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeColumn(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#removecolumn-removecolumn-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes a column specification from a GridLayout."
              }
            ]
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32724": {
      "name": "removeColumns",
      "type": "Method",
      "url": "/api/class/RootLayout#removecolumns",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeColumns(): void",
          "url": "/api/class/RootLayout#removecolumns-removecolumns-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes all column specifications from a GridLayout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "32726": {
      "name": "removeRow",
      "type": "Method",
      "url": "/api/class/RootLayout#removerow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeRow(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#removerow-removerow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes a row specification from a GridLayout."
              }
            ]
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32729": {
      "name": "removeRows",
      "type": "Method",
      "url": "/api/class/RootLayout#removerows",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeRows(): void",
          "url": "/api/class/RootLayout#removerows-removerows-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 123,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes all row specifications from a GridLayout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "32731": {
      "name": "getColumns",
      "type": "Method",
      "url": "/api/class/RootLayout#getcolumns",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getColumns(): <a href=\"/api/class/ItemSpec\">ItemSpec</a>[]",
          "url": "/api/class/RootLayout#getcolumns-getcolumns-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets array of column specifications defined on this instance of GridLayout."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>[]"
        }
      ]
    },
    "32733": {
      "name": "getRows",
      "type": "Method",
      "url": "/api/class/RootLayout#getrows",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getRows(): <a href=\"/api/class/ItemSpec\">ItemSpec</a>[]",
          "url": "/api/class/RootLayout#getrows-getrows-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 133,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets array of row specifications defined on this instance of GridLayout."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>[]"
        }
      ]
    },
    "32735": {
      "name": "_onRowAdded",
      "type": "Method",
      "url": "/api/class/RootLayout#onrowadded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRowAdded(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#onrowadded-onrowadded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 139,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32738": {
      "name": "_onColumnAdded",
      "type": "Method",
      "url": "/api/class/RootLayout#oncolumnadded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onColumnAdded(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>): void",
          "url": "/api/class/RootLayout#oncolumnadded-oncolumnadded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32741": {
      "name": "_onRowRemoved",
      "type": "Method",
      "url": "/api/class/RootLayout#onrowremoved",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRowRemoved(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>, index: number): void",
          "url": "/api/class/RootLayout#onrowremoved-onrowremoved-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            },
            {
              "name": "index",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32745": {
      "name": "_onColumnRemoved",
      "type": "Method",
      "url": "/api/class/RootLayout#oncolumnremoved",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onColumnRemoved(itemSpec: <a href=\"/api/class/ItemSpec\">ItemSpec</a>, index: number): void",
          "url": "/api/class/RootLayout#oncolumnremoved-oncolumnremoved-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/grid-layout/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "itemSpec",
              "type": "<a href=\"/api/class/ItemSpec\">ItemSpec</a>",
              "flags": {}
            },
            {
              "name": "index",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32749": {
      "name": "getChildrenCount",
      "type": "Method",
      "url": "/api/class/RootLayout#getchildrencount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getChildrenCount(): number",
          "url": "/api/class/RootLayout#getchildrencount-getchildrencount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 12,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the number of children in this Layout."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "32751": {
      "name": "getChildAt",
      "type": "Method",
      "url": "/api/class/RootLayout#getchildat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getChildAt(index: number): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/RootLayout#getchildat-getchildat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 18,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the view at the specified position."
              }
            ]
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The position at which to get the child from."
                  }
                ]
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "32754": {
      "name": "getChildIndex",
      "type": "Method",
      "url": "/api/class/RootLayout#getchildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getChildIndex(child: <a href=\"/api/class/View\">View</a>): number",
          "url": "/api/class/RootLayout#getchildindex-getchildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the position of the child view"
              }
            ]
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The child view that we are looking for."
                  }
                ]
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "32757": {
      "name": "addChild",
      "type": "Method",
      "url": "/api/class/RootLayout#addchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addChild(view: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/RootLayout#addchild-addchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 30,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the view to children array."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be added to the end of the children array."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32760": {
      "name": "insertChild",
      "type": "Method",
      "url": "/api/class/RootLayout#insertchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "insertChild(child: <a href=\"/api/class/View\">View</a>, atIndex: number): void",
          "url": "/api/class/RootLayout#insertchild-insertchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 37,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inserts the view to children array at the specified index."
              }
            ]
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The insertion index."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32764": {
      "name": "removeChild",
      "type": "Method",
      "url": "/api/class/RootLayout#removechild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeChild(view: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/RootLayout#removechild-removechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 43,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes the specified view from the children array."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to remove from the children array."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32767": {
      "name": "removeChildren",
      "type": "Method",
      "url": "/api/class/RootLayout#removechildren",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeChildren(): void",
          "url": "/api/class/RootLayout#removechildren-removechildren-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 48,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes all views in this layout."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "32769": {
      "name": "_registerLayoutChild",
      "type": "Method",
      "url": "/api/class/RootLayout#registerlayoutchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_registerLayoutChild(child: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/RootLayout#registerlayoutchild-registerlayoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 53,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "INTERNAL. Used by the layout system."
              }
            ]
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32772": {
      "name": "_unregisterLayoutChild",
      "type": "Method",
      "url": "/api/class/RootLayout#unregisterlayoutchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_unregisterLayoutChild(child: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/RootLayout#unregisterlayoutchild-unregisterlayoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 58,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "INTERNAL. Used by the layout system."
              }
            ]
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32775": {
      "name": "eachLayoutChild",
      "type": "Method",
      "url": "/api/class/RootLayout#eachlayoutchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachLayoutChild(callback: (child: <a href=\"/api/class/View\">View</a>, isLast: boolean) => void): void",
          "url": "/api/class/RootLayout#eachlayoutchild-eachlayoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Calls the callback for each child that should be laid out."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/View\">View</a>, isLast: boolean) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The callback"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32782": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/RootLayout#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 69,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/RootLayout#padding"
        }
      ]
    },
    "32783": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/RootLayout#paddingbottom"
        }
      ]
    },
    "32784": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/RootLayout#paddingleft"
        }
      ]
    },
    "32785": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/RootLayout#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/RootLayout#paddingright"
        }
      ]
    },
    "32786": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/RootLayout#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/RootLayout#paddingtop"
        }
      ]
    },
    "32787": {
      "name": "clipToBounds",
      "type": "Property",
      "url": "/api/class/RootLayout#cliptobounds",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether to clip the content of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "clipToBounds: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether to clip the content of this layout."
              }
            ]
          },
          "url": "/api/class/RootLayout#cliptobounds"
        }
      ]
    },
    "32788": {
      "name": "isPassThroughParentEnabled",
      "type": "Property",
      "url": "/api/class/RootLayout#ispassthroughparentenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether touch event should pass through to a parent view of the\nlayout container in case an interactive child view did not handle it.\nDefault value of this property is false. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isPassThroughParentEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/layouts/layout-base.d.ts",
              "line": 101,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether touch event should pass through to a parent view of the\nlayout container in case an interactive child view did not handle it.\nDefault value of this property is false. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#ispassthroughparentenabled"
        }
      ]
    },
    "32789": {
      "name": "_updateNativeLayoutParams",
      "type": "Method",
      "url": "/api/class/RootLayout#updatenativelayoutparams",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateNativeLayoutParams(child: <a href=\"/api/class/View\">View</a>): void",
          "url": "/api/class/RootLayout#updatenativelayoutparams-updatenativelayoutparams-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 906,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32792": {
      "name": "_setChildMinWidthNative",
      "type": "Method",
      "url": "/api/class/RootLayout#setchildminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setChildMinWidthNative(child: <a href=\"/api/class/View\">View</a>, value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/RootLayout#setchildminwidthnative-setchildminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 910,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32796": {
      "name": "_setChildMinHeightNative",
      "type": "Method",
      "url": "/api/class/RootLayout#setchildminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setChildMinHeightNative(child: <a href=\"/api/class/View\">View</a>, value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/RootLayout#setchildminheightnative-setchildminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 914,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32800": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/RootLayout#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 895,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/RootLayout#iosoverflowsafearea"
        }
      ]
    },
    "32801": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/RootLayout#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 138,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
              }
            ]
          },
          "url": "/api/class/RootLayout#android"
        }
      ]
    },
    "32802": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/RootLayout#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 144,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
              }
            ]
          },
          "url": "/api/class/RootLayout#ios"
        }
      ]
    },
    "32803": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/RootLayout#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/RootLayout#bindingcontext"
        }
      ]
    },
    "32804": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/RootLayout#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#bordercolor"
        }
      ]
    },
    "32805": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/RootLayout#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#bordertopcolor"
        }
      ]
    },
    "32806": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/RootLayout#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderrightcolor"
        }
      ]
    },
    "32807": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/RootLayout#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderbottomcolor"
        }
      ]
    },
    "32808": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/RootLayout#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderleftcolor"
        }
      ]
    },
    "32809": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderwidth"
        }
      ]
    },
    "32810": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#bordertopwidth"
        }
      ]
    },
    "32811": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderrightwidth"
        }
      ]
    },
    "32812": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderbottomwidth"
        }
      ]
    },
    "32813": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderleftwidth"
        }
      ]
    },
    "32814": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/RootLayout#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderradius"
        }
      ]
    },
    "32815": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/RootLayout#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#bordertopleftradius"
        }
      ]
    },
    "32816": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/RootLayout#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#bordertoprightradius"
        }
      ]
    },
    "32817": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/RootLayout#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderbottomrightradius"
        }
      ]
    },
    "32818": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/RootLayout#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#borderbottomleftradius"
        }
      ]
    },
    "32819": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/RootLayout#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#color"
        }
      ]
    },
    "32820": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/RootLayout#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessible"
        }
      ]
    },
    "32821": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityhidden"
        }
      ]
    },
    "32822": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityidentifier"
        }
      ]
    },
    "32823": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityrole"
        }
      ]
    },
    "32824": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilitystate"
        }
      ]
    },
    "32825": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilitylabel"
        }
      ]
    },
    "32826": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityvalue"
        }
      ]
    },
    "32827": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilityhint"
        }
      ]
    },
    "32828": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#accessibilityliveregion"
        }
      ]
    },
    "32829": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilitylanguage"
        }
      ]
    },
    "32830": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/RootLayout#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/RootLayout#accessibilitymediasession"
        }
      ]
    },
    "32831": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/RootLayout#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/RootLayout#androidcontentdescriptionupdated"
        }
      ]
    },
    "32832": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/RootLayout#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 290,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#automationtext"
        }
      ]
    },
    "32833": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/RootLayout#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 295,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/RootLayout#androidelevation"
        }
      ]
    },
    "32834": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/RootLayout#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 300,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/RootLayout#androiddynamicelevationoffset"
        }
      ]
    },
    "32835": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/RootLayout#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/RootLayout#background"
        }
      ]
    },
    "32836": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/RootLayout#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#backgroundcolor"
        }
      ]
    },
    "32837": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/RootLayout#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#backgroundimage"
        }
      ]
    },
    "32838": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/RootLayout#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#boxshadow"
        }
      ]
    },
    "32839": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/RootLayout#minwidth"
        }
      ]
    },
    "32840": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/RootLayout#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/RootLayout#minheight"
        }
      ]
    },
    "32841": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/RootLayout#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#width"
        }
      ]
    },
    "32842": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/RootLayout#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#height"
        }
      ]
    },
    "32843": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/RootLayout#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/RootLayout#margin"
        }
      ]
    },
    "32844": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#marginleft"
        }
      ]
    },
    "32845": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/RootLayout#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#margintop"
        }
      ]
    },
    "32846": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/RootLayout#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#marginright"
        }
      ]
    },
    "32847": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#marginbottom"
        }
      ]
    },
    "32848": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/RootLayout#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#horizontalalignment"
        }
      ]
    },
    "32849": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/RootLayout#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#verticalalignment"
        }
      ]
    },
    "32850": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/RootLayout#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#visibility"
        }
      ]
    },
    "32851": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/RootLayout#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/RootLayout#opacity"
        }
      ]
    },
    "32852": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/RootLayout#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#rotate"
        }
      ]
    },
    "32853": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/RootLayout#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#rotatex"
        }
      ]
    },
    "32854": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/RootLayout#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#rotatey"
        }
      ]
    },
    "32855": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/RootLayout#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 406,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/RootLayout#perspective"
        }
      ]
    },
    "32856": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/RootLayout#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 411,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/RootLayout#translatex"
        }
      ]
    },
    "32857": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/RootLayout#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 416,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/RootLayout#translatey"
        }
      ]
    },
    "32858": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/RootLayout#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#scalex"
        }
      ]
    },
    "32859": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/RootLayout#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#scaley"
        }
      ]
    },
    "32860": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/RootLayout#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 433,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#originx"
        }
      ]
    },
    "32861": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/RootLayout#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#originy"
        }
      ]
    },
    "32862": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/RootLayout#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 443,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#isenabled"
        }
      ]
    },
    "32863": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/RootLayout#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/RootLayout#isuserinteractionenabled"
        }
      ]
    },
    "32864": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/RootLayout#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/RootLayout#iosoverflowsafeareaenabled"
        }
      ]
    },
    "32865": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/RootLayout#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/RootLayout#iosignoresafearea"
        }
      ]
    },
    "32866": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/RootLayout#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/RootLayout#islayoutvalid"
        }
      ]
    },
    "32867": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/RootLayout#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 474,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/RootLayout#csstype"
        }
      ]
    },
    "32868": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/RootLayout#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 476,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#cssclasses"
        }
      ]
    },
    "32869": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/RootLayout#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 477,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#csspseudoclasses"
        }
      ]
    },
    "32870": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/RootLayout#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/RootLayout#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 485,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32874": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/RootLayout#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/RootLayout#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 496,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32881": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/RootLayout#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/RootLayout#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "32883": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/RootLayout#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/RootLayout#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 506,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "32885": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/RootLayout#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/RootLayout#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 508,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "32887": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/RootLayout#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/RootLayout#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32891": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/RootLayout#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/RootLayout#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 525,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32897": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/RootLayout#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/RootLayout#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 532,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32901": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/RootLayout#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 541,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32907": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/RootLayout#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/RootLayout#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 578,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "32909": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/RootLayout#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/RootLayout#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 580,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "32912": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/RootLayout#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 588,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "32920": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/RootLayout#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 596,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 601,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 606,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 612,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/RootLayout#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 617,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 622,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "32963": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/RootLayout#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/RootLayout#modal"
        }
      ]
    },
    "32964": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/RootLayout#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/RootLayout#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "32967": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/RootLayout#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/RootLayout#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "32970": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/RootLayout#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/RootLayout#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "32977": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/RootLayout#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/RootLayout#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "32979": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/RootLayout#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/RootLayout#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "32981": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/RootLayout#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/RootLayout#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "32984": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/RootLayout#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/RootLayout#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "32986": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/RootLayout#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/RootLayout#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "32988": {
      "name": "css",
      "type": "Property",
      "url": "/api/class/RootLayout#css",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "css: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 673,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid css string which will be applied for all nested UI components (based on css rules)."
              }
            ]
          },
          "url": "/api/class/RootLayout#css"
        }
      ]
    },
    "32989": {
      "name": "addCss",
      "type": "Method",
      "url": "/api/class/RootLayout#addcss",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCss(cssString: string): void",
          "url": "/api/class/RootLayout#addcss-addcss-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 680,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a new values to current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssString",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid css which will be added to current css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32992": {
      "name": "addCssFile",
      "type": "Method",
      "url": "/api/class/RootLayout#addcssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addCssFile(cssFileName: string): void",
          "url": "/api/class/RootLayout#addcssfile-addcssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 687,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds the content of the file to the current css."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32995": {
      "name": "changeCssFile",
      "type": "Method",
      "url": "/api/class/RootLayout#changecssfile",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "changeCssFile(cssFileName: string): void",
          "url": "/api/class/RootLayout#changecssfile-changecssfile-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 694,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the current css to the content of the file."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A valid file name (from the application root) which contains a valid css."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "32998": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/RootLayout#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/RootLayout#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 697,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "33000": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/RootLayout#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/RootLayout#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 703,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33002": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/RootLayout#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/RootLayout#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 709,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "33004": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/RootLayout#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/RootLayout#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 711,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33010": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/RootLayout#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/RootLayout#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 716,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33012": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/RootLayout#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/RootLayout#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 721,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33014": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/RootLayout#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/RootLayout#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33016": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/RootLayout#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/RootLayout#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 732,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33022": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/RootLayout#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/RootLayout#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 746,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33025": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/RootLayout#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/RootLayout#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 751,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33028": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/RootLayout#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/RootLayout#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 756,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33030": {
      "name": "_modalParent",
      "type": "Property",
      "url": "/api/class/RootLayout#modalparent",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_modalParent?: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 762,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#modalparent"
        }
      ]
    },
    "33031": {
      "name": "isLayoutRequired",
      "type": "Property",
      "url": "/api/class/RootLayout#islayoutrequired",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isLayoutRequired: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#islayoutrequired"
        }
      ]
    },
    "33032": {
      "name": "_gestureObservers",
      "type": "Property",
      "url": "/api/class/RootLayout#gestureobservers",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_gestureObservers: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 770,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#gestureobservers"
        }
      ]
    },
    "33033": {
      "name": "_manager",
      "type": "Property",
      "url": "/api/class/RootLayout#manager",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "androidx.fragment.app.FragmentManager"
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_manager: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 775,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "androidx.fragment.app.FragmentManager"
              }
            ]
          },
          "url": "/api/class/RootLayout#manager"
        }
      ]
    },
    "33034": {
      "name": "_setNativeClipToBounds",
      "type": "Method",
      "url": "/api/class/RootLayout#setnativecliptobounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeClipToBounds(): void",
          "url": "/api/class/RootLayout#setnativecliptobounds-setnativecliptobounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 779,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33036": {
      "name": "_setCurrentMeasureSpecs",
      "type": "Method",
      "url": "/api/class/RootLayout#setcurrentmeasurespecs",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentMeasureSpecs(\n  widthMeasureSpec: number,\n  heightMeasureSpec: number\n): boolean",
          "url": "/api/class/RootLayout#setcurrentmeasurespecs-setcurrentmeasurespecs-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 784,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by measure method to cache measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33040": {
      "name": "_setCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/RootLayout#setcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setCurrentLayoutBounds(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): {\n  boundsChanged: boolean\n}",
          "url": "/api/class/RootLayout#setcurrentlayoutbounds-setcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 789,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called by layout method to cache view bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  boundsChanged: boolean\n}"
        }
      ]
    },
    "33049": {
      "name": "_getCurrentLayoutBounds",
      "type": "Method",
      "url": "/api/class/RootLayout#getcurrentlayoutbounds",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getCurrentLayoutBounds(): {\n  bottom: number\n  left: number\n  right: number\n}",
          "url": "/api/class/RootLayout#getcurrentlayoutbounds-getcurrentlayoutbounds-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 794,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Return view bounds."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: number\n  left: number\n  right: number\n}"
        }
      ]
    },
    "33056": {
      "name": "_goToVisualState",
      "type": "Method",
      "url": "/api/class/RootLayout#gotovisualstate",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_goToVisualState(state: string): any",
          "url": "/api/class/RootLayout#gotovisualstate-gotovisualstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 803,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "state",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33059": {
      "name": "_setNativeViewFrame",
      "type": "Method",
      "url": "/api/class/RootLayout#setnativeviewframe",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setNativeViewFrame(nativeView: any, frame: any): void",
          "url": "/api/class/RootLayout#setnativeviewframe-setnativeviewframe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 807,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "nativeView",
              "type": "any",
              "flags": {}
            },
            {
              "name": "frame",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33063": {
      "name": "_updateEffectiveLayoutValues",
      "type": "Method",
      "url": "/api/class/RootLayout#updateeffectivelayoutvalues",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateEffectiveLayoutValues(\n  parentWidthMeasureSize: number,\n  parentWidthMeasureMode: number,\n  parentHeightMeasureSize: number,\n  parentHeightMeasureMode: number\n): void",
          "url": "/api/class/RootLayout#updateeffectivelayoutvalues-updateeffectivelayoutvalues-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 812,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "parentWidthMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentWidthMeasureMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "parentHeightMeasureMode",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33069": {
      "name": "_currentWidthMeasureSpec",
      "type": "Property",
      "url": "/api/class/RootLayout#currentwidthmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_currentWidthMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 816,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#currentwidthmeasurespec"
        }
      ]
    },
    "33070": {
      "name": "_currentHeightMeasureSpec",
      "type": "Property",
      "url": "/api/class/RootLayout#currentheightmeasurespec",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_currentHeightMeasureSpec: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 820,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#currentheightmeasurespec"
        }
      ]
    },
    "33071": {
      "name": "_setMinWidthNative",
      "type": "Method",
      "url": "/api/class/RootLayout#setminwidthnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinWidthNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/RootLayout#setminwidthnative-setminwidthnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 824,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33074": {
      "name": "_setMinHeightNative",
      "type": "Method",
      "url": "/api/class/RootLayout#setminheightnative",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setMinHeightNative(value: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>): void",
          "url": "/api/class/RootLayout#setminheightnative-setminheightnative-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 828,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "<a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33077": {
      "name": "_redrawNativeBackground",
      "type": "Method",
      "url": "/api/class/RootLayout#redrawnativebackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_redrawNativeBackground(value: any): void",
          "url": "/api/class/RootLayout#redrawnativebackground-redrawnativebackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 832,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33080": {
      "name": "_applyBackground",
      "type": "Method",
      "url": "/api/class/RootLayout#applybackground",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyBackground(\n  background: Background,\n  isBorderDrawable: boolean,\n  onlyColor: boolean,\n  backgroundDrawable: any\n): any",
          "url": "/api/class/RootLayout#applybackground-applybackground-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 837,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "method called on Android to apply the background. This allows custom handling"
              }
            ]
          },
          "parameters": [
            {
              "name": "background",
              "type": "Background",
              "flags": {}
            },
            {
              "name": "isBorderDrawable",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "onlyColor",
              "type": "boolean",
              "flags": {}
            },
            {
              "name": "backgroundDrawable",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33086": {
      "name": "_removeAnimation",
      "type": "Method",
      "url": "/api/class/RootLayout#removeanimation",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeAnimation(animation: <a href=\"/api/class/Animation\">Animation</a>): boolean",
          "url": "/api/class/RootLayout#removeanimation-removeanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 842,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "animation",
              "type": "<a href=\"/api/class/Animation\">Animation</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33089": {
      "name": "_onLivesync",
      "type": "Method",
      "url": "/api/class/RootLayout#onlivesync",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onLivesync(context?: { path: string }): boolean",
          "url": "/api/class/RootLayout#onlivesync-onlivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 846,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33095": {
      "name": "_getFragmentManager",
      "type": "Method",
      "url": "/api/class/RootLayout#getfragmentmanager",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getFragmentManager(): any",
          "url": "/api/class/RootLayout#getfragmentmanager-getfragmentmanager-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 850,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "33097": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/RootLayout#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/RootLayout#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 851,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33103": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/RootLayout#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/RootLayout#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 859,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33108": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/RootLayout#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/RootLayout#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 864,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33110": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/RootLayout#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/RootLayout#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 869,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33112": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/RootLayout#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/RootLayout#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33115": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/RootLayout#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/RootLayout#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 880,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "33118": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/RootLayout#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/RootLayout#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 885,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "33122": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/RootLayout#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#testid"
        }
      ]
    },
    "33123": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/RootLayout#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#touchanimation"
        }
      ]
    },
    "33124": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/RootLayout#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#ignoretouchanimation"
        }
      ]
    },
    "33125": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/RootLayout#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#touchdelay"
        }
      ]
    },
    "33126": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/RootLayout#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#closemodalcallback"
        }
      ]
    },
    "33127": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/RootLayout#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 40,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#islayoutvalid"
        }
      ]
    },
    "33128": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/RootLayout#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/RootLayout#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 56,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33130": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/RootLayout#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/RootLayout#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 61,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33133": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/RootLayout#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/RootLayout#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 62,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33141": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/RootLayout#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/RootLayout#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 64,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33149": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/RootLayout#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: any, thisArg?: any): void",
          "url": "/api/class/RootLayout#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33154": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/RootLayout#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/RootLayout#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "33157": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/RootLayout#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/RootLayout#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 70,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33160": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/RootLayout#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/RootLayout#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 72,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33164": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/RootLayout#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/RootLayout#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33170": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/RootLayout#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/RootLayout#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33172": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/RootLayout#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/RootLayout#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33174": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/RootLayout#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/RootLayout#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33176": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/RootLayout#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/RootLayout#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 117,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "33180": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/RootLayout#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/RootLayout#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 119,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "33184": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/RootLayout#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/RootLayout#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "33188": {
      "name": "textTransform",
      "type": "Accessor",
      "url": "/api/class/RootLayout#texttransform",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get textTransform(): <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "url": "/api/class/RootLayout#texttransform-texttransform-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 159,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>"
        }
      ]
    },
    "33192": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/RootLayout#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/RootLayout#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 206,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33194": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/RootLayout#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/RootLayout#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33200": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/RootLayout#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33202": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/RootLayout#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/RootLayout#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33206": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/RootLayout#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 108,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#left"
        }
      ]
    },
    "33207": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/RootLayout#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 109,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#top"
        }
      ]
    },
    "33208": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 110,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveleft"
        }
      ]
    },
    "33209": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 111,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivetop"
        }
      ]
    },
    "33210": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/RootLayout#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 112,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#dock"
        }
      ]
    },
    "33211": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/RootLayout#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 113,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#row"
        }
      ]
    },
    "33212": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/RootLayout#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 114,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#col"
        }
      ]
    },
    "33213": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/RootLayout#column",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`column`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`col`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 118,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`column`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`col`"
              }
            ]
          },
          "url": "/api/class/RootLayout#column"
        }
      ]
    },
    "33214": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/RootLayout#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 119,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#rowspan"
        }
      ]
    },
    "33215": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/RootLayout#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 120,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#colspan"
        }
      ]
    },
    "33216": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/RootLayout#columnspan",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Setting "
          },
          {
            "kind": "code",
            "text": "`columnSpan`"
          },
          {
            "kind": "text",
            "text": " property is the same as "
          },
          {
            "kind": "code",
            "text": "`colSpan`"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 124,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setting "
              },
              {
                "kind": "code",
                "text": "`columnSpan`"
              },
              {
                "kind": "text",
                "text": " property is the same as "
              },
              {
                "kind": "code",
                "text": "`colSpan`"
              }
            ]
          },
          "url": "/api/class/RootLayout#columnspan"
        }
      ]
    },
    "33217": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/RootLayout#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 125,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#domnode"
        }
      ]
    },
    "33218": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/RootLayout#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#order"
        }
      ]
    },
    "33219": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/RootLayout#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 128,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#flexgrow"
        }
      ]
    },
    "33220": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/RootLayout#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 129,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#flexshrink"
        }
      ]
    },
    "33221": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/RootLayout#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 130,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#flexwrapbefore"
        }
      ]
    },
    "33222": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/RootLayout#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#alignself"
        }
      ]
    },
    "33223": {
      "name": "_moduleName",
      "type": "Property",
      "url": "/api/class/RootLayout#modulename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Module name when the view is a module root. Otherwise, it is undefined."
          }
        ]
      },
      "flags": {
        "isPrivate": true,
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_moduleName?: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 137,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Module name when the view is a module root. Otherwise, it is undefined."
              }
            ]
          },
          "url": "/api/class/RootLayout#modulename"
        }
      ]
    },
    "33224": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#oldleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#oldleft"
        }
      ]
    },
    "33225": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/RootLayout#oldtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 147,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#oldtop"
        }
      ]
    },
    "33226": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/RootLayout#oldright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 151,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#oldright"
        }
      ]
    },
    "33227": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#oldbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 155,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#oldbottom"
        }
      ]
    },
    "33228": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/RootLayout#defaultpaddingtop",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#defaultpaddingtop"
        }
      ]
    },
    "33229": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/RootLayout#defaultpaddingright",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#defaultpaddingright"
        }
      ]
    },
    "33230": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#defaultpaddingbottom",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#defaultpaddingbottom"
        }
      ]
    },
    "33231": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#defaultpaddingleft",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 171,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#defaultpaddingleft"
        }
      ]
    },
    "33232": {
      "name": "_suspendedUpdates",
      "type": "Property",
      "url": "/api/class/RootLayout#suspendedupdates",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_suspendedUpdates: {}",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 180,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A property bag holding suspended native updates.\nNative setters that had to execute while there was no native view,\nor the view was detached from the visual tree etc. will accumulate in this object,\nand will be applied when all prerequisites are met."
              }
            ]
          },
          "url": "/api/class/RootLayout#suspendedupdates"
        }
      ]
    },
    "33236": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveminwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 205,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveminwidth"
        }
      ]
    },
    "33237": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveminheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 206,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveminheight"
        }
      ]
    },
    "33238": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivewidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 207,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivewidth"
        }
      ]
    },
    "33239": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveheight"
        }
      ]
    },
    "33240": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivemargintop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivemargintop"
        }
      ]
    },
    "33241": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivemarginright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivemarginright"
        }
      ]
    },
    "33242": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivemarginbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivemarginbottom"
        }
      ]
    },
    "33243": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivemarginleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivemarginleft"
        }
      ]
    },
    "33244": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivepaddingtop",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivepaddingtop"
        }
      ]
    },
    "33245": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivepaddingright",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivepaddingright"
        }
      ]
    },
    "33246": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivepaddingbottom",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivepaddingbottom"
        }
      ]
    },
    "33247": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivepaddingleft",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivepaddingleft"
        }
      ]
    },
    "33248": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectivebordertopwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectivebordertopwidth"
        }
      ]
    },
    "33249": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveborderrightwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveborderrightwidth"
        }
      ]
    },
    "33250": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveborderbottomwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveborderbottomwidth"
        }
      ]
    },
    "33251": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/RootLayout#effectiveborderleftwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#effectiveborderleftwidth"
        }
      ]
    },
    "33252": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/RootLayout#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/RootLayout#viewcontroller"
        }
      ]
    },
    "33253": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/RootLayout#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 253,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/RootLayout#nativeviewprotected"
        }
      ]
    },
    "33254": {
      "name": "nativeView",
      "type": "Property",
      "url": "/api/class/RootLayout#nativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "nativeView: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 254,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#nativeview"
        }
      ]
    },
    "33255": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/RootLayout#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 261,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/RootLayout#reusable"
        }
      ]
    },
    "33256": {
      "name": "typeName",
      "type": "Property",
      "url": "/api/class/RootLayout#typename",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "typeName: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 266,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "url": "/api/class/RootLayout#typename"
        }
      ]
    },
    "33257": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/RootLayout#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 271,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/RootLayout#parent"
        }
      ]
    },
    "33258": {
      "name": "parentNode",
      "type": "Property",
      "url": "/api/class/RootLayout#parentnode",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the template parent or the native parent. Sets the template parent."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "parentNode: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 276,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "url": "/api/class/RootLayout#parentnode"
        }
      ]
    },
    "33259": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/RootLayout#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 281,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#id"
        }
      ]
    },
    "33260": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/RootLayout#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 286,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#classname"
        }
      ]
    },
    "33261": {
      "name": "page",
      "type": "Property",
      "url": "/api/class/RootLayout#page",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets owner page. This is a read-only property."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "page: <a href=\"/api/class/Page\">Page</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 291,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/RootLayout#page"
        }
      ]
    },
    "33262": {
      "name": "style",
      "type": "Property",
      "url": "/api/class/RootLayout#style",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the style object associated to this view."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "style: <a href=\"/api/class/Style\">Style</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "url": "/api/class/RootLayout#style"
        }
      ]
    },
    "33263": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/RootLayout#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isCollapsed: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nReadonly property"
              }
            ]
          },
          "url": "/api/class/RootLayout#iscollapsed"
        }
      ]
    },
    "33264": {
      "name": "isLoaded",
      "type": "Property",
      "url": "/api/class/RootLayout#isloaded",
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "isLoaded: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 303,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#isloaded"
        }
      ]
    },
    "33265": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/RootLayout#getviewbyid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/RootLayout#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 308,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "33269": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/RootLayout#getviewbydomid",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(id: number): T",
          "url": "/api/class/RootLayout#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 313,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "33273": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/RootLayout#loadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 319,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33276": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/RootLayout#unloadview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33279": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/RootLayout#onunloaded",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/RootLayout#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 328,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33281": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/RootLayout#onresumenativeupdates",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/RootLayout#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 329,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33283": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/RootLayout#bind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/RootLayout#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 331,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33287": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/RootLayout#unbind",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/RootLayout#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 332,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33290": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/RootLayout#addview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/RootLayout#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33294": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/RootLayout#addviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/RootLayout#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 349,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33298": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/RootLayout#removeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 351,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33301": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/RootLayout#removeviewcore",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33304": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/RootLayout#parentchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 356,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33307": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/RootLayout#dialogclosed",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/RootLayout#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33309": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/RootLayout#onrootviewreset",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/RootLayout#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33311": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/RootLayout#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 366,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#domid"
        }
      ]
    },
    "33312": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/RootLayout#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_cssState: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 368,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#cssstate"
        }
      ]
    },
    "33313": {
      "name": "_onCssStateChange",
      "type": "Method",
      "url": "/api/class/RootLayout#oncssstatechange",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onCssStateChange(): void",
          "url": "/api/class/RootLayout#oncssstatechange-oncssstatechange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 374,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies each child's css state for change, recursively.\nEither the style scope, className or id properties were changed."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33315": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/RootLayout#setinlinestyle",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/RootLayout#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 381,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33318": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/RootLayout#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 383,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#context"
        }
      ]
    },
    "33319": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/RootLayout#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number): void",
          "url": "/api/class/RootLayout#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 389,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33323": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/RootLayout#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/RootLayout#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33326": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/RootLayout#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/RootLayout#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 402,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33329": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/RootLayout#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 408,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "33331": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/RootLayout#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33333": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/RootLayout#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33335": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/RootLayout#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(view: any): void",
          "url": "/api/class/RootLayout#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 430,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33338": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/RootLayout#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 432,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#isaddedtonativevisualtree"
        }
      ]
    },
    "33339": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/RootLayout#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/RootLayout#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33343": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/RootLayout#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/RootLayout#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33346": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/RootLayout#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/RootLayout#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "33349": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/RootLayout#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/RootLayout#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 446,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33352": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/RootLayout#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/RootLayout#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33355": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/RootLayout#ensuredomnode",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): any",
          "url": "/api/class/RootLayout#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 459,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "33357": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/RootLayout#recyclenativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 461,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#recyclenativeview"
        }
      ]
    },
    "33358": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/RootLayout#ispaddingrelative",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 466,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#ispaddingrelative"
        }
      ]
    },
    "33359": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/RootLayout#ignoreflexminwidthheightreset",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 471,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#ignoreflexminwidthheightreset"
        }
      ]
    },
    "33360": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/RootLayout#stylescope",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_styleScope: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 473,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "url": "/api/class/RootLayout#stylescope"
        }
      ]
    },
    "33361": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/RootLayout#automaticallyadjustsscrollviewinsets",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 478,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "33362": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/RootLayout#isstylescopehost",
      "comment": {
        "summary": []
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 482,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "url": "/api/class/RootLayout#isstylescopehost"
        }
      ]
    },
    "33363": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/RootLayout#layoutparent",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/RootLayout#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 487,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33365": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/RootLayout#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/RootLayout#suspendnativeupdatescount"
        }
      ]
    },
    "33366": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/RootLayout#batchupdate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/RootLayout#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 501,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "33372": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/RootLayout#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/RootLayout#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33374": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/RootLayout#inheritstylescope",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: any): void",
          "url": "/api/class/RootLayout#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33377": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/RootLayout#callloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/RootLayout#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33379": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/RootLayout#callunloaded",
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/RootLayout#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 526,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": []
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33381": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/RootLayout#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/RootLayout#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 104,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33389": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/RootLayout#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/RootLayout#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 138,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33393": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/RootLayout#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/RootLayout#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 143,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33397": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/RootLayout#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/RootLayout#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 148,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33400": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/RootLayout#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/RootLayout#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the event provided in the data.eventName."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The data associated with the event."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33404": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/RootLayout#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(propertyName: string, value: any, oldValue?: any): void",
          "url": "/api/class/RootLayout#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33409": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/RootLayout#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/RootLayout#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 165,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33412": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/RootLayout#emit",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): any",
          "url": "/api/class/RootLayout#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 167,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33415": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/RootLayout#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(name: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/RootLayout#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 172,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "33420": {
      "name": "_isViewBase",
      "type": "Property",
      "url": "/api/class/RootLayout#isviewbase",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Filed to use instead of instanceof ViewBase."
          }
        ]
      },
      "flags": {
        "isPrivate": true
      },
      "inheritedFrom": {
        "fromName": "GridLayout"
      },
      "signatures": [
        {
          "code": "_isViewBase: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 179,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "GridLayout"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Filed to use instead of instanceof ViewBase."
              }
            ]
          },
          "url": "/api/class/RootLayout#isviewbase"
        }
      ]
    }
  }
}